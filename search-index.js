var searchIndex = {};
searchIndex["dishub"] = {"doc":"","items":[[4,"Error","dishub","Enum representing all possible ways the application can fail.",null,null],[13,"OverrideNoForce","","The specified file would need to be overriden but was not allowed to.",0,null],[13,"RequiredFileFromSubsystemNonexistant","","The specified subsystem needs to be run beforehand to produce the specified file.",0,null],[12,"subsys","dishub::Error","The subsystem that needs to be run.",0,null],[12,"fname","","The file the specified subsystem produces.",0,null],[13,"FileParsingFailed","dishub","Failed to parse the specified file because of the specified errors.",0,null],[12,"desc","dishub::Error","The file that failed to parse.",0,null],[12,"errors","","The parsing errors that occured.",0,null],[13,"Io","dishub","An I/O error occured.",0,null],[12,"desc","dishub::Error","The file the I/O operation regards.",0,null],[12,"op","","The failed operation.",0,null],[13,"WatchedDoesNotExist","dishub","A watched item does not exist.",0,null],[12,"tp","dishub::Error","The type of nonexistant resource.",0,null],[12,"name","","The name of the nonexistant resource.",0,null],[13,"LoginFailed","dishub","Failed to log in to the specified service.",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"print_error","","Write the error message to the specified output stream.",0,null],[11,"exit_value","","Get the executable exit value from an `Error` instance.",0,null],[0,"ops","","Main functions doing actual work.",null,null],[3,"Feed","dishub::ops","A feed to be checked on GitHub and sent to Discord.",null,null],[12,"subject","","The thing to watch.",1,null],[12,"server","","The Discord server ID to post to.",1,null],[12,"channel","","The Discord channel ID to post to.",1,null],[12,"e_tag","","The ETag of the last received event pack.",1,null],[12,"latest","","The time of the last received event pack.",1,null],[12,"next_min","","The minimal time the next poll is allowed.",1,null],[12,"latest_event","","Latest event&#39;s ID, this is required because GH API returns *all* events despite passing an ETag.",1,null],[3,"AppTokens","","The tokens needed to authenticate the app to GitHub.",null,null],[12,"github","","GitHub OAuth authentication token",2,null],[12,"discord","","Discord bot user token",2,null],[3,"Event","","",null,null],[12,"created_at","","",3,null],[12,"actor","","",3,null],[12,"repo","","",3,null],[12,"id","","",3,null],[12,"payload","","",3,null],[4,"EventPayload","","",null,null],[13,"CommitComment","","",4,null],[12,"content","dishub::ops::EventPayload","",4,null],[12,"commit_id","","",4,null],[12,"id","","",4,null],[13,"Create","dishub::ops","",4,null],[12,"ref_type","dishub::ops::EventPayload","",4,null],[12,"ref_name","","",4,null],[12,"master_branch","","",4,null],[12,"repo_description","","",4,null],[13,"Delete","dishub::ops","",4,null],[12,"ref_type","dishub::ops::EventPayload","",4,null],[12,"ref_name","","",4,null],[13,"Fork","dishub::ops","",4,null],[12,"new_slug","dishub::ops::EventPayload","",4,null],[13,"Gollum","dishub::ops","",4,null],[12,"pages","dishub::ops::EventPayload","",4,null],[13,"IssueComment","dishub::ops","",4,null],[12,"action","dishub::ops::EventPayload","",4,null],[12,"issue","","",4,null],[12,"body","","",4,null],[12,"id","","",4,null],[13,"Issues","dishub::ops","",4,null],[12,"action","dishub::ops::EventPayload","",4,null],[12,"number","","",4,null],[12,"title","","",4,null],[12,"body","","",4,null],[12,"labels","","",4,null],[13,"Member","dishub::ops","",4,null],[12,"action","dishub::ops::EventPayload","",4,null],[12,"user","","",4,null],[13,"Public","dishub::ops","",4,null],[13,"PullRequest","","",4,null],[12,"action","dishub::ops::EventPayload","",4,null],[12,"number","","",4,null],[12,"title","","",4,null],[12,"body","","",4,null],[13,"PullRequestReview","dishub::ops","",4,null],[12,"action","dishub::ops::EventPayload","",4,null],[12,"pr","","",4,null],[12,"state","","",4,null],[12,"body","","",4,null],[12,"id","","",4,null],[13,"PullRequestReviewComment","dishub::ops","",4,null],[12,"action","dishub::ops::EventPayload","",4,null],[12,"pr","","",4,null],[12,"body","","",4,null],[12,"id","","",4,null],[13,"Push","dishub::ops","",4,null],[12,"pushed_ref","dishub::ops::EventPayload","",4,null],[12,"prev_head","","",4,null],[12,"new_head","","",4,null],[12,"size","","",4,null],[12,"distinct_size","","",4,null],[12,"commits","","",4,null],[13,"Release","dishub::ops","",4,null],[12,"action","dishub::ops::EventPayload","",4,null],[12,"tag_name","","",4,null],[12,"target","","",4,null],[12,"draft","","",4,null],[12,"prerelease","","",4,null],[12,"name","","",4,null],[12,"body","","",4,null],[13,"Watch","dishub::ops","",4,null],[12,"action","dishub::ops::EventPayload","",4,null],[13,"Other","dishub::ops","",4,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"hash","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"new","","Create an unpolled feed with the specified subject and posting target.",1,{"inputs":[{"name":"string"},{"name":"u64"},{"name":"u64"}],"output":{"name":"feed"}}],[11,"read","","Read the application feeds from the specified file.",1,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"write","","Save the application feeds to the specified file.",1,{"inputs":[{"name":"vec"},{"name":"path"}],"output":null}],[11,"poll","","",1,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"parse","","",3,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"urls","","",3,null],[11,"from","","",4,{"inputs":[{"name":"jsonvalue"}],"output":{"name":"eventpayload"}}],[11,"fmt","","",3,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"hash","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"encode","","",2,null],[11,"decode","","",2,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"read","","Read the application GitHub tokens from the specified file.",2,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"write","","Save the application GitHub tokens to the specified file.",2,null],[0,"init","","",null,null],[5,"verify","dishub::ops::init","",null,null],[5,"get_data","","",null,{"inputs":[{"name":"r"},{"name":"w"}],"output":{"name":"apptokens"}}],[0,"github","dishub::ops","",null,null],[3,"XPollInterval","dishub::ops::github","",null,null],[12,"0","","",5,null],[5,"user_exists","","",null,{"inputs":[{"name":"str"},{"name":"apptokens"}],"output":{"name":"result"}}],[5,"repo_exists","","",null,{"inputs":[{"name":"str"},{"name":"apptokens"}],"output":{"name":"result"}}],[5,"poll_user_events_new","","",null,{"inputs":[{"name":"str"},{"name":"apptokens"}],"output":{"name":"result"}}],[5,"poll_repo_events_new","","",null,{"inputs":[{"name":"str"},{"name":"apptokens"}],"output":{"name":"result"}}],[5,"poll_user_events_update","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"apptokens"}],"output":{"name":"result"}}],[5,"poll_repo_events_update","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"apptokens"}],"output":{"name":"result"}}],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"deref","","",5,null],[11,"deref_mut","","",5,null],[11,"header_name","","",5,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",5,null],[11,"fmt_header","","",5,null],[11,"fmt","","",5,null],[0,"add_feeds","dishub::ops","",null,null],[5,"verify","dishub::ops::add_feeds","",null,null],[5,"get_watch_subject","","",null,{"inputs":[{"name":"r"},{"name":"w"}],"output":{"name":"string"}}],[5,"verify_subject","","",null,{"inputs":[{"name":"str"},{"name":"apptokens"}],"output":{"name":"result"}}],[5,"known_servers","","",null,{"inputs":[{"name":"apptokens"}],"output":{"name":"result"}}],[5,"get_valid_server","","",null,{"inputs":[{"name":"vec"},{"name":"r"},{"name":"w"}],"output":{"name":"u64"}}],[5,"channels_in_server","","",null,{"inputs":[{"name":"apptokens"},{"name":"u64"}],"output":{"name":"result"}}],[5,"get_valid_channel","","",null,{"inputs":[{"name":"vec"},{"name":"r"},{"name":"w"}],"output":{"name":"u64"}}],[0,"start_daemon","dishub::ops","",null,null],[5,"verify","dishub::ops::start_daemon","",null,null],[5,"feeds_filter","","",null,{"inputs":[{"name":"w"},{"name":"feed"}],"output":{"name":"bool"}}],[5,"post_text","","",null,{"inputs":[{"name":"event"}],"output":{"name":"string"}}],[5,"send_messages","","",null,{"inputs":[{"name":"apptokens"},{"name":"vec"},{"name":"u64"}],"output":{"name":"result"}}],[0,"unfollow_feeds","dishub::ops","",null,null],[5,"verify","dishub::ops::unfollow_feeds","",null,null],[5,"print_feeds","","",null,null],[5,"get_feeds_to_remove","","",null,null],[0,"util","dishub","Module containing various utility functions.",null,null],[5,"uppercase_first","dishub::util","Uppercase the first character of the supplied string.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"mul_str","","Create a string consisting of `n` repetitions of `what`.",null,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"string"}}],[5,"prompt_exact_len","","Ask the user to input a string of the exact length of `desired_len`, (re)prompting as necessary.",null,{"inputs":[{"name":"r"},{"name":"w"},{"name":"str"},{"name":"f"},{"name":"usize"}],"output":{"name":"ioresult"}}],[5,"prompt_nonzero_len","","Ask the user to input a string of non-zero length, (re)prompting as necessary.",null,{"inputs":[{"name":"r"},{"name":"w"},{"name":"str"},{"name":"f"}],"output":{"name":"ioresult"}}],[5,"prompt_any_len","","Ask the user to input a string of any length after printing a prompt prompting.",null,{"inputs":[{"name":"r"},{"name":"w"},{"name":"str"},{"name":"f"}],"output":{"name":"ioresult"}}],[5,"prompt_multiline","","Ask the user to input a multiline string, (re)prompting as necessary.",null,{"inputs":[{"name":"r"},{"name":"w"},{"name":"str"},{"name":"f"}],"output":{"name":"ioresult"}}],[7,"GITHUB_USER_AGENT","","The User-Agent to use when authenticating to the GitHub API.",null,null],[0,"options","dishub","This module contains the configuration of the application.",null,null],[3,"Options","dishub::options","Representation of the application&#39;s all configurable values.",null,null],[12,"config_dir","","Directory containing configuration. Default: `&quot;$HOME/.dishub&quot;`",6,null],[12,"subsystem","","The specified subsystem.",6,null],[4,"Subsystem","","All possible subsystems, think `cargo`&#39;s or `git`&#39;s.",null,null],[13,"Init","","Initialise global app data",7,null],[12,"force","dishub::options::Subsystem","Whether to override current app configuration. Default: `false`",7,null],[13,"AddFeeds","dishub::options","Add feeds to post to servers",7,null],[13,"UnfollowFeeds","","Unsubscribe from selected followed feeds",7,null],[13,"StartDaemon","","Run the activity-posting daemon",7,null],[12,"sleep","dishub::options::Subsystem","How long to sleep between each iteration. Default: 5 minutes",7,null],[11,"fmt","dishub::options","",7,null],[11,"clone","","",7,null],[11,"hash","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"hash","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"parse","","Parse `env`-wide command-line arguments into an `Options` instance",6,{"inputs":[],"output":{"name":"options"}}]],"paths":[[4,"Error"],[3,"Feed"],[3,"AppTokens"],[3,"Event"],[4,"EventPayload"],[3,"XPollInterval"],[3,"Options"],[4,"Subsystem"]]};
searchIndex["discord"] = {"doc":"Client library for the [Discord](https://discordapp.com) API.","items":[[3,"Connection","discord","Websocket connection to the Discord servers.",null,null],[3,"State","","Known state composed from received events.",null,null],[3,"Discord","","Client for the Discord REST API.",null,null],[3,"EditServer","","Patch content for the `edit_server` call.",null,null],[3,"EditChannel","","Patch content for the `edit_channel` call.",null,null],[3,"EditMember","","Patch content for the `edit_member` call.",null,null],[3,"EditProfile","","Patch content for the `edit_profile` call.",null,null],[4,"Error","","Discord API error type.",null,null],[13,"Hyper","","A `hyper` crate error",0,null],[13,"Json","","A `serde_json` crate error",0,null],[13,"WebSocket","","A `websocket` crate error",0,null],[13,"Io","","A `std::io` module error",0,null],[13,"Closed","","A websocket connection was closed, possibly with a message",0,null],[13,"Decode","","A json decoding error, with a description and the offending value",0,null],[13,"Status","","A generic non-success response from the REST API",0,null],[13,"RateLimited","","A rate limit error, with how many milliseconds to wait before retrying",0,null],[13,"Protocol","","A Discord protocol error, with a description",0,null],[13,"Command","","A command execution failure, with a command name and output",0,null],[13,"Other","","A miscellaneous error, with a description",0,null],[4,"ChannelRef","","A reference to a private or public channel.",null,null],[13,"Private","","A private channel",1,null],[13,"Group","","A group channel",1,null],[13,"Public","","A public channel and its server",1,null],[4,"GetMessages","","Argument to `get_messages` to specify the desired message retrieval.",null,null],[13,"MostRecent","","Get the N most recent messages.",2,null],[13,"Before","","Get the first N messages before the specified message.",2,null],[13,"After","","Get the first N messages after the specified message.",2,null],[13,"Around","","Get N/2 messages before, N/2 messages after, and the specified message.",2,null],[5,"read_image","","Read an image from a file into a string suitable for upload.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"get_unresolved_incidents","","Retrieves the current unresolved incidents from the status page.",null,{"inputs":[],"output":{"name":"result"}}],[5,"get_active_maintenances","","Retrieves the active maintenances from the status page.",null,{"inputs":[],"output":{"name":"result"}}],[5,"get_upcoming_maintenances","","Retrieves the upcoming maintenances from the status page.",null,{"inputs":[],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"ioerror"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"hypererror"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"jsonerror"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"websocketerror"}],"output":{"name":"error"}}],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"new","","Establish a connection to the Discord websocket servers.",3,{"inputs":[{"name":"str"},{"name":"str"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_game","","Change the game information that this client reports as playing.",3,null],[11,"set_game_name","","Set the client to be playing this game, with defaults used for any\nextended information.",3,null],[11,"set_presence","","Sets the active presence of the client, including game and/or status\ninformation.",3,null],[11,"recv_event","","Receive an event over the websocket, blocking until one is available.",3,null],[11,"shutdown","","Cleanly shut down the websocket connection. Optional.",3,null],[11,"sync_servers","","Requests a download of online member lists.",3,null],[11,"sync_calls","","Request a synchronize of active calls for the specified channels.",3,null],[11,"download_all_members","","Requests a download of all member information for large servers.",3,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"new","","Create a new state from an initial `ReadyEvent`.",4,{"inputs":[{"name":"readyevent"}],"output":{"name":"state"}}],[11,"unknown_members","","Count the total number of server members not yet downloaded.",4,null],[11,"all_private_channels","","Build a list of all known private and group channel IDs.",4,null],[11,"all_servers","","Build a list of all known server IDs.",4,null],[11,"update","","Update the state according to the changes described in the given event.",4,null],[11,"user","","Get information about the logged-in user.",4,null],[11,"servers","","Get the servers this user has access to.",4,null],[11,"unavailable_servers","","Get the currently unavailable servers.",4,null],[11,"private_channels","","Get the active 1-on-1 private channels with other users.",4,null],[11,"groups","","Get the active groups with other users.",4,null],[11,"calls","","Get the currently ongoing calls.",4,null],[11,"presences","","Get the presences of online friends.",4,null],[11,"relationships","","Get the friend/block relationships with other users.",4,null],[11,"settings","","Get the logged-in user&#39;s client settings.",4,null],[11,"server_settings","","Get the logged-in user&#39;s per-server notification settings.",4,null],[11,"notes","","Get the map of notes that have been made by this user.",4,null],[11,"find_channel","","Look up a private or public channel by its ID.",4,null],[11,"find_voice_user","","Look up the voice channel or group call a user is in, if any.",4,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[0,"model","","Struct and enum definitions of values in the Discord model.",null,null],[3,"UserId","discord::model","An identifier for a User",null,null],[12,"0","","",5,null],[3,"ServerId","","An identifier for a Server",null,null],[12,"0","","",6,null],[3,"ChannelId","","An identifier for a Channel",null,null],[12,"0","","",7,null],[3,"MessageId","","An identifier for a Message",null,null],[12,"0","","",8,null],[3,"RoleId","","An identifier for a Role",null,null],[12,"0","","",9,null],[3,"EmojiId","","An identifier for an Emoji",null,null],[12,"0","","",10,null],[3,"Mention","","A mention targeted at a specific user, channel, or other entity.",null,null],[3,"ServerInfo","","The basic information about a server only",null,null],[12,"id","","",11,null],[12,"name","","",11,null],[12,"icon","","",11,null],[12,"owner","","",11,null],[12,"permissions","","",11,null],[3,"Server","","Static information about a server",null,null],[12,"id","","",12,null],[12,"name","","",12,null],[12,"afk_timeout","","",12,null],[12,"afk_channel_id","","",12,null],[12,"icon","","",12,null],[12,"roles","","",12,null],[12,"region","","",12,null],[12,"embed_enabled","","",12,null],[12,"embed_channel_id","","",12,null],[12,"owner_id","","",12,null],[12,"verification_level","","",12,null],[12,"emojis","","",12,null],[12,"features","","",12,null],[12,"splash","","",12,null],[12,"default_message_notifications","","",12,null],[12,"mfa_level","","",12,null],[3,"ServerPrune","","Representation of the number of member that would be pruned by a server\nprune operation.",null,null],[12,"pruned","","",13,null],[3,"Role","","Information about a role",null,null],[12,"id","","",14,null],[12,"name","","",14,null],[12,"color","","Color in `0xRRGGBB` form",14,null],[12,"hoist","","",14,null],[12,"managed","","",14,null],[12,"position","","",14,null],[12,"mentionable","","",14,null],[12,"permissions","","",14,null],[3,"Ban","","A banning of a user",null,null],[3,"User","","Broadly-applicable user information",null,null],[12,"id","","",15,null],[12,"name","","",15,null],[12,"discriminator","","",15,null],[12,"avatar","","",15,null],[12,"bot","","",15,null],[3,"Member","","Information about a member of a server",null,null],[12,"user","","",16,null],[12,"roles","","",16,null],[12,"nick","","",16,null],[12,"joined_at","","",16,null],[12,"mute","","",16,null],[12,"deaf","","",16,null],[3,"Group","","A group channel, potentially including other users, separate from a server.",null,null],[12,"channel_id","","",17,null],[12,"icon","","",17,null],[12,"last_message_id","","",17,null],[12,"last_pin_timestamp","","",17,null],[12,"name","","",17,null],[12,"owner_id","","",17,null],[12,"recipients","","",17,null],[3,"Call","","An active group or private call",null,null],[12,"channel_id","","",18,null],[12,"message_id","","",18,null],[12,"region","","",18,null],[12,"ringing","","",18,null],[12,"unavailable","","",18,null],[12,"voice_states","","",18,null],[3,"PrivateChannel","","Private text channel to another user",null,null],[12,"id","","",19,null],[12,"kind","","",19,null],[12,"recipient","","",19,null],[12,"last_message_id","","",19,null],[12,"last_pin_timestamp","","",19,null],[3,"PublicChannel","","Public voice or text channel within a server",null,null],[12,"id","","",20,null],[12,"name","","",20,null],[12,"server_id","","",20,null],[12,"kind","","",20,null],[12,"permission_overwrites","","",20,null],[12,"topic","","",20,null],[12,"position","","",20,null],[12,"last_message_id","","",20,null],[12,"bitrate","","",20,null],[12,"user_limit","","",20,null],[12,"last_pin_timestamp","","",20,null],[3,"PermissionOverwrite","","A channel-specific permission overwrite for a role or member.",null,null],[12,"kind","","",21,null],[12,"allow","","",21,null],[12,"deny","","",21,null],[3,"Attachment","","File upload attached to a message",null,null],[12,"id","","",22,null],[12,"filename","","Short filename for the attachment",22,null],[12,"url","","Shorter URL with message and attachment id",22,null],[12,"proxy_url","","Longer URL with large hash",22,null],[12,"size","","Size of the file in bytes",22,null],[12,"dimensions","","Dimensions if the file is an image",22,null],[3,"Message","","Message transmitted over a text channel",null,null],[12,"id","","",23,null],[12,"channel_id","","",23,null],[12,"content","","",23,null],[12,"nonce","","",23,null],[12,"tts","","",23,null],[12,"timestamp","","",23,null],[12,"edited_timestamp","","",23,null],[12,"pinned","","",23,null],[12,"kind","","",23,null],[12,"author","","",23,null],[12,"mention_everyone","","",23,null],[12,"mentions","","",23,null],[12,"mention_roles","","",23,null],[12,"attachments","","",23,null],[12,"embeds","","Follows OEmbed standard",23,null],[3,"Invite","","Information about an invite",null,null],[12,"code","","",24,null],[12,"server_id","","",24,null],[12,"server_name","","",24,null],[12,"channel_type","","",24,null],[12,"channel_id","","",24,null],[12,"channel_name","","",24,null],[3,"RichInvite","","Detailed information about an invite, available to server managers",null,null],[12,"code","","",25,null],[12,"server_icon","","",25,null],[12,"server_id","","",25,null],[12,"server_name","","",25,null],[12,"server_splash_hash","","",25,null],[12,"channel_type","","",25,null],[12,"channel_id","","",25,null],[12,"channel_name","","",25,null],[12,"inviter","","",25,null],[12,"created_at","","",25,null],[12,"max_age","","",25,null],[12,"max_uses","","",25,null],[12,"temporary","","",25,null],[12,"uses","","",25,null],[3,"VoiceRegion","","Information about an available voice region",null,null],[12,"id","","",26,null],[12,"name","","",26,null],[12,"sample_hostname","","",26,null],[12,"sample_port","","",26,null],[12,"optimal","","",26,null],[12,"vip","","",26,null],[3,"ReadState","","Summary of messages since last login",null,null],[12,"id","","Id of the relevant channel",27,null],[12,"last_message_id","","Last seen message in this channel",27,null],[12,"mention_count","","Mentions since that message in this channel",27,null],[3,"Game","","Information about a game being played",null,null],[12,"name","","",28,null],[12,"url","","",28,null],[12,"kind","","",28,null],[3,"Presence","","A members&#39;s online status",null,null],[12,"user_id","","",29,null],[12,"status","","",29,null],[12,"last_modified","","",29,null],[12,"game","","",29,null],[12,"user","","",29,null],[12,"nick","","",29,null],[3,"VoiceState","","A member&#39;s state within a voice channel",null,null],[12,"user_id","","",30,null],[12,"channel_id","","",30,null],[12,"session_id","","",30,null],[12,"token","","",30,null],[12,"suppress","","",30,null],[12,"self_mute","","",30,null],[12,"self_deaf","","",30,null],[12,"mute","","",30,null],[12,"deaf","","",30,null],[3,"Emoji","","A parter custom emoji",null,null],[12,"id","","",31,null],[12,"name","","",31,null],[12,"managed","","",31,null],[12,"require_colons","","",31,null],[12,"roles","","",31,null],[3,"Reaction","","",null,null],[12,"channel_id","","",32,null],[12,"message_id","","",32,null],[12,"user_id","","",32,null],[12,"emoji","","",32,null],[3,"LiveServer","","Live server information",null,null],[12,"id","","",33,null],[12,"name","","",33,null],[12,"owner_id","","",33,null],[12,"voice_states","","",33,null],[12,"roles","","",33,null],[12,"region","","",33,null],[12,"presences","","",33,null],[12,"member_count","","",33,null],[12,"members","","",33,null],[12,"joined_at","","",33,null],[12,"icon","","",33,null],[12,"large","","",33,null],[12,"channels","","",33,null],[12,"afk_timeout","","",33,null],[12,"afk_channel_id","","",33,null],[12,"verification_level","","",33,null],[12,"emojis","","",33,null],[12,"features","","",33,null],[12,"splash","","",33,null],[12,"default_message_notifications","","",33,null],[12,"mfa_level","","",33,null],[3,"CurrentUser","","Information about the logged-in user",null,null],[12,"id","","",34,null],[12,"username","","",34,null],[12,"discriminator","","",34,null],[12,"avatar","","",34,null],[12,"email","","",34,null],[12,"verified","","",34,null],[12,"bot","","",34,null],[12,"mfa_enabled","","",34,null],[3,"ApplicationInfo","","Information about the current application and the owner.",null,null],[12,"description","","",35,null],[12,"flags","","",35,null],[12,"icon","","",35,null],[12,"id","","",35,null],[12,"name","","",35,null],[12,"rpc_origins","","",35,null],[12,"owner","","",35,null],[3,"Relationship","","Information on a friendship relationship this user has with another.",null,null],[12,"id","","",36,null],[12,"kind","","",36,null],[12,"user","","",36,null],[3,"FriendSourceFlags","","Flags for who may add this user as a friend.",null,null],[12,"all","","",37,null],[12,"mutual_friends","","",37,null],[12,"mutual_servers","","",37,null],[3,"UserSettings","","User settings usually used to influence client behavior",null,null],[12,"detect_platform_accounts","","",38,null],[12,"developer_mode","","",38,null],[12,"enable_tts_command","","",38,null],[12,"inline_attachment_media","","",38,null],[12,"inline_embed_media","","",38,null],[12,"locale","","",38,null],[12,"message_display_compact","","",38,null],[12,"render_embeds","","",38,null],[12,"server_positions","","",38,null],[12,"show_current_game","","",38,null],[12,"status","","",38,null],[12,"theme","","",38,null],[12,"convert_emoticons","","",38,null],[12,"friend_source_flags","","",38,null],[12,"restricted_servers","","Servers whose members cannot private message this user.",38,null],[3,"ChannelOverride","","A channel-specific notification settings override",null,null],[12,"channel_id","","",39,null],[12,"message_notifications","","",39,null],[12,"muted","","",39,null],[3,"UserServerSettings","","User settings which influence per-server notification behavior",null,null],[12,"server_id","","",40,null],[12,"message_notifications","","",40,null],[12,"mobile_push","","",40,null],[12,"muted","","",40,null],[12,"suppress_everyone","","",40,null],[12,"channel_overrides","","",40,null],[3,"Tutorial","","Progress through the Discord tutorial",null,null],[12,"indicators_suppressed","","",41,null],[12,"indicators_confirmed","","",41,null],[3,"Maintenance","","Discord status maintenance message.",null,null],[12,"description","","",42,null],[12,"id","","",42,null],[12,"name","","",42,null],[12,"start","","",42,null],[12,"stop","","",42,null],[3,"Incident","","An incident retrieved from the Discord status page.",null,null],[12,"id","","",43,null],[12,"impact","","",43,null],[12,"monitoring_at","","",43,null],[12,"name","","",43,null],[12,"page_id","","",43,null],[12,"short_link","","",43,null],[12,"status","","",43,null],[12,"incident_updates","","",43,null],[12,"created_at","","",43,null],[12,"resolved_at","","",43,null],[12,"updated_at","","",43,null],[3,"IncidentUpdate","","An update to an incident from the Discord status page. This will typically\nstate what new information has been discovered about an incident.",null,null],[12,"body","","",44,null],[12,"id","","",44,null],[12,"incident_id","","",44,null],[12,"status","","",44,null],[12,"affected_components","","",44,null],[12,"created_at","","",44,null],[12,"display_at","","",44,null],[12,"updated_at","","",44,null],[3,"ReadyEvent","","The &quot;Ready&quot; event, containing initial state",null,null],[12,"version","","",45,null],[12,"user","","",45,null],[12,"session_id","","",45,null],[12,"user_settings","","",45,null],[12,"read_state","","",45,null],[12,"private_channels","","",45,null],[12,"presences","","",45,null],[12,"relationships","","",45,null],[12,"servers","","",45,null],[12,"user_server_settings","","",45,null],[12,"tutorial","","",45,null],[12,"trace","","The trace of servers involved in this connection.",45,null],[12,"notes","","",45,null],[12,"shard","","The shard info for this session; the shard id used and the total number\nof shards.",45,null],[4,"ChannelType","","The type of a channel",null,null],[13,"Group","","A group channel, separate from a server",46,null],[13,"Private","","A private channel with only one other person",46,null],[13,"Text","","A text channel in a server",46,null],[13,"Voice","","A voice channel",46,null],[4,"Channel","","A private or public channel",null,null],[13,"Group","","A group channel separate from a server",47,null],[13,"Private","","Text channel to another user",47,null],[13,"Public","","Voice or text channel within a server",47,null],[4,"PermissionOverwriteType","","The type of edit being made to a Channel&#39;s permissions.",null,null],[13,"Member","","",48,null],[13,"Role","","",48,null],[4,"MessageType","","The type of a message",null,null],[13,"Regular","","A regular, text-based message",49,null],[13,"GroupRecipientAddition","","A recipient was added to the group",49,null],[13,"GroupRecipientRemoval","","A recipient was removed from the group",49,null],[13,"GroupCallCreation","","A group call was created",49,null],[13,"GroupNameUpdate","","A group name was updated",49,null],[13,"GroupIconUpdate","","A group icon was updated",49,null],[13,"MessagePinned","","A message was pinned",49,null],[4,"OnlineStatus","","A user&#39;s online presence status",null,null],[13,"DoNotDisturb","","",50,null],[13,"Invisible","","",50,null],[13,"Offline","","",50,null],[13,"Online","","",50,null],[13,"Idle","","",50,null],[4,"GameType","","A type of game being played.",null,null],[13,"Playing","","",51,null],[13,"Streaming","","",51,null],[4,"VerificationLevel","","A condition that new users must satisfy before posting in text channels",null,null],[13,"None","","No verification is needed",52,null],[13,"Low","","Must have a verified email on their Discord account",52,null],[13,"Medium","","Must also be registered on Discord for longer than 5 minutes",52,null],[13,"High","","Must also be a member of this server for longer than 10 minutes",52,null],[4,"ReactionEmoji","","Emoji information sent only from reaction events",null,null],[13,"Unicode","","",53,null],[13,"Custom","","",53,null],[12,"name","discord::model::ReactionEmoji","",53,null],[12,"id","","",53,null],[4,"PossibleServer","discord::model","A server which may be unavailable",null,null],[13,"Offline","","An offline server, the ID of which is known",54,null],[13,"Online","","An online server, for which more information is available",54,null],[4,"RelationshipType","","A type of relationship this user has with another.",null,null],[13,"Ignored","","",55,null],[13,"Friends","","",55,null],[13,"Blocked","","",55,null],[13,"IncomingRequest","","",55,null],[13,"OutgoingRequest","","",55,null],[4,"NotificationLevel","","Notification level for a channel or server",null,null],[13,"All","","All messages trigger a notification",56,null],[13,"Mentions","","Only @mentions trigger a notification",56,null],[13,"Nothing","","No messages, even @mentions, trigger a notification",56,null],[13,"Parent","","Follow the parent&#39;s notification level",56,null],[4,"Event","","Event received over a websocket connection",null,null],[13,"Ready","","The first event in a connection, containing the initial state.",57,null],[13,"Resumed","","The connection has successfully resumed after a disconnect.",57,null],[12,"heartbeat_interval","discord::model::Event","",57,null],[12,"trace","","",57,null],[13,"UserUpdate","discord::model","Update to the logged-in user&#39;s information",57,null],[13,"UserNoteUpdate","","Update to a note that the logged-in user has set for another user.",57,null],[13,"UserSettingsUpdate","","Update to the logged-in user&#39;s preferences or client settings",57,null],[12,"detect_platform_accounts","discord::model::Event","",57,null],[12,"developer_mode","","",57,null],[12,"enable_tts_command","","",57,null],[12,"inline_attachment_media","","",57,null],[12,"inline_embed_media","","",57,null],[12,"locale","","",57,null],[12,"message_display_compact","","",57,null],[12,"render_embeds","","",57,null],[12,"server_positions","","",57,null],[12,"show_current_game","","",57,null],[12,"status","","",57,null],[12,"theme","","",57,null],[12,"convert_emoticons","","",57,null],[12,"friend_source_flags","","",57,null],[13,"UserServerSettingsUpdate","discord::model","Update to the logged-in user&#39;s server-specific notification settings",57,null],[13,"VoiceStateUpdate","","A member&#39;s voice state has changed",57,null],[13,"VoiceServerUpdate","","Voice server information is available",57,null],[12,"server_id","discord::model::Event","",57,null],[12,"channel_id","","",57,null],[12,"endpoint","","",57,null],[12,"token","","",57,null],[13,"CallCreate","discord::model","A new group call has been created",57,null],[13,"CallUpdate","","A group call has been updated",57,null],[12,"channel_id","discord::model::Event","",57,null],[12,"message_id","","",57,null],[12,"region","","",57,null],[12,"ringing","","",57,null],[13,"CallDelete","discord::model","A group call has been deleted (the call ended)",57,null],[13,"ChannelRecipientAdd","","A user has been added to a group",57,null],[13,"ChannelRecipientRemove","","A user has been removed from a group",57,null],[13,"TypingStart","","A user is typing; considered to last 5 seconds",57,null],[12,"channel_id","discord::model::Event","",57,null],[12,"user_id","","",57,null],[12,"timestamp","","",57,null],[13,"PresenceUpdate","discord::model","A member&#39;s presence state (or username or avatar) has changed",57,null],[12,"presence","discord::model::Event","",57,null],[12,"server_id","","",57,null],[12,"roles","","",57,null],[13,"PresencesReplace","discord::model","The precense list of the user&#39;s friends should be replaced entirely",57,null],[13,"RelationshipAdd","","",57,null],[13,"RelationshipRemove","","",57,null],[13,"MessageCreate","","",57,null],[13,"MessageUpdate","","A message has been edited, either by the user or the system",57,null],[12,"id","discord::model::Event","",57,null],[12,"channel_id","","",57,null],[12,"kind","","",57,null],[12,"content","","",57,null],[12,"nonce","","",57,null],[12,"tts","","",57,null],[12,"pinned","","",57,null],[12,"timestamp","","",57,null],[12,"edited_timestamp","","",57,null],[12,"author","","",57,null],[12,"mention_everyone","","",57,null],[12,"mentions","","",57,null],[12,"mention_roles","","",57,null],[12,"attachments","","",57,null],[12,"embeds","","",57,null],[13,"MessageAck","discord::model","Another logged-in device acknowledged this message",57,null],[12,"channel_id","discord::model::Event","",57,null],[12,"message_id","","May be `None` if a private channel with no messages has closed.",57,null],[13,"MessageDelete","discord::model","",57,null],[12,"channel_id","discord::model::Event","",57,null],[12,"message_id","","",57,null],[13,"MessageDeleteBulk","discord::model","",57,null],[12,"channel_id","discord::model::Event","",57,null],[12,"ids","","",57,null],[13,"ServerCreate","discord::model","",57,null],[13,"ServerUpdate","","",57,null],[13,"ServerDelete","","",57,null],[13,"ServerMemberAdd","","",57,null],[13,"ServerMemberUpdate","","A member&#39;s roles have changed",57,null],[12,"server_id","discord::model::Event","",57,null],[12,"roles","","",57,null],[12,"user","","",57,null],[12,"nick","","",57,null],[13,"ServerMemberRemove","discord::model","",57,null],[13,"ServerMembersChunk","","",57,null],[13,"ServerSync","","",57,null],[12,"server_id","discord::model::Event","",57,null],[12,"large","","",57,null],[12,"members","","",57,null],[12,"presences","","",57,null],[13,"ServerRoleCreate","discord::model","",57,null],[13,"ServerRoleUpdate","","",57,null],[13,"ServerRoleDelete","","",57,null],[13,"ServerBanAdd","","",57,null],[13,"ServerBanRemove","","",57,null],[13,"ServerIntegrationsUpdate","","",57,null],[13,"ServerEmojisUpdate","","",57,null],[13,"ChannelCreate","","",57,null],[13,"ChannelUpdate","","",57,null],[13,"ChannelDelete","","",57,null],[13,"ChannelPinsAck","","",57,null],[12,"channel_id","discord::model::Event","",57,null],[12,"timestamp","","",57,null],[13,"ChannelPinsUpdate","discord::model","",57,null],[12,"channel_id","discord::model::Event","",57,null],[12,"last_pin_timestamp","","",57,null],[13,"ReactionAdd","discord::model","",57,null],[13,"ReactionRemove","","",57,null],[13,"Unknown","","An event type not covered by the above",57,null],[0,"permissions","","",null,null],[3,"Permissions","discord::model::permissions","Set of permissions assignable to a Role or PermissionOverwrite",null,null],[17,"CREATE_INVITE","","",null,null],[17,"KICK_MEMBERS","","",null,null],[17,"BAN_MEMBERS","","",null,null],[17,"ADMINISTRATOR","","Grant all permissions, bypassing channel-specific permissions",null,null],[17,"MANAGE_ROLES","","Modify roles below their own",null,null],[17,"MANAGE_CHANNELS","","Create channels or edit existing ones",null,null],[17,"MANAGE_SERVER","","Change the server&#39;s name or move regions",null,null],[17,"CHANGE_NICKNAMES","","Change their own nickname",null,null],[17,"MANAGE_NICKNAMES","","Change the nickname of other users",null,null],[17,"MANAGE_EMOJIS","","Manage the emojis in a a server.",null,null],[17,"MANAGE_WEBHOOKS","","Manage channel webhooks",null,null],[17,"READ_MESSAGES","","",null,null],[17,"SEND_MESSAGES","","",null,null],[17,"SEND_TTS_MESSAGES","","Send text-to-speech messages to those focused on the channel",null,null],[17,"MANAGE_MESSAGES","","Delete messages by other users",null,null],[17,"EMBED_LINKS","","",null,null],[17,"ATTACH_FILES","","",null,null],[17,"READ_HISTORY","","",null,null],[17,"MENTION_EVERYONE","","Trigger a push notification for an entire channel with &quot;@everyone&quot;",null,null],[17,"EXTERNAL_EMOJIS","","Use emojis from other servers",null,null],[17,"ADD_REACTIONS","","Add emoji reactions to messages",null,null],[17,"VOICE_CONNECT","","",null,null],[17,"VOICE_SPEAK","","",null,null],[17,"VOICE_MUTE_MEMBERS","","",null,null],[17,"VOICE_DEAFEN_MEMBERS","","",null,null],[17,"VOICE_MOVE_MEMBERS","","Move users out of this channel into another",null,null],[17,"VOICE_USE_VAD","","When denied, members must use push-to-talk",null,null],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"clone","","",58,null],[11,"partial_cmp","","",58,null],[11,"lt","","",58,null],[11,"le","","",58,null],[11,"gt","","",58,null],[11,"ge","","",58,null],[11,"cmp","","",58,null],[11,"hash","","",58,null],[11,"fmt","","",58,null],[11,"empty","","Returns an empty set of flags.",58,{"inputs":[],"output":{"name":"permissions"}}],[11,"all","","Returns the set containing all flags.",58,{"inputs":[],"output":{"name":"permissions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",58,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",58,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",58,{"inputs":[{"name":"u64"}],"output":{"name":"permissions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",58,null],[11,"is_all","","Returns `true` if all flags are currently set.",58,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",58,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",58,null],[11,"insert","","Inserts the specified flags in-place.",58,null],[11,"remove","","Removes the specified flags in-place.",58,null],[11,"toggle","","Toggles the specified flags in-place.",58,null],[11,"bitor","","Returns the union of the two sets of flags.",58,null],[11,"bitor_assign","","Adds the set of flags.",58,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",58,null],[11,"bitxor_assign","","Toggles the set of flags.",58,null],[11,"bitand","","Returns the intersection between the two sets of flags.",58,null],[11,"bitand_assign","","Disables all flags disabled in the set.",58,null],[11,"sub","","Returns the set difference of the two sets of flags.",58,null],[11,"sub_assign","","Disables all flags enabled in the set.",58,null],[11,"not","","Returns the complement of this set of flags.",58,null],[11,"extend","","",58,null],[11,"from_iter","","",58,{"inputs":[{"name":"t"}],"output":{"name":"permissions"}}],[11,"decode","","",58,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"clone","discord::model","",5,null],[11,"hash","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"cmp","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"creation_date","","Get the creation date of the object referred to by this ID.",5,null],[11,"fmt","","",5,null],[11,"clone","","",6,null],[11,"hash","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"fmt","","",6,null],[11,"cmp","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"creation_date","","Get the creation date of the object referred to by this ID.",6,null],[11,"fmt","","",6,null],[11,"clone","","",7,null],[11,"hash","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"cmp","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"creation_date","","Get the creation date of the object referred to by this ID.",7,null],[11,"fmt","","",7,null],[11,"clone","","",8,null],[11,"hash","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"fmt","","",8,null],[11,"cmp","","",8,null],[11,"partial_cmp","","",8,null],[11,"lt","","",8,null],[11,"le","","",8,null],[11,"gt","","",8,null],[11,"ge","","",8,null],[11,"creation_date","","Get the creation date of the object referred to by this ID.",8,null],[11,"fmt","","",8,null],[11,"clone","","",9,null],[11,"hash","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"fmt","","",9,null],[11,"cmp","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"creation_date","","Get the creation date of the object referred to by this ID.",9,null],[11,"fmt","","",9,null],[11,"clone","","",10,null],[11,"hash","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"fmt","","",10,null],[11,"cmp","","",10,null],[11,"partial_cmp","","",10,null],[11,"lt","","",10,null],[11,"le","","",10,null],[11,"gt","","",10,null],[11,"ge","","",10,null],[11,"creation_date","","Get the creation date of the object referred to by this ID.",10,null],[11,"fmt","","",10,null],[11,"fmt","","",59,null],[11,"mention","","Return a `Mention` which will ping this user.",5,null],[11,"mention","","Return a `Mention` which will ping members of this role.",9,null],[11,"mention","","Return a `Mention` which will link to this channel.",7,null],[11,"clone","","",46,null],[11,"hash","","",46,null],[11,"eq","","",46,null],[11,"fmt","","",46,null],[11,"name","","",46,null],[11,"from_str","","",46,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"num","","",46,null],[11,"from_num","","",46,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",11,null],[11,"clone","","",11,null],[11,"decode","","",11,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"icon_url","","Returns the formatted URL of the server&#39;s icon.",11,null],[11,"fmt","","",12,null],[11,"clone","","",12,null],[11,"decode","","",12,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"icon_url","","Returns the formatted URL of the server&#39;s icon.",12,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"decode","","",13,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",14,null],[11,"clone","","",14,null],[11,"decode","","",14,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"mention","","Return a `Mention` which will ping members of this role.",14,null],[11,"fmt","","",60,null],[11,"clone","","",60,null],[11,"decode","","",60,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"decode","","",15,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"mention","","Return a `Mention` which will ping this user.",15,null],[11,"avatar_url","","Returns the formatted URL of the user&#39;s icon.",15,null],[11,"fmt","","",16,null],[11,"clone","","",16,null],[11,"decode","","",16,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"display_name","","",16,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"decode","","",47,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"decode","","",17,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"name","","Get this group&#39;s name, building a default if needed",17,null],[11,"icon_url","","Returns the formatted URL of the group&#39;s icon.",17,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"decode","","",18,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",19,null],[11,"clone","","",19,null],[11,"decode","","",19,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",20,null],[11,"clone","","",20,null],[11,"decode","","",20,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"decode_server","","",20,{"inputs":[{"name":"value"},{"name":"serverid"}],"output":{"name":"result"}}],[11,"mention","","Return a `Mention` which will link to this channel.",20,null],[11,"clone","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"fmt","","",48,null],[11,"fmt","","",21,null],[11,"clone","","",21,null],[11,"decode","","",21,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",22,null],[11,"clone","","",22,null],[11,"decode","","",22,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",23,null],[11,"clone","","",23,null],[11,"decode","","",23,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"clone","","",49,null],[11,"hash","","",49,null],[11,"eq","","",49,null],[11,"fmt","","",49,null],[11,"num","","",49,null],[11,"from_num","","",49,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",24,null],[11,"clone","","",24,null],[11,"decode","","",24,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",25,null],[11,"clone","","",25,null],[11,"decode","","",25,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",26,null],[11,"clone","","",26,null],[11,"decode","","",26,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",27,null],[11,"clone","","",27,null],[11,"decode","","",27,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"clone","","",50,null],[11,"hash","","",50,null],[11,"eq","","",50,null],[11,"fmt","","",50,null],[11,"name","","",50,null],[11,"from_str","","",50,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"clone","","",51,null],[11,"hash","","",51,null],[11,"eq","","",51,null],[11,"fmt","","",51,null],[11,"num","","",51,null],[11,"from_num","","",51,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",28,null],[11,"clone","","",28,null],[11,"playing","","",28,{"inputs":[{"name":"string"}],"output":{"name":"game"}}],[11,"streaming","","",28,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"game"}}],[11,"decode","","",28,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",29,null],[11,"clone","","",29,null],[11,"decode","","",29,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",30,null],[11,"clone","","",30,null],[11,"decode","","",30,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"clone","","",52,null],[11,"hash","","",52,null],[11,"eq","","",52,null],[11,"fmt","","",52,null],[11,"num","","",52,null],[11,"from_num","","",52,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",31,null],[11,"clone","","",31,null],[11,"decode","","",31,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",32,null],[11,"clone","","",32,null],[11,"decode","","",32,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"decode","","",53,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",33,null],[11,"clone","","",33,null],[11,"decode","","",33,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"icon_url","","Returns the formatted URL of the server&#39;s icon.",33,null],[11,"permissions_for","","Calculate the effective permissions for a specific user in a specific\nchannel on this server.",33,null],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"decode","","",54,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"id","","",54,null],[11,"decode","","",54,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"id","","",54,null],[11,"fmt","","",34,null],[11,"clone","","",34,null],[11,"decode","","",34,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",35,null],[11,"clone","","",35,null],[11,"decode","","",35,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"clone","","",55,null],[11,"hash","","",55,null],[11,"eq","","",55,null],[11,"fmt","","",55,null],[11,"from_num","","",55,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",36,null],[11,"clone","","",36,null],[11,"decode","","",36,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",37,null],[11,"clone","","",37,null],[11,"decode","","",37,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"decode","","",38,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"clone","","",56,null],[11,"hash","","",56,null],[11,"eq","","",56,null],[11,"fmt","","",56,null],[11,"num","","",56,null],[11,"from_num","","",56,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",39,null],[11,"clone","","",39,null],[11,"decode","","",39,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",40,null],[11,"clone","","",40,null],[11,"decode","","",40,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",41,null],[11,"clone","","",41,null],[11,"decode","","",41,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",42,null],[11,"clone","","",42,null],[11,"decode","","",42,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",43,null],[11,"clone","","",43,null],[11,"decode","","",43,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"decode","","",44,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"fmt","","",45,null],[11,"clone","","",45,null],[11,"fmt","","",57,null],[11,"clone","","",57,null],[6,"Result","discord","Discord API `Result` alias type.",null,null],[11,"new","","Log in to the Discord Rest API and acquire a token.",61,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"new_cache","","Log in to the Discord Rest API, possibly using a cached login token.",61,{"inputs":[{"name":"p"},{"name":"str"},{"name":"option"}],"output":{"name":"result"}}],[11,"from_bot_token","","Log in as a bot account using the given authentication token.",61,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"logout","","Log out from the Discord API, invalidating this clients&#39;s token.",61,null],[11,"create_channel","","Create a channel.",61,null],[11,"get_server_channels","","Get the list of channels in a server.",61,null],[11,"get_channel","","Get information about a channel.",61,null],[11,"edit_channel","","Edit a channel&#39;s details. See `EditChannel` for the editable fields.",61,null],[11,"delete_channel","","Delete a channel.",61,null],[11,"broadcast_typing","","Indicate typing on a channel for the next 5 seconds.",61,null],[11,"get_message","","Get a single message by ID from a given channel.",61,null],[11,"get_messages","","Get messages in the backlog for a given channel.",61,null],[11,"get_pinned_messages","","Gets the pinned messages for a given channel.",61,null],[11,"pin_message","","Pin the given message to the given channel.",61,null],[11,"unpin_message","","Removes the given message from being pinned to the given channel.",61,null],[11,"send_message","","Send a message to a given channel.",61,null],[11,"edit_message","","Edit a previously posted message.",61,null],[11,"delete_message","","Delete a previously posted message.",61,null],[11,"delete_messages","","Bulk deletes a list of `MessageId`s from a given channel.",61,null],[11,"send_file","","Send a file attached to a message on a given channel.",61,null],[11,"ack_message","","Acknowledge this message as &quot;read&quot; by this client.",61,null],[11,"create_permission","","Create permissions for a `Channel` for a `Member` or `Role`.",61,null],[11,"delete_permission","","Delete a `Member` or `Role`&#39;s permissions for a `Channel`.",61,null],[11,"add_reaction","","Add a `Reaction` to a `Message`.",61,null],[11,"delete_reaction","","Delete a `Reaction` from a `Message`.",61,null],[11,"get_reactions","","Get reactors for the `Emoji` in a `Message`.",61,null],[11,"get_servers","","Get the list of servers this user knows about.",61,null],[11,"create_server","","Create a new server with the given name.",61,null],[11,"edit_server","","Edit a server&#39;s information. See `EditServer` for the editable fields.",61,null],[11,"leave_server","","Leave the given server.",61,null],[11,"delete_server","","Delete the given server. Only available to the server owner.",61,null],[11,"create_emoji","","Creates an emoji in a server.",61,null],[11,"edit_emoji","","Edits a server&#39;s emoji.",61,null],[11,"delete_emoji","","Delete an emoji in a server.",61,null],[11,"get_bans","","Get the ban list for the given server.",61,null],[11,"add_ban","","Ban a user from the server, optionally deleting their recent messages.",61,null],[11,"remove_ban","","Unban a user from the server.",61,null],[11,"get_invite","","Extract information from an invite.",61,null],[11,"get_server_invites","","Get the active invites for a server.",61,null],[11,"get_channel_invites","","Get the active invites for a channel.",61,null],[11,"accept_invite","","Accept an invite. See `get_invite` for details.",61,null],[11,"create_invite","","Create an invite to a channel.",61,null],[11,"delete_invite","","Delete an invite. See `get_invite` for details.",61,null],[11,"get_member","","Retrieve a member object for a server given the member&#39;s user id.",61,null],[11,"edit_member_roles","","Edit the list of roles assigned to a member of a server.",61,null],[11,"edit_member","","Edit member information, including roles, nickname, and voice state.",61,null],[11,"kick_member","","Kick a member from a server.",61,null],[11,"create_private_channel","","Create a private channel with the given user, or return the existing\none if it exists.",61,null],[11,"get_user_avatar_url","","Get the URL at which a user&#39;s avatar is located.",61,null],[11,"get_user_avatar","","Download a user&#39;s avatar.",61,null],[11,"edit_profile","","Edit the logged-in user&#39;s profile. See `EditProfile` for editable fields.",61,null],[11,"get_voice_regions","","Get the list of available voice regions for a server.",61,null],[11,"move_member_voice","","Move a server member to another voice channel.",61,null],[11,"begin_server_prune","","Start a prune operation, kicking members who have been inactive for the\nspecified number of days. Members with a role assigned will never be\npruned.",61,null],[11,"get_server_prune_count","","Get the number of members who have been inactive for the specified\nnumber of days and would be pruned by a prune operation. Members with a\nrole assigned will never be pruned.",61,null],[11,"edit_note","","Sets a note for the user that is readable only to the currently logged\nin user.",61,null],[11,"get_application_info","","Retrieves information about the application and the owner.",61,null],[11,"suggested_shard_count","","Retrieves the number of guild shards Discord suggests to use based on\nthe number of guilds.",61,null],[11,"connect","","Establish a websocket connection over which events can be received.",61,null],[11,"connect_sharded","","Establish a sharded websocket connection over which events can be\nreceived.",61,null],[11,"name","","Edit the server&#39;s name.",62,null],[11,"region","","Edit the server&#39;s voice region.",62,null],[11,"icon","","Edit the server&#39;s icon. Use `None` to remove the icon.",62,null],[11,"afk_channel","","Edit the server&#39;s AFK channel. Use `None` to select no AFK channel.",62,null],[11,"afk_timeout","","Edit the server&#39;s AFK timeout.",62,null],[11,"owner","","Transfer ownership of the server to a new owner.",62,null],[11,"verification_level","","Edit the verification level of the server.",62,null],[11,"splash","","Edit the server&#39;s splash. Use `None` to remove the splash.",62,null],[11,"name","","Edit the channel&#39;s name.",63,null],[11,"topic","","Edit the text channel&#39;s topic.",63,null],[11,"position","","Edit the channel&#39;s position in the list.",63,null],[11,"bitrate","","Edit the voice channel&#39;s bitrate.",63,null],[11,"user_limit","","Edit the voice channel&#39;s user limit. Both `None` and `Some(0)` mean &quot;unlimited&quot;.",63,null],[11,"nickname","","Edit the member&#39;s nickname. Supply the empty string to remove a nickname.",64,null],[11,"mute","","Edit whether the member is server-muted.",64,null],[11,"deaf","","Edit whether the member is server-deafened.",64,null],[11,"roles","","Edit the member&#39;s assigned roles.",64,null],[11,"channel","","Move the member to another voice channel.",64,null],[11,"username","","Edit the user&#39;s username. Must be between 2 and 32 characters long.",65,null],[11,"avatar","","Edit the user&#39;s avatar. Use `None` to remove the avatar.",65,null],[11,"password","","Provide the user&#39;s current password for authentication. Does not apply to bot accounts, and\nmust be supplied for user accounts.",65,null],[11,"email","","Edit the user&#39;s email address. Does not apply to bot accounts.",65,null],[11,"new_password","","Edit the user&#39;s password. Does not apply to bot accounts.",65,null]],"paths":[[4,"Error"],[4,"ChannelRef"],[4,"GetMessages"],[3,"Connection"],[3,"State"],[3,"UserId"],[3,"ServerId"],[3,"ChannelId"],[3,"MessageId"],[3,"RoleId"],[3,"EmojiId"],[3,"ServerInfo"],[3,"Server"],[3,"ServerPrune"],[3,"Role"],[3,"User"],[3,"Member"],[3,"Group"],[3,"Call"],[3,"PrivateChannel"],[3,"PublicChannel"],[3,"PermissionOverwrite"],[3,"Attachment"],[3,"Message"],[3,"Invite"],[3,"RichInvite"],[3,"VoiceRegion"],[3,"ReadState"],[3,"Game"],[3,"Presence"],[3,"VoiceState"],[3,"Emoji"],[3,"Reaction"],[3,"LiveServer"],[3,"CurrentUser"],[3,"ApplicationInfo"],[3,"Relationship"],[3,"FriendSourceFlags"],[3,"UserSettings"],[3,"ChannelOverride"],[3,"UserServerSettings"],[3,"Tutorial"],[3,"Maintenance"],[3,"Incident"],[3,"IncidentUpdate"],[3,"ReadyEvent"],[4,"ChannelType"],[4,"Channel"],[4,"PermissionOverwriteType"],[4,"MessageType"],[4,"OnlineStatus"],[4,"GameType"],[4,"VerificationLevel"],[4,"ReactionEmoji"],[4,"PossibleServer"],[4,"RelationshipType"],[4,"NotificationLevel"],[4,"Event"],[3,"Permissions"],[3,"Mention"],[3,"Ban"],[3,"Discord"],[3,"EditServer"],[3,"EditChannel"],[3,"EditMember"],[3,"EditProfile"]]};
searchIndex["websocket"] = {"doc":"Rust-WebSocket is a WebSocket (RFC6455) library written in Rust.","items":[[0,"ws","websocket","A module containing the traits and structs that lower layer of Rust-WebSocket is based on.",null,null],[0,"message","websocket::ws","Provides a trait for WebSocket messages",null,null],[8,"Message","websocket::ws::message","A trait for WebSocket messages",null,null],[16,"DataFrameIterator","","The iterator type returned by dataframes",0,null],[10,"from_dataframes","","Attempt to form a message from a slice of data frames.",0,{"inputs":[{"name":"vec"}],"output":{"name":"websocketresult"}}],[10,"dataframes","","Turns this message into an iterator over data frames",0,null],[0,"sender","websocket::ws","Provides a trait for sending data frames and messages.",null,null],[8,"Sender","websocket::ws::sender","A trait for sending data frames and messages.",null,null],[10,"send_dataframe","","Sends a single data frame using this sender.",1,null],[11,"send_message","","Sends a single message using this sender.",1,null],[0,"receiver","websocket::ws","Provides a trait for receiving data frames and messages.",null,null],[3,"DataFrameIterator","websocket::ws::receiver","An iterator over data frames from a Receiver.",null,null],[3,"MessageIterator","","An iterator over messages from a Receiver.",null,null],[8,"Receiver","","A trait for receiving data frames and messages.",null,null],[10,"recv_dataframe","","Reads a single data frame from this receiver.",2,null],[10,"recv_message_dataframes","","Returns the data frames that constitute one message.",2,null],[11,"incoming_dataframes","","Returns an iterator over incoming data frames.",2,null],[11,"recv_message","","Reads a single message from this receiver.",2,null],[11,"incoming_messages","","Returns an iterator over incoming messages.",2,null],[11,"next","","Get the next data frame from the receiver. Always returns `Some`.",3,null],[11,"next","","Get the next message from the receiver. Always returns `Some`.",4,null],[0,"util","websocket::ws","Utility functions for various portions of Rust-WebSocket.",null,null],[5,"bytes_to_string","websocket::ws::util","Transforms a u8 slice into an owned String",null,null],[0,"header","","Utility functions for reading and writing data frame headers.",null,null],[3,"DataFrameFlags","websocket::ws::util::header","Flags relevant to a WebSocket data frame.",null,null],[3,"DataFrameHeader","","Represents a data frame header.",null,null],[12,"flags","","The bit flags for the first byte of the header.",5,null],[12,"opcode","","The opcode of the header - must be &lt;= 16.",5,null],[12,"mask","","The masking key, if any.",5,null],[12,"len","","The length of the payload.",5,null],[5,"write_header","","Writes a data frame header.",null,{"inputs":[{"name":"w"},{"name":"dataframeheader"}],"output":{"name":"websocketresult"}}],[5,"read_header","","Reads a data frame header.",null,{"inputs":[{"name":"r"}],"output":{"name":"websocketresult"}}],[17,"FIN","","Marks this dataframe as the last dataframe",null,null],[17,"RSV1","","First reserved bit",null,null],[17,"RSV2","","Second reserved bit",null,null],[17,"RSV3","","Third reserved bit",null,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"cmp","","",6,null],[11,"hash","","",6,null],[11,"fmt","","",6,null],[11,"empty","","Returns an empty set of flags.",6,{"inputs":[],"output":{"name":"dataframeflags"}}],[11,"all","","Returns the set containing all flags.",6,{"inputs":[],"output":{"name":"dataframeflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",6,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",6,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",6,{"inputs":[{"name":"u8"}],"output":{"name":"dataframeflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",6,null],[11,"is_all","","Returns `true` if all flags are currently set.",6,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",6,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",6,null],[11,"insert","","Inserts the specified flags in-place.",6,null],[11,"remove","","Removes the specified flags in-place.",6,null],[11,"toggle","","Toggles the specified flags in-place.",6,null],[11,"bitor","","Returns the union of the two sets of flags.",6,null],[11,"bitor_assign","","Adds the set of flags.",6,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",6,null],[11,"bitxor_assign","","Toggles the set of flags.",6,null],[11,"bitand","","Returns the intersection between the two sets of flags.",6,null],[11,"bitand_assign","","Disables all flags disabled in the set.",6,null],[11,"sub","","Returns the set difference of the two sets of flags.",6,null],[11,"sub_assign","","Disables all flags enabled in the set.",6,null],[11,"not","","Returns the complement of this set of flags.",6,null],[11,"extend","","",6,null],[11,"from_iter","","",6,{"inputs":[{"name":"t"}],"output":{"name":"dataframeflags"}}],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[0,"mask","websocket::ws::util","Utility functions for masking data frame payload data",null,null],[3,"Masker","websocket::ws::util::mask","Struct to pipe data into another writer,\nwhile masking the data being written",null,null],[5,"gen_mask","","Generates a random masking key",null,null],[5,"mask_data","","Masks data to send to a server and writes",null,null],[11,"new","","Create a new Masker with the key and the endpoint\nto be writter to.",7,null],[11,"write","","",7,null],[11,"flush","","",7,null],[0,"url","websocket::ws::util","Utility functions for dealing with URLs",null,null],[5,"parse_url_str","websocket::ws::util::url","Gets the host, port, resource and secure from the string representation of a url",null,{"inputs":[{"name":"str"}],"output":{"name":"websocketresult"}}],[5,"parse_url","","Gets the host, port, resource, and secure flag from a url",null,{"inputs":[{"name":"url"}],"output":{"name":"websocketresult"}}],[8,"ToWebSocketUrlComponents","","Trait that gets required WebSocket URL components",null,null],[10,"to_components","","Retrieve the required WebSocket URL components from this",8,null],[0,"dataframe","websocket::ws","Describes the generic DataFrame, defining a trait\nthat all dataframes should share. This is so one can\noptomize the memory footprint of a dataframe for their\nown needs, and be able to use custom dataframes quickly",null,null],[8,"DataFrame","websocket::ws::dataframe","A generic DataFrame. Every dataframe should be able to\nprovide these methods. (If the payload is not known in advance then\nrewrite the write_payload method)",null,null],[10,"is_last","","Is this dataframe the final dataframe of the message?",9,null],[10,"opcode","","What type of data does this dataframe contain?",9,null],[10,"reserved","","Reserved bits of this dataframe",9,null],[10,"payload","","Entire payload of the dataframe. If not known then implement\nwrite_payload as that is the actual method used when sending the\ndataframe over the wire.",9,null],[11,"size","","How long (in bytes) is this dataframe&#39;s payload",9,null],[11,"write_payload","","Write the payload to a writer",9,null],[11,"write_to","","Writes a DataFrame to a Writer.",9,null],[0,"client","websocket","Contains the WebSocket client.",null,null],[3,"Client","websocket::client","Represents a WebSocket client, which can send and receive messages/data frames.",null,null],[0,"request","","Structs for client-side (outbound) WebSocket requests",null,null],[3,"Url","websocket::client::request","A parsed URL record.",null,null],[3,"Request","","Represents a WebSocket request.",null,null],[12,"version","","The HTTP version of this request.",10,null],[12,"headers","","The headers of this request.",10,null],[11,"new","","Creates a new client-side request.",10,{"inputs":[{"name":"t"},{"name":"r"},{"name":"w"}],"output":{"name":"websocketresult"}}],[11,"key","","Short-cut to obtain the WebSocketKey value.",10,null],[11,"version","","Short-cut to obtain the WebSocketVersion value.",10,null],[11,"protocol","","Short-cut to obtain the WebSocketProtocol value.",10,null],[11,"extensions","","Short-cut to obtain the WebSocketExtensions value.",10,null],[11,"origin","","Short-cut to obtain the Origin value.",10,null],[11,"key_mut","","Short-cut to obtain a mutable reference to the WebSocketKey value.",10,null],[11,"version_mut","","Short-cut to obtain a mutable reference to the WebSocketVersion value.",10,null],[11,"protocol_mut","","Short-cut to obtaina mutable reference to  the WebSocketProtocol value.",10,null],[11,"extensions_mut","","Short-cut to obtain a mutable reference to the WebSocketExtensions value.",10,null],[11,"origin_mut","","Short-cut to obtain a mutable reference to the Origin value.",10,null],[11,"get_reader","","Returns a reference to the inner Reader.",10,null],[11,"get_writer","","Returns a reference to the inner Writer.",10,null],[11,"get_mut_reader","","Returns a mutable reference to the inner Reader.",10,null],[11,"get_mut_writer","","Returns a mutable reference to the inner Writer.",10,null],[11,"into_inner","","Return the inner Reader and Writer.",10,null],[11,"send","","Sends the request to the server and returns a response.",10,null],[0,"response","websocket::client","Structs for WebSocket responses",null,null],[3,"Response","websocket::client::response","Represents a WebSocket response.",null,null],[12,"status","","The status of the response",11,null],[12,"headers","","The headers contained in this response",11,null],[12,"version","","The HTTP version of this response",11,null],[11,"read","","Reads a Response off the stream associated with a Request.",11,{"inputs":[{"name":"request"}],"output":{"name":"websocketresult"}}],[11,"accept","","Short-cut to obtain the WebSocketAccept value.",11,null],[11,"protocol","","Short-cut to obtain the WebSocketProtocol value.",11,null],[11,"extensions","","Short-cut to obtain the WebSocketExtensions value.",11,null],[11,"get_reader","","Returns a reference to the inner Reader.",11,null],[11,"get_writer","","Returns a reference to the inner Writer.",11,null],[11,"get_mut_reader","","Returns a mutable reference to the inner Reader.",11,null],[11,"get_mut_writer","","Returns a mutable reference to the inner Writer.",11,null],[11,"get_request","","Returns a reference to the request associated with this response.",11,null],[11,"into_inner","","Return the inner Reader and Writer.",11,null],[11,"validate","","Check if this response constitutes a successful handshake.",11,null],[11,"begin_with","","Consume this response and return a Client ready to transmit/receive data frames\nusing the data frame type D, Sender B and Receiver C.",11,null],[11,"begin","","Consume this response and return a Client ready to transmit/receive data frames.",11,null],[11,"connect","websocket::client","Connects to the given ws:// or wss:// URL and return a Request to be sent.",12,{"inputs":[{"name":"t"}],"output":{"name":"websocketresult"}}],[11,"connect_ssl_context","","Connects to the specified wss:// URL using the given SSL context.",12,{"inputs":[{"name":"t"},{"name":"sslcontext"}],"output":{"name":"websocketresult"}}],[11,"shutdown_sender","","Shuts down the sending half of the client connection, will cause all pending\nand future IO to return immediately with an appropriate value.",12,null],[11,"shutdown_receiver","","Shuts down the receiving half of the client connection, will cause all pending\nand future IO to return immediately with an appropriate value.",12,null],[11,"shutdown","","Shuts down the client connection, will cause all pending and future IO to\nreturn immediately with an appropriate value.",12,null],[11,"new","","Creates a Client from the given Sender and Receiver.",12,{"inputs":[{"name":"s"},{"name":"r"}],"output":{"name":"client"}}],[11,"send_dataframe","","Sends a single data frame to the remote endpoint.",12,null],[11,"send_message","","Sends a single message to the remote endpoint.",12,null],[11,"recv_dataframe","","Reads a single data frame from the remote endpoint.",12,null],[11,"incoming_dataframes","","Returns an iterator over incoming data frames.",12,null],[11,"recv_message","","Reads a single message from this receiver.",12,null],[11,"incoming_messages","","Returns an iterator over incoming messages.",12,null],[11,"get_sender","","Returns a reference to the underlying Sender.",12,null],[11,"get_receiver","","Returns a reference to the underlying Receiver.",12,null],[11,"get_mut_sender","","Returns a mutable reference to the underlying Sender.",12,null],[11,"get_mut_receiver","","Returns a mutable reference to the underlying Receiver.",12,null],[11,"split","","Split this client into its constituent Sender and Receiver pair.",12,null],[0,"server","websocket","Provides an implementation of a WebSocket server",null,null],[3,"Server","websocket::server","Represents a WebSocket server which can work with either normal (non-secure) connections, or secure WebSocket connections.",null,null],[3,"Connection","","Represents a connection to the server that has not been processed yet.",null,null],[0,"request","","The server-side WebSocket request.",null,null],[4,"RequestUri","websocket::server::request","The Request-URI of a Request&#39;s StartLine.",null,null],[13,"AbsolutePath","","The most common request target, an absolute path and optional query.",13,null],[13,"AbsoluteUri","","An absolute URI. Used in conjunction with proxies.",13,null],[13,"Authority","","The authority form is only for use with `CONNECT` requests.",13,null],[13,"Star","","The star is used to target the entire server, instead of a specific resource.",13,null],[3,"Request","","Represents a server-side (incoming) request.",null,null],[12,"method","","The HTTP method used to create the request. All values except `Method::Get` are\nrejected by `validate()`.",14,null],[12,"url","","The target URI for this request.",14,null],[12,"version","","The HTTP version of this request.",14,null],[12,"headers","","The headers of this request.",14,null],[11,"key","","Short-cut to obtain the WebSocketKey value.",14,null],[11,"version","","Short-cut to obtain the WebSocketVersion value.",14,null],[11,"protocol","","Short-cut to obtain the WebSocketProtocol value.",14,null],[11,"extensions","","Short-cut to obtain the WebSocketExtensions value.",14,null],[11,"origin","","Short-cut to obtain the Origin value.",14,null],[11,"get_reader","","Returns a reference to the inner Reader.",14,null],[11,"get_writer","","Returns a reference to the inner Writer.",14,null],[11,"get_mut_reader","","Returns a mutable reference to the inner Reader.",14,null],[11,"get_mut_writer","","Returns a mutable reference to the inner Writer.",14,null],[11,"into_inner","","Return the inner Reader and Writer",14,null],[11,"read","","Reads an inbound request.",14,{"inputs":[{"name":"r"},{"name":"w"}],"output":{"name":"websocketresult"}}],[11,"validate","","Check if this constitutes a valid WebSocket upgrade request.",14,null],[11,"accept","","Accept this request, ready to send a response.",14,null],[11,"fail","","Fail this request by generating a Bad Request response",14,null],[0,"response","websocket::server","Struct for server-side WebSocket response.",null,null],[3,"Response","websocket::server::response","Represents a server-side (outgoing) response.",null,null],[12,"status","","The status of the response",15,null],[12,"headers","","The headers contained in this response",15,null],[12,"version","","The HTTP version of this response",15,null],[11,"accept","","Short-cut to obtain the WebSocketAccept value",15,null],[11,"protocol","","Short-cut to obtain the WebSocketProtocol value",15,null],[11,"extensions","","Short-cut to obtain the WebSocketExtensions value",15,null],[11,"get_reader","","Returns a reference to the inner Reader.",15,null],[11,"get_writer","","Returns a reference to the inner Writer.",15,null],[11,"get_mut_reader","","Returns a mutable reference to the inner Reader.",15,null],[11,"get_mut_writer","","Returns a mutable reference to the inner Writer.",15,null],[11,"get_request","","Returns a reference to the request associated with this response/",15,null],[11,"into_inner","","Return the inner Reader and Writer",15,null],[11,"new","","Create a new outbound WebSocket response.",15,{"inputs":[{"name":"request"}],"output":{"name":"response"}}],[11,"bad_request","","Create a Bad Request response",15,{"inputs":[{"name":"request"}],"output":{"name":"response"}}],[11,"accept_mut","","Short-cut to obtain a mutable reference to the WebSocketAccept value\nNote that to add a header that does not already exist, ```WebSocketResponse.headers.set()```\nmust be used.",15,null],[11,"protocol_mut","","Short-cut to obtain a mutable reference to the WebSocketProtocol value\nNote that to add a header that does not already exist, ```WebSocketResponse.headers.set()```\nmust be used.",15,null],[11,"extensions_mut","","Short-cut to obtain a mutable reference to the WebSocketExtensions value\nNote that to add a header that does not already exist, ```WebSocketResponse.headers.set()```\nmust be used.",15,null],[11,"send_with","","Send this response with the given data frame type D, Sender B and Receiver C.",15,null],[11,"send_into_inner","","Send this response, retrieving the inner Reader and Writer",15,null],[11,"send","","Send this response, returning a Client ready to transmit/receive data frames",15,null],[11,"bind","websocket::server","Bind this Server to this socket",16,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"bind_secure","","Bind this Server to this socket, utilising the given SslContext",16,{"inputs":[{"name":"t"},{"name":"sslcontext"}],"output":{"name":"result"}}],[11,"local_addr","","Get the socket address of this server",16,null],[11,"try_clone","","Create a new independently owned handle to the underlying socket.",16,null],[11,"accept","","Wait for and accept an incoming WebSocket connection, returning a WebSocketRequest",16,null],[11,"next","","",16,null],[11,"read_request","","Process this connection and read the request.",17,null],[11,"shutdown","","Shuts down the currennt connection in the specified way.\nAll future IO calls to this connection will return immediately with an appropriate\nreturn value.",17,null],[0,"dataframe","websocket","Module containing the default implementation of data frames.",null,null],[3,"DataFrame","websocket::dataframe","Represents a WebSocket data frame.",null,null],[12,"finished","","Whether or no this constitutes the end of a message",18,null],[12,"reserved","","The reserved portion of the data frame (RFC6455 5.2)",18,null],[12,"opcode","","The opcode associated with this data frame",18,null],[12,"data","","The payload associated with this data frame",18,null],[4,"Opcode","","Represents a WebSocket data frame opcode",null,null],[13,"Continuation","","A continuation data frame",19,null],[13,"Text","","A UTF-8 text data frame",19,null],[13,"Binary","","A binary data frame",19,null],[13,"NonControl1","","An undefined non-control data frame",19,null],[13,"NonControl2","","An undefined non-control data frame",19,null],[13,"NonControl3","","An undefined non-control data frame",19,null],[13,"NonControl4","","An undefined non-control data frame",19,null],[13,"NonControl5","","An undefined non-control data frame",19,null],[13,"Close","","A close data frame",19,null],[13,"Ping","","A ping data frame",19,null],[13,"Pong","","A pong data frame",19,null],[13,"Control1","","An undefined control data frame",19,null],[13,"Control2","","An undefined control data frame",19,null],[13,"Control3","","An undefined control data frame",19,null],[13,"Control4","","An undefined control data frame",19,null],[13,"Control5","","An undefined control data frame",19,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"new","","Creates a new DataFrame.",18,{"inputs":[{"name":"bool"},{"name":"opcode"},{"name":"vec"}],"output":{"name":"dataframe"}}],[11,"read_dataframe","","Reads a DataFrame from a Reader.",18,{"inputs":[{"name":"r"},{"name":"bool"}],"output":{"name":"websocketresult"}}],[11,"is_last","","",18,null],[11,"opcode","","",18,null],[11,"reserved","","",18,null],[11,"payload","","",18,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"eq","","",19,null],[11,"new","","Attempts to form an Opcode from a nibble.",19,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[0,"message","websocket","Module containing the default implementation for messages.",null,null],[3,"Message","websocket::message","Represents a WebSocket message.",null,null],[12,"opcode","","Type of WebSocket message",20,null],[12,"cd_status_code","","Optional status code to send when closing a connection.\n(only used if this message is of Type::Close)",20,null],[12,"payload","","Main payload",20,null],[4,"Type","","Valid types of messages (in the default implementation)",null,null],[13,"Text","","Message with UTF8 test",21,null],[13,"Binary","","Message containing binary data",21,null],[13,"Ping","","Ping message with data",21,null],[13,"Pong","","Pong message with data",21,null],[13,"Close","","Close connection message with optional reason",21,null],[8,"IntoCowBytes","","Trait representing the ability to convert\nself to a `Cow&lt;&#39;a, [u8]&gt;`",null,null],[10,"into","","Consume `self` and produce a `Cow&lt;&#39;a, [u8]&gt;`",22,null],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"clone","","",21,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"text","","Create a new WebSocket message with text data",20,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"binary","","Create a new WebSocket message with binary data",20,{"inputs":[{"name":"b"}],"output":{"name":"self"}}],[11,"close","","Create a new WebSocket message that signals the end of a WebSocket\nconnection, although messages can still be sent after sending this",20,{"inputs":[],"output":{"name":"self"}}],[11,"close_because","","Create a new WebSocket message that signals the end of a WebSocket\nconnection and provide a text reason and a status code for why.\nMessages can still be sent after sending this message.",20,{"inputs":[{"name":"u16"},{"name":"s"}],"output":{"name":"self"}}],[11,"ping","","Create a ping WebSocket message, a pong is usually sent back\nafter sending this with the same data",20,{"inputs":[{"name":"p"}],"output":{"name":"self"}}],[11,"pong","","Create a pong WebSocket message, usually a response to a\nping message",20,{"inputs":[{"name":"p"}],"output":{"name":"self"}}],[11,"into_pong","","Convert a ping message to a pong, keeping the data.\nThis will fail if the original message is not a ping.",20,null],[11,"is_last","","",20,null],[11,"opcode","","",20,null],[11,"reserved","","",20,null],[11,"payload","","",20,null],[11,"size","","",20,null],[11,"write_payload","","",20,null],[11,"dataframes","","",20,null],[11,"from_dataframes","","Attempt to form a message from a series of data frames",20,{"inputs":[{"name":"vec"}],"output":{"name":"websocketresult"}}],[0,"result","websocket","The result type used within Rust-WebSocket",null,null],[4,"WebSocketError","websocket::result","Represents a WebSocket error",null,null],[13,"ProtocolError","","A WebSocket protocol error",23,null],[13,"RequestError","","Invalid WebSocket request error",23,null],[13,"ResponseError","","Invalid WebSocket response error",23,null],[13,"DataFrameError","","Invalid WebSocket data frame error",23,null],[13,"NoDataAvailable","","No data available",23,null],[13,"IoError","","An input/output error",23,null],[13,"HttpError","","An HTTP parsing error",23,null],[13,"UrlError","","A URL parsing error",23,null],[13,"WebSocketUrlError","","A WebSocket URL error",23,null],[13,"SslError","","An SSL error",23,null],[13,"Utf8Error","","A UTF-8 error",23,null],[4,"WSUrlErrorKind","","Represents a WebSocket URL error",null,null],[13,"CannotSetFragment","","Fragments are not valid in a WebSocket URL",24,null],[13,"InvalidScheme","","The scheme provided is invalid for a WebSocket",24,null],[6,"WebSocketResult","","The type used for WebSocket results",null,null],[11,"fmt","","",23,null],[11,"fmt","","",23,null],[11,"description","","",23,null],[11,"cause","","",23,null],[11,"from","","",23,{"inputs":[{"name":"error"}],"output":{"name":"websocketerror"}}],[11,"from","","",23,{"inputs":[{"name":"httperror"}],"output":{"name":"websocketerror"}}],[11,"from","","",23,{"inputs":[{"name":"parseerror"}],"output":{"name":"websocketerror"}}],[11,"from","","",23,{"inputs":[{"name":"sslerror"}],"output":{"name":"websocketerror"}}],[11,"from","","",23,{"inputs":[{"name":"utf8error"}],"output":{"name":"websocketerror"}}],[11,"from","","",23,{"inputs":[{"name":"wsurlerrorkind"}],"output":{"name":"websocketerror"}}],[11,"fmt","","",24,null],[11,"fmt","","",24,null],[11,"description","","",24,null],[0,"stream","websocket","Provides the default stream type for WebSocket connections.",null,null],[4,"SocketAddr","websocket::stream","Representation of a socket address for networking applications.",null,null],[13,"V4","","An IPv4 socket address which is a (ip, port) combination.",25,null],[13,"V6","","An IPv6 socket address",25,null],[4,"Shutdown","","Possible values which can be passed to the [`shutdown`] method of\n[`TcpStream`].",null,null],[13,"Read","","Indicates that the reading portion of this stream/socket should be shut\ndown. All currently blocked and future reads will return `Ok(0)`.",26,null],[13,"Write","","Indicates that the writing portion of this stream/socket should be shut\ndown. All currently blocked and future writes will return an error.",26,null],[13,"Both","","Shut down both the reading and writing portions of this stream.",26,null],[3,"TcpStream","","A structure which represents a TCP stream between a local socket and a\nremote socket.",null,null],[4,"WebSocketStream","","A useful stream type for carrying WebSocket connections.",null,null],[13,"Tcp","","A TCP stream.",27,null],[13,"Ssl","","An SSL-backed TCP Stream",27,null],[11,"read","","",27,null],[11,"write","","",27,null],[11,"flush","","",27,null],[11,"peer_addr","","See `TcpStream.peer_addr()`.",27,null],[11,"local_addr","","See `TcpStream.local_addr()`.",27,null],[11,"set_nodelay","","See `TcpStream.set_nodelay()`.",27,null],[11,"set_keepalive","","See `TcpStream.set_keepalive()`.",27,null],[11,"shutdown","","See `TcpStream.shutdown()`.",27,null],[11,"try_clone","","See `TcpStream.try_clone()`.",27,null],[0,"header","websocket","Structs representing headers relevant in a WebSocket context.",null,null],[3,"Headers","websocket::header","A map of header fields on requests and responses.",null,null],[3,"WebSocketKey","","Represents a Sec-WebSocket-Key header.",null,null],[12,"0","","",28,null],[3,"WebSocketAccept","","Represents a Sec-WebSocket-Accept header",null,null],[3,"WebSocketProtocol","","Represents a Sec-WebSocket-Protocol header",null,null],[12,"0","","",29,null],[3,"Origin","","Represents an Origin header",null,null],[12,"0","","",30,null],[4,"WebSocketVersion","","Represents a Sec-WebSocket-Version header",null,null],[13,"WebSocket13","","The version of WebSocket defined in RFC6455",31,null],[13,"Unknown","","An unknown version of WebSocket",31,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"clone","","",32,null],[11,"fmt","","",32,null],[11,"from_str","","",32,{"inputs":[{"name":"str"}],"output":{"name":"websocketresult"}}],[11,"new","","Create a new WebSocketAccept from the given WebSocketKey",32,{"inputs":[{"name":"websocketkey"}],"output":{"name":"websocketaccept"}}],[11,"serialize","","Return the Base64 encoding of this WebSocketAccept",32,null],[11,"header_name","","",32,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",32,null],[11,"fmt_header","","",32,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"clone","","",28,null],[11,"fmt","","",28,null],[11,"from_str","","",28,{"inputs":[{"name":"str"}],"output":{"name":"websocketresult"}}],[11,"new","","Generate a new, random WebSocketKey",28,{"inputs":[],"output":{"name":"websocketkey"}}],[11,"serialize","","Return the Base64 encoding of this WebSocketKey",28,null],[11,"header_name","","",28,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",28,null],[11,"fmt_header","","",28,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"clone","","",29,null],[11,"fmt","","",29,null],[11,"deref","","",29,null],[11,"header_name","","",29,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",29,null],[11,"fmt_header","","",29,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"clone","","",31,null],[11,"fmt","","",31,null],[11,"header_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",31,null],[11,"fmt_header","","",31,null],[0,"extensions","","Provides the Sec-WebSocket-Extensions header.",null,null],[3,"WebSocketExtensions","websocket::header::extensions","Represents a Sec-WebSocket-Extensions header",null,null],[12,"0","","",33,null],[3,"Extension","","A WebSocket extension",null,null],[12,"name","","The name of this extension",34,null],[12,"params","","The parameters for this extension",34,null],[3,"Parameter","","A parameter for an Extension",null,null],[12,"name","","The name of this parameter",35,null],[12,"value","","The value of this parameter, if any",35,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"clone","","",33,null],[11,"fmt","","",33,null],[11,"deref","","",33,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"new","","Creates a new extension with the given name",34,{"inputs":[{"name":"string"}],"output":{"name":"extension"}}],[11,"from_str","","",34,{"inputs":[{"name":"str"}],"output":{"name":"websocketresult"}}],[11,"fmt","","",34,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"new","","Creates a new parameter with the given name and value",35,{"inputs":[{"name":"string"},{"name":"option"}],"output":{"name":"parameter"}}],[11,"fmt","","",35,null],[11,"header_name","","",33,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",33,null],[11,"fmt_header","","",33,null],[11,"eq","websocket::header","",30,null],[11,"ne","","",30,null],[11,"clone","","",30,null],[11,"fmt","","",30,null],[11,"deref","","",30,null],[11,"header_name","","",30,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",30,null],[11,"fmt_header","","",30,null],[0,"receiver","websocket","The default implementation of a WebSocket Receiver.",null,null],[3,"Receiver","websocket::receiver","A Receiver that wraps a Reader and provides a default implementation using\nDataFrames and Messages.",null,null],[11,"new","","Create a new Receiver using the specified Reader.",36,{"inputs":[{"name":"bufreader"},{"name":"bool"}],"output":{"name":"receiver"}}],[11,"get_ref","","Returns a reference to the underlying Reader.",36,null],[11,"get_mut","","Returns a mutable reference to the underlying Reader.",36,null],[11,"shutdown","","Closes the receiver side of the connection, will cause all pending and future IO to\nreturn immediately with an appropriate value.",36,null],[11,"shutdown_all","","Shuts down both Sender and Receiver, will cause all pending and future IO to\nreturn immediately with an appropriate value.",36,null],[11,"recv_dataframe","","Reads a single data frame from the remote endpoint.",36,null],[11,"recv_message_dataframes","","Returns the data frames that constitute one message.",36,null],[0,"sender","websocket","The default implementation of a WebSocket Sender.",null,null],[3,"Sender","websocket::sender","A Sender that wraps a Writer and provides a default implementation using\nDataFrames and Messages.",null,null],[11,"new","","Create a new WebSocketSender using the specified Writer.",37,{"inputs":[{"name":"w"},{"name":"bool"}],"output":{"name":"sender"}}],[11,"get_ref","","Returns a reference to the underlying Writer.",37,null],[11,"get_mut","","Returns a mutable reference to the underlying Writer.",37,null],[11,"shutdown","","Closes the sender side of the connection, will cause all pending and future IO to\nreturn immediately with an appropriate value.",37,null],[11,"shutdown_all","","Shuts down both Sender and Receiver, will cause all pending and future IO to\nreturn immediately with an appropriate value.",37,null],[11,"send_dataframe","","Sends a single data frame to the remote endpoint.",37,null],[11,"to_components","websocket::client::request","",38,null],[11,"parse","","Parse an absolute URL from a string.",38,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",38,null],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",38,{"inputs":[],"output":{"name":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",38,null],[11,"into_string","","Return the serialization of this URL.",38,null],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",38,null],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the &#39;:&#39; delimiter.",38,null],[11,"has_authority","","Return whether the URL has an &#39;authority&#39;,\nwhich can contain a username, password, host, and port number.",38,null],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL,\nmeaning that parsing a relative URL string with this URL as the base will return an error.",38,null],[11,"username","","Return the username for this URL (typically the empty string)\nas a percent-encoded ASCII string.",38,null],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",38,null],[11,"has_host","","Equivalent to `url.host().is_some()`.",38,null],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",38,null],[11,"host","","Return the parsed representation of the host for this URL.\nNon-ASCII domain labels are punycode-encoded per IDNA.",38,null],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",38,null],[11,"port","","Return the port number for this URL, if any.",38,null],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",38,null],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",38,null],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string.\nFor cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with &#39;/&#39;.\nFor other URLs, this starts with a &#39;/&#39; slash\nand continues with slash-separated path segments.",38,null],[11,"path_segments","","Unless this URL is cannot-be-a-base,\nreturn an iterator of &#39;/&#39; slash-separated path segments,\neach as a percent-encoded ASCII string.",38,null],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",38,null],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return an iterator of (key, value) pairs.",38,null],[11,"fragment","","Return this URL’s fragment identifier, if any.",38,null],[11,"set_fragment","","Change this URL’s fragment identifier.",38,null],[11,"set_query","","Change this URL’s query string.",38,null],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs\nin `application/x-www-form-urlencoded` syntax.",38,null],[11,"set_path","","Change this URL’s path.",38,null],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",38,null],[11,"set_port","","Change this URL’s port number.",38,null],[11,"set_host","","Change this URL’s host.",38,null],[11,"set_ip_host","","Change this URL’s host to the given IP address.",38,null],[11,"set_password","","Change this URL’s password.",38,null],[11,"set_username","","Change this URL’s username.",38,null],[11,"set_scheme","","Change this URL’s scheme.",38,null],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",38,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",38,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",38,null],[11,"try_split","websocket::stream","",39,null],[11,"close","","",39,null],[11,"cmp","websocket::client::request","",38,null],[11,"fmt","","",38,null],[11,"to_socket_addrs","","",38,null],[11,"hash","","",38,null],[11,"index","","",38,null],[11,"index","","",38,null],[11,"index","","",38,null],[11,"index","","",38,null],[11,"eq","","",38,null],[11,"partial_cmp","","",38,null],[11,"from_str","","",38,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",38,null],[11,"as_ref","","",38,null],[11,"clone","","",38,null],[11,"set_recv_buffer_size","websocket::stream","",39,null],[11,"recv_buffer_size","","",39,null],[11,"set_send_buffer_size","","",39,null],[11,"send_buffer_size","","",39,null],[11,"set_nodelay","","",39,null],[11,"nodelay","","",39,null],[11,"set_keepalive","","",39,null],[11,"keepalive","","",39,null],[11,"set_keepalive_ms","","",39,null],[11,"keepalive_ms","","",39,null],[11,"set_read_timeout_ms","","",39,null],[11,"read_timeout_ms","","",39,null],[11,"set_write_timeout_ms","","",39,null],[11,"write_timeout_ms","","",39,null],[11,"set_read_timeout","","",39,null],[11,"read_timeout","","",39,null],[11,"set_write_timeout","","",39,null],[11,"write_timeout","","",39,null],[11,"set_ttl","","",39,null],[11,"ttl","","",39,null],[11,"set_only_v6","","",39,null],[11,"only_v6","","",39,null],[11,"connect","","",39,null],[11,"take_error","","",39,null],[11,"set_nonblocking","","",39,null],[11,"set_linger","","",39,null],[11,"linger","","",39,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"eq","","",26,null],[11,"into_raw_fd","","",39,null],[11,"hash","","",25,null],[11,"write","","",39,null],[11,"flush","","",39,null],[11,"from_raw_fd","","",39,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"fmt","","",25,null],[11,"to_socket_addrs","","",25,null],[11,"read","","",39,null],[11,"read_to_end","","",39,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"from_str","","",25,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",39,null],[11,"fmt","","",25,null],[11,"fmt","","",26,null],[11,"as_raw_fd","","",39,null],[11,"extend","websocket::header","",40,null],[11,"eq","","",40,null],[11,"eq","websocket::server::request","",13,null],[11,"ne","","",13,null],[11,"into_url","websocket::client::request","",38,null],[11,"fmt","websocket::header","",40,null],[11,"fmt","websocket::server::request","",13,null],[11,"clone","websocket::header","",40,null],[11,"clone","websocket::server::request","",13,null],[11,"from_iter","websocket::header","",40,{"inputs":[{"name":"i"}],"output":{"name":"headers"}}],[11,"fmt","","",40,null],[11,"fmt","websocket::server::request","",13,null],[11,"from_str","","",13,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","websocket::stream","Creates a new socket address from the (ip, port) pair.",25,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",25,null],[11,"set_ip","","Change the IP address associated with this socket address.",25,null],[11,"port","","Returns the port number associated with this socket address.",25,null],[11,"set_port","","Change the port number associated with this socket address.",25,null],[11,"connect","","Opens a TCP connection to a remote host.",39,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",39,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",39,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",39,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",39,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",39,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",39,null],[11,"read_timeout","","Returns the read timeout of this socket.",39,null],[11,"write_timeout","","Returns the write timeout of this socket.",39,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",39,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",39,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",39,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",39,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",39,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",39,null],[11,"new","websocket::header","Creates a new, empty headers map.",40,{"inputs":[],"output":{"name":"headers"}}],[11,"set","","Set a header field to the corresponding value.",40,null],[11,"get_raw","","Access the raw value of a header.",40,null],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",40,null],[11,"remove_raw","","Remove a header set by set_raw",40,null],[11,"get","","Get a reference to the header field&#39;s value, if it exists.",40,null],[11,"get_mut","","Get a mutable reference to the header field&#39;s value, if it exists.",40,null],[11,"has","","Returns a boolean of whether a certain header is in the map.",40,null],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",40,null],[11,"iter","","Returns an iterator over the header fields.",40,null],[11,"len","","Returns the number of headers in the map.",40,null],[11,"clear","","Remove all headers from the map.",40,null]],"paths":[[8,"Message"],[8,"Sender"],[8,"Receiver"],[3,"DataFrameIterator"],[3,"MessageIterator"],[3,"DataFrameHeader"],[3,"DataFrameFlags"],[3,"Masker"],[8,"ToWebSocketUrlComponents"],[8,"DataFrame"],[3,"Request"],[3,"Response"],[3,"Client"],[4,"RequestUri"],[3,"Request"],[3,"Response"],[3,"Server"],[3,"Connection"],[3,"DataFrame"],[4,"Opcode"],[3,"Message"],[4,"Type"],[8,"IntoCowBytes"],[4,"WebSocketError"],[4,"WSUrlErrorKind"],[4,"SocketAddr"],[4,"Shutdown"],[4,"WebSocketStream"],[3,"WebSocketKey"],[3,"WebSocketProtocol"],[3,"Origin"],[4,"WebSocketVersion"],[3,"WebSocketAccept"],[3,"WebSocketExtensions"],[3,"Extension"],[3,"Parameter"],[3,"Receiver"],[3,"Sender"],[3,"Url"],[3,"TcpStream"],[3,"Headers"]]};
searchIndex["multipart"] = {"doc":"Client- and server-side abstractions for HTTP `multipart/form-data` requests.","items":[[0,"client","multipart","The client-side abstraction for multipart requests. Enabled with the `client` feature (on by\ndefault).",null,null],[3,"SizedRequest","multipart::client","A wrapper around a request object that measures the request body and sets the `Content-Length`\nheader to its size in bytes.",null,null],[3,"Multipart","","The entry point of the client-side multipart API.",null,null],[0,"hyper","","Client-side integration with [Hyper](https://github.com/hyperium/hyper).\nEnabled with the `hyper` feature (on by default).",null,null],[5,"content_type","multipart::client::hyper","Create a `Content-Type: multipart/form-data;boundary={bound}`",null,{"inputs":[{"name":"str"}],"output":{"name":"contenttype"}}],[0,"lazy","multipart::client","Multipart requests which write out their data in one fell swoop.",null,null],[3,"LazyError","multipart::client::lazy","An error for lazily written multipart requests, including the original error as well\nas the field which caused the error, if applicable.",null,null],[12,"field_name","","The field that caused the error.\nIf `None`, there was a problem opening the stream to write or finalizing the stream.",0,null],[12,"error","","The inner error.",0,null],[3,"Multipart","","A multipart request which writes all fields at once upon being provided an output stream.",null,null],[3,"PreparedFields","","The result of [`Multipart::prepare()`](struct.Multipart.html#method.prepare) or\n`Multipart::prepare_threshold()`. Implements `Read`, contains the entire request body.",null,null],[11,"client_request","","#### Feature: `hyper`\nComplete a POST request with the given `hyper::client::Client` and URL.",1,null],[11,"client_request_mut","","#### Feature: `hyper`\nComplete a POST request with the given `hyper::client::Client` and URL;\nallows mutating the `hyper::client::RequestBuilder` via the passed closure.",1,null],[11,"to_body","","#### Feature: `hyper`\nConvert `self` to `hyper::client::Body`.",2,null],[6,"LazyIoError","","A `LazyError` wrapping `std::io::Error`.",null,null],[8,"IntoCowPath","","Conversion trait necessary for `Multipart::add_file()` to accept borrowed or owned strings\nand borrowed or owned paths",null,null],[10,"into_cow_path","","Self-explanatory, hopefully",3,null],[11,"into","","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"multipart"}}],[11,"new","","Initialize a new lazy dynamic request.",1,{"inputs":[],"output":{"name":"self"}}],[11,"add_text","","Add a text field to this request.",1,null],[11,"add_file","","Add a file field to this request.",1,null],[11,"add_stream","","Add a generic stream field to this request,",1,null],[11,"send","","Convert `req` to `HttpStream`, write out the fields in this request, and finish the\nrequest, returning the response if successful, or the first error encountered.",1,null],[11,"prepare","","Export the multipart data contained in this lazy request as an adaptor which implements `Read`.",1,null],[11,"prepare_threshold","","Export the multipart data contained in this lazy request to an adaptor which implements `Read`.",1,null],[11,"content_len","","Get the content-length value for this set of fields, if applicable (all fields are sized,\ni.e. not generic streams).",2,null],[11,"read","","",2,null],[11,"write","multipart::client","",4,null],[11,"flush","","",4,null],[11,"apply_headers","","`SizedRequest` ignores `_content_len` because it sets its own later.",4,null],[11,"open_stream","","",4,null],[11,"finish","","",4,null],[8,"HttpRequest","","A trait describing an HTTP request that can be used to send multipart data.",null,null],[16,"Stream","","The HTTP stream type that can be opend by this request, to which the multipart data will be\nwritten.",5,null],[16,"Error","","The error type for this request.\nMust be compatible with `io::Error` as well as `Self::HttpStream::Error`",5,null],[10,"apply_headers","","Set the `Content-Type` header to `multipart/form-data` and supply the `boundary` value.\nIf `content_len` is given, set the `Content-Length` header to its value.",5,null],[10,"open_stream","","Open the request stream and return it or any error otherwise.",5,null],[8,"HttpStream","","A trait describing an open HTTP stream that can be written to.",null,null],[16,"Request","","The request type that opened this stream.",6,null],[16,"Response","","The response type that will be returned after the request is completed.",6,null],[16,"Error","","The error type for this stream.\nMust be compatible with `io::Error` as well as `Self::Request::Error`.",6,null],[10,"finish","","Finalize and close the stream and return the response object, or any error otherwise.",6,null],[11,"from_request","","Create a new `Multipart` to wrap a request.",7,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"write_text","","Write a text field to this multipart request.\n`name` and `val` can be either owned `String` or `&amp;str`.",7,null],[11,"write_file","","Open a file pointed to by `path` and write its contents to the multipart request,\nsupplying its filename and guessing its `Content-Type` from its extension.",7,null],[11,"write_stream","","Write a byte stream to the multipart request as a file field, supplying `filename` if given,\nand `content_type` if given or `&quot;application/octet-stream&quot;` if not.",7,null],[11,"send","","Finalize the request and return the response from the server, or the last error if set.",7,null],[11,"from_request_sized","","Create a new `Multipart` using the `SizedRequest` wrapper around `req`.",7,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[14,"chain_result","multipart","Chain a series of results together, with or without previous results.",null,null]],"paths":[[3,"LazyError"],[3,"Multipart"],[3,"PreparedFields"],[8,"IntoCowPath"],[3,"SizedRequest"],[8,"HttpRequest"],[8,"HttpStream"],[3,"Multipart"]]};
searchIndex["hyper"] = {"doc":"# Hyper","items":[[3,"Url","hyper","A parsed URL record.",null,null],[3,"LanguageTag","","A language tag as described in [BCP47](http://tools.ietf.org/html/bcp47).",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all\nother aspects such as script, region or spefic invariants.",0,null],[12,"extlangs","","Extended language subtags are used to identify certain specially\nselected languages that, for various historical and compatibility\nreasons, are closely identified with or tagged using an existing\nprimary language subtag.",0,null],[12,"script","","Script subtags are used to indicate the script or writing system\nvariations that distinguish the written forms of a language or its\ndialects.",0,null],[12,"region","","Region subtags are used to indicate linguistic variations associated\nwith or appropriate to a specific country, territory, or region.\nTypically, a region subtag is used to indicate variations such as\nregional dialects or usage, or region-specific spelling conventions.\nIt can also be used to indicate that content is expressed in a way\nthat is appropriate for use throughout a region, for instance,\nSpanish content tailored to be useful throughout Latin America.",0,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized\nvariations that define a language or its dialects that are not\ncovered by other available subtags.",0,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in\nvarious applications.  They are intended to identify information that\nis commonly used in association with languages or language tags but\nthat is not part of language identification.",0,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language\nthat are important in a given context by private agreement.",0,null],[0,"client","","HTTP Client",null,null],[3,"ProxyConfig","hyper::client","Proxy server configuration with a custom TLS wrapper.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[12,"2","","",1,null],[3,"Client","","A Client to use additional features with Requests.",null,null],[3,"RequestBuilder","","Options for an individual Request.",null,null],[4,"Body","","An enum of possible body types for a Request.",null,null],[13,"ChunkedBody","","A Reader does not necessarily know it&#39;s size, so it is chunked.",2,null],[13,"SizedBody","","For Readers that can know their size, like a `File`.",2,null],[13,"BufBody","","A String has a size, and uses Content-Length.",2,null],[4,"RedirectPolicy","","Behavior regarding how to handle redirects within a Client.",null,null],[13,"FollowNone","","Don&#39;t follow any redirects.",3,null],[13,"FollowAll","","Follow all redirects.",3,null],[13,"FollowIf","","Follow a redirect if the contained function returns true.",3,null],[0,"pool","","Client Connection Pooling",null,null],[3,"Pool","hyper::client::pool","The `NetworkConnector` that behaves as a connection pool used by hyper&#39;s `Client`.",null,null],[3,"Config","","Config options for the `Pool`.",null,null],[12,"max_idle","","The maximum idle connections *per host*.",4,null],[3,"PooledStream","","A Stream that will try to be returned to the Pool when dropped.",null,null],[11,"fmt","","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"config"}}],[11,"new","","Creates a `Pool` with a `DefaultConnector`.",5,{"inputs":[{"name":"config"}],"output":{"name":"pool"}}],[11,"with_connector","","Creates a `Pool` with a specified `NetworkConnector`.",5,{"inputs":[{"name":"config"},{"name":"c"}],"output":{"name":"pool"}}],[11,"clear_idle","","Clear all idle connections from the Pool, closing them.",5,null],[11,"connect","","",5,null],[11,"fmt","","",6,null],[11,"into_inner","","Take the wrapped stream out of the pool completely.",6,null],[11,"read","","",6,null],[11,"write","","",6,null],[11,"flush","","",6,null],[11,"peer_addr","","",6,null],[11,"set_read_timeout","","",6,null],[11,"set_write_timeout","","",6,null],[11,"close","","",6,null],[11,"set_previous_response_expected_no_content","","",6,null],[11,"previous_response_expected_no_content","","",6,null],[11,"drop","","",6,null],[0,"request","hyper::client","Client Requests",null,null],[3,"Request","hyper::client::request","A client request to a remote server.\nThe W type tracks the state of the request, Fresh vs Streaming.",null,null],[12,"url","","The target URI for this request.",7,null],[12,"version","","The HTTP version of this request.",7,null],[11,"headers","","Read the Request headers.",7,null],[11,"method","","Read the Request method.",7,null],[11,"set_write_timeout","","Set the write timeout.",7,null],[11,"set_read_timeout","","Set the read timeout.",7,null],[11,"with_message","","Create a new `Request&lt;Fresh&gt;` that will use the given `HttpMessage` for its communication\nwith the server. This implies that the given `HttpMessage` instance has already been\nproperly initialized by the caller (e.g. a TCP connection&#39;s already established).",7,{"inputs":[{"name":"method"},{"name":"url"},{"name":"box"}],"output":{"name":"result"}}],[11,"new","","Create a new client request.",7,{"inputs":[{"name":"method"},{"name":"url"}],"output":{"name":"result"}}],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",7,{"inputs":[{"name":"method"},{"name":"url"},{"name":"c"}],"output":{"name":"result"}}],[11,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",7,null],[11,"headers_mut","","Get a mutable reference to the Request headers.",7,null],[11,"send","","Completes writing the request, and returns a response to read from.",7,null],[11,"write","","",7,null],[11,"flush","","",7,null],[0,"response","hyper::client","Client Responses",null,null],[3,"Response","hyper::client::response","A response for a client request to a remote server.",null,null],[12,"status","","The status from the server.",8,null],[12,"headers","","The headers from the server.",8,null],[12,"version","","The HTTP version of this response from the server.",8,null],[12,"url","","The final URL of this response.",8,null],[11,"fmt","","",8,null],[11,"new","","Creates a new response from a server.",8,{"inputs":[{"name":"url"},{"name":"box"}],"output":{"name":"result"}}],[11,"with_message","","Creates a new response received from the server on the given `HttpMessage`.",8,{"inputs":[{"name":"url"},{"name":"box"}],"output":{"name":"result"}}],[11,"status_raw","","Get the raw status code and reason.",8,null],[11,"read","","",8,null],[11,"drop","","",8,null],[8,"IntoUrl","hyper::client","A helper trait to convert common objects into a Url.",null,null],[10,"into_url","","Consumes the object, trying to return a Url.",9,null],[11,"fmt","","",10,null],[11,"new","","Create a new Client.",10,{"inputs":[],"output":{"name":"client"}}],[11,"with_pool_config","","Create a new Client with a configured Pool Config.",10,{"inputs":[{"name":"config"}],"output":{"name":"client"}}],[11,"with_http_proxy","","",10,{"inputs":[{"name":"h"},{"name":"u16"}],"output":{"name":"client"}}],[11,"with_proxy_config","","",10,{"inputs":[{"name":"proxyconfig"}],"output":{"name":"client"}}],[11,"with_connector","","Create a new client with a specific connector.",10,{"inputs":[{"name":"c"}],"output":{"name":"client"}}],[11,"with_protocol","","Create a new client with a specific `Protocol`.",10,{"inputs":[{"name":"p"}],"output":{"name":"client"}}],[11,"set_redirect_policy","","Set the RedirectPolicy.",10,null],[11,"set_read_timeout","","Set the read timeout value for all requests.",10,null],[11,"set_write_timeout","","Set the write timeout value for all requests.",10,null],[11,"get","","Build a Get request.",10,null],[11,"head","","Build a Head request.",10,null],[11,"patch","","Build a Patch request.",10,null],[11,"post","","Build a Post request.",10,null],[11,"put","","Build a Put request.",10,null],[11,"delete","","Build a Delete request.",10,null],[11,"request","","Build a new request using this Client.",10,null],[11,"default","","",10,{"inputs":[],"output":{"name":"client"}}],[11,"body","","Set a request body to be sent.",11,null],[11,"headers","","Add additional headers to the request.",11,null],[11,"header","","Add an individual new header to the request.",11,null],[11,"send","","Execute this request and receive a Response back.",11,null],[11,"read","","",2,null],[11,"from","","",2,{"inputs":[{"name":"r"}],"output":{"name":"body"}}],[11,"into_url","hyper","",12,null],[11,"fmt","hyper::client","",3,null],[11,"clone","","",3,null],[11,"default","","",3,{"inputs":[],"output":{"name":"redirectpolicy"}}],[0,"error","hyper","Error and Result module.",null,null],[4,"ParseError","hyper::error","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",13,null],[13,"IdnaError","","",13,null],[13,"InvalidPort","","",13,null],[13,"InvalidIpv4Address","","",13,null],[13,"InvalidIpv6Address","","",13,null],[13,"InvalidDomainCharacter","","",13,null],[13,"RelativeUrlWithoutBase","","",13,null],[13,"RelativeUrlWithCannotBeABaseBase","","",13,null],[13,"SetHostOnCannotBeABaseUrl","","",13,null],[13,"Overflow","","",13,null],[4,"Error","","A set of errors that can occur parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",14,null],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",14,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",14,null],[13,"Header","","An invalid `Header`.",14,null],[13,"TooLarge","","A message head is too large to be reasonable.",14,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",14,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",14,null],[13,"Ssl","","An error from a SSL library.",14,null],[13,"Http2","","An HTTP/2-specific error, coming from the `solicit` library.",14,null],[13,"Utf8","","Parsing a field as string failed",14,null],[6,"Result","","Result type often returned from methods that can have hyper `Error`s.",null,null],[11,"fmt","","",14,null],[11,"fmt","","",14,null],[11,"description","","",14,null],[11,"cause","","",14,null],[11,"from","","",14,{"inputs":[{"name":"ioerror"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"parseerror"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"sslerror"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"utf8error"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"http2error"}],"output":{"name":"error"}}],[0,"method","hyper","The HTTP request method",null,null],[4,"Method","hyper::method","The Request Method (VERB)",null,null],[13,"Options","","OPTIONS",15,null],[13,"Get","","GET",15,null],[13,"Post","","POST",15,null],[13,"Put","","PUT",15,null],[13,"Delete","","DELETE",15,null],[13,"Head","","HEAD",15,null],[13,"Trace","","TRACE",15,null],[13,"Connect","","CONNECT",15,null],[13,"Patch","","PATCH",15,null],[13,"Extension","","Method extensions. An example would be `let m = Extension(&quot;FOO&quot;.to_string())`.",15,null],[11,"clone","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"hash","","",15,null],[11,"fmt","","",15,null],[11,"as_ref","","",15,null],[11,"safe","","Whether a method is considered &quot;safe&quot;, meaning the request is\nessentially read-only.",15,null],[11,"idempotent","","Whether a method is considered &quot;idempotent&quot;, meaning the request has\nthe same result is executed multiple times.",15,null],[11,"from_str","","",15,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",15,null],[0,"header","hyper","Headers container, and common header fields.",null,null],[3,"CookiePair","hyper::header","",null,null],[12,"name","","",16,null],[12,"value","","",16,null],[12,"expires","","",16,null],[12,"max_age","","",16,null],[12,"domain","","",16,null],[12,"path","","",16,null],[12,"secure","","",16,null],[12,"httponly","","",16,null],[12,"custom","","",16,null],[3,"CookieJar","","A jar of cookies for managing a session",null,null],[3,"EntityTag","","An entity tag, defined in [RFC7232](https://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"weak","","Weakness indicator for the tag",17,null],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",null,null],[12,"0","","",18,null],[3,"Quality","","Represents a quality used in quality values.",null,null],[12,"0","","",19,null],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1).",null,null],[12,"item","","The actual contents of the field.",20,null],[12,"quality","","The quality (client or server preference) for the value.",20,null],[3,"Accept","","`Accept` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.2)",null,null],[12,"0","","",21,null],[3,"AccessControlAllowCredentials","","`Access-Control-Allow-Credentials` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[12,"0","","",22,null],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-methods-response-header)",null,null],[12,"0","","",23,null],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-expose-headers-response-header)",null,null],[12,"0","","",24,null],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-max-age-response-header)",null,null],[12,"0","","",25,null],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-headers-request-header)",null,null],[12,"0","","",26,null],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-method-request-header)",null,null],[12,"0","","",27,null],[3,"AcceptCharset","","`Accept-Charset` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.3)",null,null],[12,"0","","",28,null],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.4)",null,null],[12,"0","","",29,null],[3,"AcceptLanguage","","`Accept-Language` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.5)",null,null],[12,"0","","",30,null],[3,"AcceptRanges","","`Accept-Ranges` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-2.3)",null,null],[12,"0","","",31,null],[3,"Allow","","`Allow` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.1)",null,null],[12,"0","","",32,null],[3,"Authorization","","`Authorization` header, defined in [RFC7235](https://tools.ietf.org/html/rfc7235#section-4.2)",null,null],[12,"0","","",33,null],[3,"Basic","","Credential holder for Basic Authentication",null,null],[12,"username","","The username as a possibly empty string",34,null],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",34,null],[3,"Bearer","","Token holder for Bearer Authentication, most often seen with oauth",null,null],[12,"token","","Actual bearer token as a string",35,null],[3,"CacheControl","","`Cache-Control` header, defined in [RFC7234](https://tools.ietf.org/html/rfc7234#section-5.2)",null,null],[12,"0","","",36,null],[3,"Connection","","`Connection` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-6.1)",null,null],[12,"0","","",37,null],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in [RFC6266](https://tools.ietf.org/html/rfc6266)",null,null],[12,"disposition","","The disposition",38,null],[12,"parameters","","Disposition parameters",38,null],[3,"ContentLength","","`Content-Length` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.2)",null,null],[12,"0","","",39,null],[3,"ContentEncoding","","`Content-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.2.2)",null,null],[12,"0","","",40,null],[3,"ContentLanguage","","`Content-Language` header, defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-3.1.3.2)",null,null],[12,"0","","",41,null],[3,"ContentRange","","`Content-Range` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-4.2)",null,null],[12,"0","","",42,null],[3,"ContentType","","`Content-Type` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.1.5)",null,null],[12,"0","","",43,null],[3,"Cookie","","`Cookie` header, defined in [RFC6265](http://tools.ietf.org/html/rfc6265#section-5.4)",null,null],[12,"0","","",44,null],[3,"Date","","`Date` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.1.2)",null,null],[12,"0","","",45,null],[3,"ETag","","`ETag` header, defined in [RFC7232](http://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"0","","",46,null],[3,"Expires","","`Expires` header, defined in [RFC7234](http://tools.ietf.org/html/rfc7234#section-5.3)",null,null],[12,"0","","",47,null],[3,"From","","`From` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.1)",null,null],[12,"0","","",48,null],[3,"Host","","The `Host` header.",null,null],[12,"hostname","","The hostname, such a example.domain.",49,null],[12,"port","","An optional port number.",49,null],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.3)",null,null],[12,"0","","",50,null],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.4)",null,null],[12,"0","","",51,null],[3,"LastModified","","`Last-Modified` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-2.2)",null,null],[12,"0","","",52,null],[3,"Location","","`Location` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.2)",null,null],[12,"0","","",53,null],[3,"Origin","","The `Origin` header.",null,null],[12,"scheme","","The scheme, such as http or https",54,null],[12,"host","","The host, such as Host{hostname: &quot;hyper.rs&quot;.to_owned(), port: None}",54,null],[3,"Prefer","","`Prefer` header, defined in [RFC7240](http://tools.ietf.org/html/rfc7240)",null,null],[12,"0","","",55,null],[3,"PreferenceApplied","","`Preference-Applied` header, defined in [RFC7240](http://tools.ietf.org/html/rfc7240)",null,null],[12,"0","","",56,null],[3,"Referer","","`Referer` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.2)",null,null],[12,"0","","",57,null],[3,"Server","","`Server` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.2)",null,null],[12,"0","","",58,null],[3,"SetCookie","","`Set-Cookie` header, defined [RFC6265](http://tools.ietf.org/html/rfc6265#section-4.1)",null,null],[12,"0","","",59,null],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in [RFC6797](https://tools.ietf.org/html/rfc6797)",null,null],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS Host as well as\nany subdomains of the host&#39;s domain name.",60,null],[12,"max_age","","Specifies the number of seconds, after the reception of the STS header\nfield, during which the UA regards the host (from whom the message was\nreceived) as a Known HSTS Host.",60,null],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.1)",null,null],[12,"0","","",61,null],[3,"Upgrade","","`Upgrade` header, defined in [RFC7230](http://tools.ietf.org/html/rfc7230#section-6.7)",null,null],[12,"0","","",62,null],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",null,null],[12,"name","","The protocol identifier",63,null],[12,"version","","The optional version of the protocol, often in the format &quot;DIGIT.DIGIT&quot; (e.g.. &quot;1.2&quot;)",63,null],[3,"UserAgent","","`User-Agent` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.3)",null,null],[12,"0","","",64,null],[3,"Headers","","A map of header fields on requests and responses.",null,null],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",null,null],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",null,null],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header.",null,null],[12,"0","","",65,null],[4,"Charset","","A Mime charset.",null,null],[13,"Us_Ascii","","US ASCII",66,null],[13,"Iso_8859_1","","ISO-8859-1",66,null],[13,"Iso_8859_2","","ISO-8859-2",66,null],[13,"Iso_8859_3","","ISO-8859-3",66,null],[13,"Iso_8859_4","","ISO-8859-4",66,null],[13,"Iso_8859_5","","ISO-8859-5",66,null],[13,"Iso_8859_6","","ISO-8859-6",66,null],[13,"Iso_8859_7","","ISO-8859-7",66,null],[13,"Iso_8859_8","","ISO-8859-8",66,null],[13,"Iso_8859_9","","ISO-8859-9",66,null],[13,"Iso_8859_10","","ISO-8859-10",66,null],[13,"Shift_Jis","","Shift_JIS",66,null],[13,"Euc_Jp","","EUC-JP",66,null],[13,"Iso_2022_Kr","","ISO-2022-KR",66,null],[13,"Euc_Kr","","EUC-KR",66,null],[13,"Iso_2022_Jp","","ISO-2022-JP",66,null],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",66,null],[13,"Iso_8859_6_E","","ISO-8859-6-E",66,null],[13,"Iso_8859_6_I","","ISO-8859-6-I",66,null],[13,"Iso_8859_8_E","","ISO-8859-8-E",66,null],[13,"Iso_8859_8_I","","ISO-8859-8-I",66,null],[13,"Gb2312","","GB2312",66,null],[13,"Big5","","Big5",66,null],[13,"Koi8_R","","KOI8-R",66,null],[13,"Ext","","An arbitrary charset specified as a string",66,null],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header.",null,null],[13,"Chunked","","The `chunked` encoding.",67,null],[13,"Gzip","","The `gzip` encoding.",67,null],[13,"Deflate","","The `deflate` encoding.",67,null],[13,"Compress","","The `compress` encoding.",67,null],[13,"Identity","","The `identity` encoding.",67,null],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",67,null],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/#access-control-allow-origin-response-header)",null,null],[13,"Any","","Allow all origins",68,null],[13,"Null","","A hidden origin",68,null],[13,"Value","","Allow one particular origin",68,null],[4,"RangeUnit","","Range Units, described in [RFC7233](http://tools.ietf.org/html/rfc7233#section-2)",null,null],[13,"Bytes","","Indicating byte-range requests are supported.",69,null],[13,"None","","Reserved as keyword, indicating no ranges are supported.",69,null],[13,"Unregistered","","The given range unit is not registered at IANA.",69,null],[4,"CacheDirective","","`CacheControl` contains a list of these directives.",null,null],[13,"NoCache","","&quot;no-cache&quot;",70,null],[13,"NoStore","","&quot;no-store&quot;",70,null],[13,"NoTransform","","&quot;no-transform&quot;",70,null],[13,"OnlyIfCached","","&quot;only-if-cached&quot;",70,null],[13,"MaxAge","","&quot;max-age=delta&quot;",70,null],[13,"MaxStale","","&quot;max-stale=delta&quot;",70,null],[13,"MinFresh","","&quot;min-fresh=delta&quot;",70,null],[13,"MustRevalidate","","&quot;must-revalidate&quot;",70,null],[13,"Public","","&quot;public&quot;",70,null],[13,"Private","","&quot;private&quot;",70,null],[13,"ProxyRevalidate","","&quot;proxy-revalidate&quot;",70,null],[13,"SMaxAge","","&quot;s-maxage=delta&quot;",70,null],[13,"Extension","","Extension directives. Optionally include an argument.",70,null],[4,"ConnectionOption","","Values that can be in the `Connection` header.",null,null],[13,"KeepAlive","","The `keep-alive` connection value.",71,null],[13,"Close","","The `close` connection value.",71,null],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",71,null],[4,"DispositionType","","The implied disposition of the content of the HTTP body",null,null],[13,"Inline","","Inline implies default processing",72,null],[13,"Attachment","","Attachment implies that the recipient should prompt the user to save the response locally,\nrather than process it normally (as per its media type).",72,null],[13,"Ext","","Extension type.  Should be handled by recipients the same way as Attachment",72,null],[4,"DispositionParam","","A parameter to the disposition type",null,null],[13,"Filename","","A Filename consisting of a Charset, an optional LanguageTag, and finally a sequence of\nbytes representing the filename",73,null],[13,"Ext","","Extension type consisting of token and value.  Recipients should ignore unrecognized\nparameters.",73,null],[4,"ContentRangeSpec","","Content-Range, described in [RFC7233](https://tools.ietf.org/html/rfc7233#section-4.2)",null,null],[13,"Bytes","","Byte range",74,null],[12,"range","hyper::header::ContentRangeSpec","First and last bytes of the range, omitted if request could not be\nsatisfied",74,null],[12,"instance_length","","Total length of the instance, can be omitted if unknown",74,null],[13,"Unregistered","hyper::header","Custom range, with unit not registered at IANA",74,null],[12,"unit","hyper::header::ContentRangeSpec","other-range-unit",74,null],[12,"resp","","other-range-resp",74,null],[4,"Expect","hyper::header","The `Expect` header.",null,null],[13,"Continue","","The value `100-continue`.",75,null],[4,"IfMatch","","`If-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.1)",null,null],[13,"Any","","Any value is a match",76,null],[13,"Items","","Only the listed items are a match",76,null],[4,"IfNoneMatch","","`If-None-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.2)",null,null],[13,"Any","","Any value is a match",77,null],[13,"Items","","Only the listed items are a match",77,null],[4,"IfRange","","`If-Range` header, defined in [RFC7233](http://tools.ietf.org/html/rfc7233#section-3.2)",null,null],[13,"EntityTag","","The entity-tag the client has of the resource",78,null],[13,"Date","","The date when the client retrieved the resource",78,null],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",null,null],[13,"NoCache","","Corresponds to the `no-cache` value.",79,null],[13,"Ext","","Every value other than `no-cache`.",79,null],[4,"Preference","","Prefer contains a list of these preferences.",null,null],[13,"RespondAsync","","&quot;respond-async&quot;",80,null],[13,"ReturnRepresentation","","&quot;return=representation&quot;",80,null],[13,"ReturnMinimal","","&quot;return=minimal&quot;",80,null],[13,"HandlingStrict","","&quot;handling=strict&quot;",80,null],[13,"HandlingLeniant","","&quot;handling=leniant&quot;",80,null],[13,"Wait","","&quot;wait=delta&quot;",80,null],[13,"Extension","","Extension preferences. Always has a value, if none is specified it is\njust &quot;&quot;. A preference can also have a list of parameters.",80,null],[4,"Range","","`Range` header, defined in [RFC7233](https://tools.ietf.org/html/rfc7233#section-3.1)",null,null],[13,"Bytes","","Byte range",81,null],[13,"Unregistered","","Custom range, with unit not registered at IANA\n(`other-range-unit`: String , `other-range-set`: String)",81,null],[4,"ByteRangeSpec","","Each `Range::Bytes` header can contain one or more `ByteRangeSpecs`.\nEach `ByteRangeSpec` defines a range of bytes to fetch",null,null],[13,"FromTo","","Get all bytes between x and y (&quot;x-y&quot;)",82,null],[13,"AllFrom","","Get all bytes starting from x (&quot;x-&quot;)",82,null],[13,"Last","","Get last x bytes (&quot;-x&quot;)",82,null],[4,"ReferrerPolicy","","`Referrer-Policy` header, part of\n[Referrer Policy](https://www.w3.org/TR/referrer-policy/#referrer-policy-header)",null,null],[13,"NoReferrer","","`no-referrer`",83,null],[13,"NoReferrerWhenDowngrade","","`no-referrer-when-downgrade`",83,null],[13,"SameOrigin","","`same-origin`",83,null],[13,"Origin","","`origin`",83,null],[13,"OriginWhenCrossOrigin","","`origin-when-cross-origin`",83,null],[13,"UnsafeUrl","","`unsafe-url`",83,null],[13,"StrictOrigin","","`strict-origin`",83,null],[13,"StrictOriginWhenCrossOrigin","","`strict-origin-when-cross-origin`",83,null],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names are case-sensitive\nexcept for the `WebSocket` value.",null,null],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",84,null],[13,"Tls","","`TLS` value, Transport Layer Security [RFC2817](http://tools.ietf.org/html/rfc2817)",84,null],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol\n[RFC6455](http://tools.ietf.org/html/rfc6455)",84,null],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",84,null],[13,"Unregistered","","Any other protocol name not known to hyper",84,null],[4,"Vary","","`Vary` header, defined in [RFC7231](https://tools.ietf.org/html/rfc7231#section-7.1.4)",null,null],[13,"Any","","Any value is a match",85,null],[13,"Items","","Only the listed items are a match",85,null],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0",null,{"inputs":[{"name":"t"}],"output":{"name":"qualityitem"}}],[5,"q","","Convenience function to create a `Quality` from a float.",null,{"inputs":[{"name":"f32"}],"output":{"name":"quality"}}],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"deref","","",21,null],[11,"deref_mut","","",21,null],[11,"header_name","","",21,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",21,null],[11,"fmt_header","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",86,null],[11,"eq","","",86,null],[11,"fmt","","",86,null],[11,"header_name","","",86,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",86,null],[11,"fmt_header","","",86,null],[11,"fmt","","",86,null],[11,"clone","","",22,null],[11,"fmt","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"deref","","",22,null],[11,"deref_mut","","",22,null],[11,"header_name","","",22,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",22,null],[11,"fmt_header","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"deref","","",23,null],[11,"deref_mut","","",23,null],[11,"header_name","","",23,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",23,null],[11,"fmt_header","","",23,null],[11,"fmt","","",23,null],[11,"clone","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"fmt","","",68,null],[11,"header_name","","",68,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",68,null],[11,"fmt_header","","",68,null],[11,"fmt","","",68,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"deref","","",24,null],[11,"deref_mut","","",24,null],[11,"header_name","","",24,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",24,null],[11,"fmt_header","","",24,null],[11,"fmt","","",24,null],[11,"clone","","",25,null],[11,"fmt","","",25,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"deref","","",25,null],[11,"deref_mut","","",25,null],[11,"header_name","","",25,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",25,null],[11,"fmt_header","","",25,null],[11,"fmt","","",25,null],[11,"clone","","",26,null],[11,"fmt","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"deref","","",26,null],[11,"deref_mut","","",26,null],[11,"header_name","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",26,null],[11,"fmt_header","","",26,null],[11,"fmt","","",26,null],[11,"clone","","",27,null],[11,"fmt","","",27,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"deref","","",27,null],[11,"deref_mut","","",27,null],[11,"header_name","","",27,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",27,null],[11,"fmt_header","","",27,null],[11,"fmt","","",27,null],[11,"clone","","",28,null],[11,"fmt","","",28,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"deref","","",28,null],[11,"deref_mut","","",28,null],[11,"header_name","","",28,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",28,null],[11,"fmt_header","","",28,null],[11,"fmt","","",28,null],[11,"clone","","",29,null],[11,"fmt","","",29,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"deref","","",29,null],[11,"deref_mut","","",29,null],[11,"header_name","","",29,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",29,null],[11,"fmt_header","","",29,null],[11,"fmt","","",29,null],[11,"clone","","",30,null],[11,"fmt","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"deref","","",30,null],[11,"deref_mut","","",30,null],[11,"header_name","","",30,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",30,null],[11,"fmt_header","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",31,null],[11,"fmt","","",31,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"deref","","",31,null],[11,"deref_mut","","",31,null],[11,"header_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",31,null],[11,"fmt_header","","",31,null],[11,"fmt","","",31,null],[11,"clone","","",69,null],[11,"fmt","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"from_str","","",69,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",69,null],[11,"clone","","",32,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"deref","","",32,null],[11,"deref_mut","","",32,null],[11,"header_name","","",32,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",32,null],[11,"fmt_header","","",32,null],[11,"fmt","","",32,null],[11,"clone","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"fmt","","",33,null],[11,"deref","","",33,null],[11,"deref_mut","","",33,null],[11,"header_name","","",33,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",33,null],[11,"fmt_header","","",33,null],[11,"clone","","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"fmt","","",34,null],[11,"scheme","","",34,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",34,null],[11,"from_str","","",34,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"fmt","","",35,null],[11,"scheme","","",35,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",35,null],[11,"from_str","","",35,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"deref","","",36,null],[11,"deref_mut","","",36,null],[11,"header_name","","",36,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",36,null],[11,"fmt_header","","",36,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"clone","","",70,null],[11,"fmt","","",70,null],[11,"fmt","","",70,null],[11,"from_str","","",70,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",44,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"fmt","","",44,null],[11,"deref","","",44,null],[11,"deref_mut","","",44,null],[11,"header_name","","",44,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",44,null],[11,"fmt_header","","",44,null],[11,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",44,null],[11,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",44,{"inputs":[{"name":"cookiejar"}],"output":{"name":"cookie"}}],[11,"clone","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"fmt","","",71,null],[11,"from_str","","",71,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",71,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"deref","","",37,null],[11,"deref_mut","","",37,null],[11,"header_name","","",37,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",37,null],[11,"fmt_header","","",37,null],[11,"fmt","","",37,null],[11,"close","","A constructor to easily create a `Connection: close` header.",37,{"inputs":[],"output":{"name":"connection"}}],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",37,{"inputs":[],"output":{"name":"connection"}}],[11,"clone","","",72,null],[11,"fmt","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"clone","","",73,null],[11,"fmt","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"clone","","",38,null],[11,"fmt","","",38,null],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"header_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",38,null],[11,"fmt_header","","",38,null],[11,"fmt","","",38,null],[11,"clone","","",40,null],[11,"fmt","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"deref","","",40,null],[11,"deref_mut","","",40,null],[11,"header_name","","",40,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",40,null],[11,"fmt_header","","",40,null],[11,"fmt","","",40,null],[11,"clone","","",41,null],[11,"fmt","","",41,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"deref","","",41,null],[11,"deref_mut","","",41,null],[11,"header_name","","",41,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",41,null],[11,"fmt_header","","",41,null],[11,"fmt","","",41,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"header_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",39,null],[11,"fmt_header","","",39,null],[11,"fmt","","",39,null],[11,"deref","","",39,null],[11,"deref_mut","","",39,null],[11,"clone","","",42,null],[11,"fmt","","",42,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"deref","","",42,null],[11,"deref_mut","","",42,null],[11,"header_name","","",42,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",42,null],[11,"fmt_header","","",42,null],[11,"fmt","","",42,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"clone","","",74,null],[11,"fmt","","",74,null],[11,"from_str","","",74,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",74,null],[11,"clone","","",43,null],[11,"fmt","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"deref","","",43,null],[11,"deref_mut","","",43,null],[11,"header_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",43,null],[11,"fmt_header","","",43,null],[11,"fmt","","",43,null],[11,"json","","A constructor  to easily create a `Content-Type: application/json` header.",43,{"inputs":[],"output":{"name":"contenttype"}}],[11,"plaintext","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",43,{"inputs":[],"output":{"name":"contenttype"}}],[11,"html","","A constructor  to easily create a `Content-Type: text/html; charset=utf-8` header.",43,{"inputs":[],"output":{"name":"contenttype"}}],[11,"form_url_encoded","","A constructor  to easily create a `Content-Type: application/www-form-url-encoded` header.",43,{"inputs":[],"output":{"name":"contenttype"}}],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",43,{"inputs":[],"output":{"name":"contenttype"}}],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",43,{"inputs":[],"output":{"name":"contenttype"}}],[11,"clone","","",45,null],[11,"fmt","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"deref","","",45,null],[11,"deref_mut","","",45,null],[11,"header_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",45,null],[11,"fmt_header","","",45,null],[11,"fmt","","",45,null],[11,"clone","","",46,null],[11,"fmt","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"deref","","",46,null],[11,"deref_mut","","",46,null],[11,"header_name","","",46,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",46,null],[11,"fmt_header","","",46,null],[11,"fmt","","",46,null],[11,"clone","","",75,null],[11,"eq","","",75,null],[11,"fmt","","",75,null],[11,"header_name","","",75,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",75,null],[11,"fmt_header","","",75,null],[11,"clone","","",47,null],[11,"fmt","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"deref","","",47,null],[11,"deref_mut","","",47,null],[11,"header_name","","",47,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",47,null],[11,"fmt_header","","",47,null],[11,"fmt","","",47,null],[11,"clone","","",48,null],[11,"fmt","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"deref","","",48,null],[11,"deref_mut","","",48,null],[11,"header_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",48,null],[11,"fmt_header","","",48,null],[11,"fmt","","",48,null],[11,"clone","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"fmt","","",49,null],[11,"header_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",49,null],[11,"fmt_header","","",49,null],[11,"fmt","","",49,null],[11,"from_str","","",49,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",76,null],[11,"fmt","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"header_name","","",76,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",76,null],[11,"fmt_header","","",76,null],[11,"fmt","","",76,null],[11,"clone","","",50,null],[11,"fmt","","",50,null],[11,"eq","","",50,null],[11,"ne","","",50,null],[11,"deref","","",50,null],[11,"deref_mut","","",50,null],[11,"header_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",50,null],[11,"fmt_header","","",50,null],[11,"fmt","","",50,null],[11,"clone","","",77,null],[11,"fmt","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"header_name","","",77,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",77,null],[11,"fmt_header","","",77,null],[11,"fmt","","",77,null],[11,"clone","","",78,null],[11,"fmt","","",78,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"header_name","","",78,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",78,null],[11,"fmt_header","","",78,null],[11,"fmt","","",78,null],[11,"clone","","",51,null],[11,"fmt","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"deref","","",51,null],[11,"deref_mut","","",51,null],[11,"header_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",51,null],[11,"fmt_header","","",51,null],[11,"fmt","","",51,null],[11,"clone","","",52,null],[11,"fmt","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"deref","","",52,null],[11,"deref_mut","","",52,null],[11,"header_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",52,null],[11,"fmt_header","","",52,null],[11,"fmt","","",52,null],[11,"clone","","",53,null],[11,"fmt","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"deref","","",53,null],[11,"deref_mut","","",53,null],[11,"header_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",53,null],[11,"fmt_header","","",53,null],[11,"fmt","","",53,null],[11,"clone","","",54,null],[11,"fmt","","",54,null],[11,"new","","Creates a new `Origin` header.",54,{"inputs":[{"name":"s"},{"name":"h"},{"name":"option"}],"output":{"name":"origin"}}],[11,"header_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",54,null],[11,"from_str","","",54,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt_header","","",54,null],[11,"eq","","",54,null],[11,"clone","","",79,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"fmt","","",79,null],[11,"header_name","","",79,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",79,null],[11,"fmt_header","","",79,null],[11,"eq","","",55,null],[11,"ne","","",55,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"deref","","",55,null],[11,"deref_mut","","",55,null],[11,"header_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",55,null],[11,"fmt_header","","",55,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"fmt","","",80,null],[11,"fmt","","",80,null],[11,"from_str","","",80,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"deref","","",56,null],[11,"deref_mut","","",56,null],[11,"header_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",56,null],[11,"fmt_header","","",56,null],[11,"eq","","",81,null],[11,"ne","","",81,null],[11,"clone","","",81,null],[11,"fmt","","",81,null],[11,"eq","","",82,null],[11,"ne","","",82,null],[11,"clone","","",82,null],[11,"fmt","","",82,null],[11,"bytes","","Get the most common byte range header (&quot;bytes=from-to&quot;)",81,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"range"}}],[11,"bytes_multi","","Get byte range header with multiple subranges\n(&quot;bytes=from1-to1,from2-to2,fromX-toX&quot;)",81,{"inputs":[{"name":"vec"}],"output":{"name":"range"}}],[11,"fmt","","",82,null],[11,"fmt","","",81,null],[11,"from_str","","",81,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",82,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",81,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",81,null],[11,"fmt_header","","",81,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"deref","","",57,null],[11,"deref_mut","","",57,null],[11,"header_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",57,null],[11,"fmt_header","","",57,null],[11,"fmt","","",57,null],[11,"clone","","",83,null],[11,"eq","","",83,null],[11,"fmt","","",83,null],[11,"header_name","","",83,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",83,null],[11,"fmt_header","","",83,null],[11,"clone","","",58,null],[11,"fmt","","",58,null],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"deref","","",58,null],[11,"deref_mut","","",58,null],[11,"header_name","","",58,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",58,null],[11,"fmt_header","","",58,null],[11,"fmt","","",58,null],[11,"clone","","",59,null],[11,"eq","","",59,null],[11,"ne","","",59,null],[11,"fmt","","",59,null],[11,"deref","","",59,null],[11,"deref_mut","","",59,null],[11,"header_name","","",59,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",59,null],[11,"fmt_header","","",59,null],[11,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",59,{"inputs":[{"name":"cookiejar"}],"output":{"name":"setcookie"}}],[11,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",59,null],[11,"clone","","",60,null],[11,"eq","","",60,null],[11,"ne","","",60,null],[11,"fmt","","",60,null],[11,"including_subdomains","","Create an STS header that includes subdomains",60,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",60,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"from_str","","",60,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",60,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",60,null],[11,"fmt_header","","",60,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"deref","","",61,null],[11,"deref_mut","","",61,null],[11,"header_name","","",61,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",61,null],[11,"fmt_header","","",61,null],[11,"fmt","","",61,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"deref","","",62,null],[11,"deref_mut","","",62,null],[11,"header_name","","",62,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",62,null],[11,"fmt_header","","",62,null],[11,"fmt","","",62,null],[11,"clone","","",84,null],[11,"fmt","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"from_str","","",84,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",84,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"new","","Creates a new Protocol with the given name and version",63,{"inputs":[{"name":"protocolname"},{"name":"option"}],"output":{"name":"protocol"}}],[11,"from_str","","",63,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",63,null],[11,"clone","","",64,null],[11,"fmt","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"deref","","",64,null],[11,"deref_mut","","",64,null],[11,"header_name","","",64,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",64,null],[11,"fmt_header","","",64,null],[11,"fmt","","",64,null],[11,"clone","","",85,null],[11,"fmt","","",85,null],[11,"eq","","",85,null],[11,"ne","","",85,null],[11,"header_name","","",85,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",85,null],[11,"fmt_header","","",85,null],[11,"fmt","","",85,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"fmt","","",66,null],[11,"from_str","","",66,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",67,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"fmt","","",67,null],[11,"fmt","","",67,null],[11,"from_str","","",67,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"new","","Constructs a new EntityTag.\n# Panics\nIf the tag contains invalid characters.",17,{"inputs":[{"name":"bool"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"weak","","Constructs a new weak EntityTag.\n# Panics\nIf the tag contains invalid characters.",17,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"strong","","Constructs a new strong EntityTag.\n# Panics\nIf the tag contains invalid characters.",17,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"tag","","Get the tag.",17,null],[11,"set_tag","","Set the tag.\n# Panics\nIf the tag contains invalid characters.",17,null],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their\nopaque-tags match character-by-character.",17,null],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their\nopaque-tags match character-by-character, regardless of either or\nboth being tagged as &quot;weak&quot;.",17,null],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",17,null],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",17,null],[11,"fmt","","",17,null],[11,"from_str","","",17,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"partial_cmp","","",18,null],[11,"lt","","",18,null],[11,"le","","",18,null],[11,"gt","","",18,null],[11,"ge","","",18,null],[11,"cmp","","",18,null],[11,"from_str","","",18,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",18,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"cmp","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"partial_cmp","","",19,null],[11,"lt","","",19,null],[11,"le","","",19,null],[11,"gt","","",19,null],[11,"ge","","",19,null],[11,"fmt","","",19,null],[11,"default","","",19,{"inputs":[],"output":{"name":"quality"}}],[11,"clone","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"fmt","","",20,null],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",20,{"inputs":[{"name":"t"},{"name":"quality"}],"output":{"name":"qualityitem"}}],[11,"partial_cmp","","",20,null],[11,"fmt","","",20,null],[11,"from_str","","",20,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"parsing","","Utility functions for Header implementations.",null,null],[3,"ExtendedValue","hyper::header::parsing","An extended header parameter value (i.e., tagged with a character set and optionally,\na language), as defined in [RFC 5987](https://tools.ietf.org/html/rfc5987#section-3.2).",null,null],[12,"charset","","The character set that is used to encode the `value` to a string.",87,null],[12,"language_tag","","The human language details of the `value`, if available.",87,null],[12,"value","","The parameter value, as expressed in octets.",87,null],[3,"HTTP_VALUE","","This encode set is used for HTTP header values and is defined at\nhttps://tools.ietf.org/html/rfc5987#section-3.2",null,null],[5,"from_one_raw_str","","Reads a single raw string when parsing a header.",null,null],[5,"from_raw_str","","Reads a raw string into a value.",null,null],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",null,null],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",null,null],[5,"parse_extended_value","","Parses extended header parameter values (`ext-value`), as defined in\n[RFC 5987](https://tools.ietf.org/html/rfc5987#section-3.2).",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",87,null],[11,"fmt","","",87,null],[11,"eq","","",87,null],[11,"ne","","",87,null],[11,"clone","","",88,null],[11,"contains","","",88,null],[11,"fmt","","",87,null],[8,"Scheme","hyper::header","An Authorization scheme to be used in the header.",null,null],[10,"scheme","","An optional Scheme name.",89,{"inputs":[],"output":{"name":"option"}}],[10,"fmt_scheme","","Format the Scheme data into a header value.",89,null],[8,"Header","","A trait for any object that will represent a header field and value.",null,null],[10,"header_name","","Returns the name of the header field this belongs to.",90,{"inputs":[],"output":{"name":"str"}}],[10,"parse_header","","Parse a header from a raw stream of bytes.",90,null],[8,"HeaderFormat","","A trait for any object that will represent a header field and value.",null,null],[10,"fmt_header","","Format a header to be output into a TcpStream.",91,null],[11,"clone","","",92,null],[11,"new","","Creates a new, empty headers map.",92,{"inputs":[],"output":{"name":"headers"}}],[11,"set","","Set a header field to the corresponding value.",92,null],[11,"get_raw","","Access the raw value of a header.",92,null],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",92,null],[11,"remove_raw","","Remove a header set by set_raw",92,null],[11,"get","","Get a reference to the header field&#39;s value, if it exists.",92,null],[11,"get_mut","","Get a mutable reference to the header field&#39;s value, if it exists.",92,null],[11,"has","","Returns a boolean of whether a certain header is in the map.",92,null],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",92,null],[11,"iter","","Returns an iterator over the header fields.",92,null],[11,"len","","Returns the number of headers in the map.",92,null],[11,"clear","","Remove all headers from the map.",92,null],[11,"eq","","",92,null],[11,"fmt","","",92,null],[11,"fmt","","",92,null],[11,"next","","",93,null],[11,"is","","Check if a HeaderView is a certain Header.",94,null],[11,"name","","Get the Header name as a slice.",94,null],[11,"value","","Cast the value to a certain Header type.",94,null],[11,"value_string","","Get just the header value as a String.",94,null],[11,"fmt","","",94,null],[11,"fmt","","",94,null],[11,"extend","","",92,null],[11,"from_iter","","",92,{"inputs":[{"name":"i"}],"output":{"name":"headers"}}],[11,"fmt","","",65,null],[11,"fmt","","",65,null],[0,"http","hyper","Pieces pertaining to the HTTP message protocol.",null,null],[3,"RawStatus","hyper::http","The raw status code and reason-phrase.",null,null],[12,"0","","",95,null],[12,"1","","",95,null],[5,"should_keep_alive","","Checks if a connection should be kept alive.",null,{"inputs":[{"name":"httpversion"},{"name":"headers"}],"output":{"name":"bool"}}],[0,"h1","","Adapts the HTTP/1.1 implementation into the `HttpMessage` API.",null,null],[3,"Http11Message","hyper::http::h1","An implementation of the `HttpMessage` trait for HTTP/1.1.",null,null],[3,"Http11Protocol","","The `Protocol` implementation provides HTTP/1.1 messages.",null,null],[3,"EndError","","",null,null],[3,"Incoming","","An Incoming Message head. Includes request/status line, and headers.",null,null],[12,"version","","HTTP version of the message.",96,null],[12,"subject","","Subject (request line or status line) of Incoming message.",96,null],[12,"headers","","Headers of the Incoming message.",96,null],[4,"HttpReader","","Readers to handle different Transfer-Encodings.",null,null],[13,"SizedReader","","A Reader used when a Content-Length header is passed with a positive integer.",97,null],[13,"ChunkedReader","","A Reader used when Transfer-Encoding is `chunked`.",97,null],[13,"EofReader","","A Reader used for responses that don&#39;t indicate a length or chunked.",97,null],[13,"EmptyReader","","A Reader used for messages that should never have a body.",97,null],[4,"HttpWriter","","Writers to handle different Transfer-Encodings.",null,null],[13,"ThroughWriter","","A no-op Writer, used initially before Transfer-Encoding is determined.",98,null],[13,"ChunkedWriter","","A Writer for when Transfer-Encoding includes `chunked`.",98,null],[13,"SizedWriter","","A Writer for when Content-Length is set.",98,null],[13,"EmptyWriter","","A writer that should not write any body.",98,null],[5,"parse_request","","Parses a request into an Incoming message head.",null,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[5,"parse_response","","Parses a response into an Incoming message head.",null,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[17,"CR","","The `\\r` byte.",null,null],[17,"LF","","The `\\n` byte.",null,null],[17,"LINE_ENDING","","The bytes `\\r\\n`.",null,null],[11,"fmt","","",99,null],[11,"write","","",99,null],[11,"flush","","",99,null],[11,"read","","",99,null],[11,"set_outgoing","","",99,null],[11,"get_incoming","","",99,null],[11,"has_body","","",99,null],[11,"set_read_timeout","","",99,null],[11,"set_write_timeout","","",99,null],[11,"close_connection","","",99,null],[11,"set_proxied","","",99,null],[11,"into_inner","","Consumes the `Http11Message` and returns the underlying `NetworkStream`.",99,null],[11,"get_ref","","Gets a mutable reference to the underlying `NetworkStream`, regardless of the state of the\n`Http11Message`.",99,null],[11,"get_mut","","Gets a mutable reference to the underlying `NetworkStream`, regardless of the state of the\n`Http11Message`.",99,null],[11,"with_stream","","Creates a new `Http11Message` that will use the given `NetworkStream` for communicating to\nthe peer.",99,{"inputs":[{"name":"box"}],"output":{"name":"http11message"}}],[11,"flush_outgoing","","Flushes the current outgoing content and moves the stream into the `stream` property.",99,null],[11,"new_message","","",100,null],[11,"with_connector","","Creates a new `Http11Protocol` instance that will use the given `NetworkConnector` for\nestablishing HTTP connections.",100,{"inputs":[{"name":"c"}],"output":{"name":"http11protocol"}}],[11,"into_inner","","Unwraps this HttpReader and returns the underlying Reader.",97,null],[11,"get_ref","","Gets a borrowed reference to the underlying Reader.",97,null],[11,"get_mut","","Gets a mutable reference to the underlying Reader.",97,null],[11,"fmt","","",97,null],[11,"read","","",97,null],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",98,null],[11,"get_ref","","Access the inner Writer.",98,null],[11,"get_mut","","Access the inner Writer mutably.",98,null],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",98,null],[11,"fmt","","",101,null],[11,"write","","",98,null],[11,"flush","","",98,null],[11,"fmt","","",98,null],[11,"fmt","","",96,null],[0,"h2","hyper::http","Adapts the `solicit`-provided HTTP/2 implementation into the `HttpMessage` API.",null,null],[3,"Http2Protocol","hyper::http::h2","The `Protocol` implementation that provides HTTP/2 messages (i.e. `Http2Message`).",null,null],[3,"Http2Message","","An implementation of the `HttpMessage` trait for HTTP/2.",null,null],[5,"new_protocol","","A convenience method that creates a default `Http2Protocol` that uses a `net::HttpConnector`\n(which produces an `HttpStream` for the underlying transport layer).",null,{"inputs":[],"output":{"name":"http2protocol"}}],[8,"CloneableStream","","A trait alias representing all types that are both `NetworkStream` and `Clone`.",null,null],[11,"with_connector","","Create a new `Http2Protocol` that will use the given `NetworkConnector` to establish TCP\nconnections to the server.",102,{"inputs":[{"name":"c"}],"output":{"name":"http2protocol"}}],[11,"new_message","","",102,null],[11,"fmt","","",103,null],[11,"write","","",103,null],[11,"flush","","",103,null],[11,"read","","",103,null],[11,"set_outgoing","","",103,null],[11,"get_incoming","","",103,null],[11,"has_body","","",103,null],[11,"set_read_timeout","","",103,null],[11,"set_write_timeout","","",103,null],[11,"close_connection","","",103,null],[0,"message","hyper::http","Defines the `HttpMessage` trait that serves to encapsulate the operations of a single\nrequest-response cycle on any HTTP connection.",null,null],[3,"RequestHead","hyper::http::message","Describes a request.",null,null],[12,"headers","","The headers of the request",104,null],[12,"method","","The method of the request",104,null],[12,"url","","The URL of the request",104,null],[3,"ResponseHead","","Describes a response.",null,null],[12,"headers","","The headers of the reponse",105,null],[12,"raw_status","","The raw status line of the response",105,null],[12,"version","","The HTTP/2 version which generated the response",105,null],[8,"Protocol","","The trait provides an API for creating new `HttpMessage`s depending on the underlying HTTP\nprotocol.",null,null],[10,"new_message","","Creates a fresh `HttpMessage` bound to the given host, based on the given protocol scheme.",106,null],[8,"HttpMessage","","The trait provides an API for sending an receiving HTTP messages.",null,null],[10,"set_outgoing","","Initiates a new outgoing request.",107,null],[10,"get_incoming","","Obtains the incoming response and returns its head (i.e. the `ResponseHead` struct)",107,null],[10,"set_read_timeout","","Set the read timeout duration for this message.",107,null],[10,"set_write_timeout","","Set the write timeout duration for this message.",107,null],[10,"close_connection","","Closes the underlying HTTP connection.",107,null],[10,"has_body","","Returns whether the incoming message has a body.",107,null],[11,"set_proxied","","Called when the Client wishes to use a Proxy.",107,null],[11,"clone","","",104,null],[11,"fmt","","",104,null],[11,"clone","","",105,null],[11,"fmt","","",105,null],[11,"is","","Is the underlying type in this trait object a T?",107,null],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",107,null],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",107,null],[11,"downcast","","If the underlying type is T, extract it.",107,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"clone","hyper::http","",95,null],[11,"eq","","",95,null],[11,"ne","","",95,null],[11,"fmt","","",95,null],[0,"net","hyper","A collection of traits abstracting over Listeners and Streams.",null,null],[3,"Openssl","hyper::net","An implementation of `Ssl` for OpenSSL.",null,null],[12,"context","","The `SslContext` from openssl crate.",108,null],[3,"OpensslClient","","A client-specific implementation of OpenSSL.",null,null],[3,"NetworkConnections","","An iterator wrapper over a `NetworkAcceptor`.",null,null],[3,"HttpListener","","A `NetworkListener` for `HttpStream`s.",null,null],[3,"HttpStream","","A wrapper around a `TcpStream`.",null,null],[12,"0","","",109,null],[3,"HttpConnector","","A connector that will produce HttpStreams.",null,null],[3,"HttpsListener","","A Http Listener over SSL.",null,null],[3,"HttpsConnector","","A connector that can protect HTTP streams using SSL.",null,null],[4,"Fresh","","The write-status indicating headers have not been written.",null,null],[4,"Streaming","","The write-status indicating headers have been written.",null,null],[4,"HttpsStream","","A stream over the HTTP protocol, possibly protected by SSL.",null,null],[13,"Http","","A plain text stream.",110,null],[13,"Https","","A stream protected by SSL.",110,null],[11,"fmt","","",108,null],[11,"clone","","",108,null],[11,"fmt","","",111,null],[11,"clone","","",111,null],[11,"default","","",111,{"inputs":[],"output":{"name":"opensslclient"}}],[11,"new","","Creates a new OpensslClient with a custom SslContext",111,{"inputs":[{"name":"sslcontext"}],"output":{"name":"opensslclient"}}],[11,"wrap_client","","",111,null],[11,"default","","",108,{"inputs":[],"output":{"name":"openssl"}}],[11,"with_cert_and_key","","Ease creating an `Openssl` with a certificate and key.",108,{"inputs":[{"name":"c"},{"name":"k"}],"output":{"name":"result"}}],[11,"wrap_client","","",108,null],[11,"wrap_server","","",108,null],[8,"NetworkListener","","An abstraction to listen for connections on a certain port.",null,null],[16,"Stream","","The stream produced for each connection.",112,null],[10,"accept","","Returns an iterator of streams.",112,null],[10,"local_addr","","Get the address this Listener ended up listening on.",112,null],[11,"incoming","","Returns an iterator over incoming connections.",112,null],[8,"NetworkStream","","An abstraction over streams that a `Server` can utilize.",null,null],[10,"peer_addr","","Get the remote address of the underlying connection.",113,null],[10,"set_read_timeout","","Set the maximum time to wait for a read to complete.",113,null],[10,"set_write_timeout","","Set the maximum time to wait for a write to complete.",113,null],[11,"close","","This will be called when Stream should no longer be kept alive.",113,null],[8,"NetworkConnector","","A connector creates a NetworkStream.",null,null],[16,"Stream","","Type of `Stream` to create",114,null],[10,"connect","","Connect to a remote address.",114,null],[8,"Ssl","","Deprecated",null,null],[16,"Stream","","The protected stream.",115,null],[10,"wrap_client","","Wrap a client stream with SSL.",115,null],[10,"wrap_server","","Wrap a server stream with SSL.",115,null],[8,"SslClient","","An abstraction to allow any SSL implementation to be used with client-side HttpsStreams.",null,null],[16,"Stream","","The protected stream.",116,null],[10,"wrap_client","","Wrap a client stream with SSL.",116,null],[8,"SslServer","","An abstraction to allow any SSL implementation to be used with server-side HttpsStreams.",null,null],[16,"Stream","","The protected stream.",117,null],[10,"wrap_server","","Wrap a server stream with SSL.",117,null],[11,"next","","",118,null],[11,"is","","Is the underlying type in this trait object a `T`?",113,null],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the contained data.",113,null],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to the contained\ndata.",113,null],[11,"downcast","","If the underlying type is `T`, extract it.",113,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"is","","Is the underlying type in this trait object a `T`?",113,null],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the contained data.",113,null],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to the contained\ndata.",113,null],[11,"downcast","","If the underlying type is `T`, extract it.",113,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"clone","","",119,null],[11,"from","","",119,{"inputs":[{"name":"tcplistener"}],"output":{"name":"httplistener"}}],[11,"new","","Start listening to an address over HTTP.",119,{"inputs":[{"name":"to"}],"output":{"name":"result"}}],[11,"accept","","",119,null],[11,"local_addr","","",119,null],[11,"as_raw_fd","","",119,null],[11,"from_raw_fd","","",119,{"inputs":[{"name":"rawfd"}],"output":{"name":"httplistener"}}],[11,"clone","","",109,null],[11,"fmt","","",109,null],[11,"read","","",109,null],[11,"write","","",109,null],[11,"flush","","",109,null],[11,"as_raw_fd","","",109,null],[11,"from_raw_fd","","",109,{"inputs":[{"name":"rawfd"}],"output":{"name":"httpstream"}}],[11,"peer_addr","","",109,null],[11,"set_read_timeout","","",109,null],[11,"set_write_timeout","","",109,null],[11,"close","","",109,null],[11,"fmt","","",120,null],[11,"clone","","",120,null],[11,"default","","",120,{"inputs":[],"output":{"name":"httpconnector"}}],[11,"connect","","",120,null],[11,"fmt","","",110,null],[11,"clone","","",110,null],[11,"read","","",110,null],[11,"write","","",110,null],[11,"flush","","",110,null],[11,"peer_addr","","",110,null],[11,"set_read_timeout","","",110,null],[11,"set_write_timeout","","",110,null],[11,"close","","",110,null],[11,"clone","","",121,null],[11,"new","","Start listening to an address over HTTPS.",121,{"inputs":[{"name":"to"},{"name":"s"}],"output":{"name":"result"}}],[11,"with_listener","","Construct an HttpsListener from a bound `TcpListener`.",121,{"inputs":[{"name":"httplistener"},{"name":"s"}],"output":{"name":"httpslistener"}}],[11,"accept","","",121,null],[11,"local_addr","","",121,null],[11,"fmt","","",122,null],[11,"default","","",122,{"inputs":[],"output":{"name":"httpsconnector"}}],[11,"new","","Create a new connector using the provided SSL implementation.",122,{"inputs":[{"name":"s"}],"output":{"name":"httpsconnector"}}],[11,"with_connector","","Create a new connector using the provided SSL implementation.",122,{"inputs":[{"name":"s"},{"name":"c"}],"output":{"name":"httpsconnector"}}],[11,"connect","","",122,null],[0,"server","hyper","HTTP Server",null,null],[3,"Server","hyper::server","A server can listen on a TCP socket.",null,null],[3,"Listening","","A listening server, which can later be closed.",null,null],[12,"socket","","The socket addresses that the server is bound to.",123,null],[0,"request","","Server Requests",null,null],[3,"Request","hyper::server::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`.",null,null],[12,"remote_addr","","The IP address of the remote connection.",124,null],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",124,null],[12,"headers","","The headers of the incoming request.",124,null],[12,"uri","","The target request-uri for this request.",124,null],[12,"version","","The version of HTTP for this request.",124,null],[11,"new","","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",124,{"inputs":[{"name":"bufreader"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Set the read timeout of the underlying NetworkStream.",124,null],[11,"downcast_ref","","Get a reference to the underlying `NetworkStream`.",124,null],[11,"ssl","","Get a reference to the underlying Ssl stream, if connected\nover HTTPS.",124,null],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",124,null],[11,"read","","",124,null],[0,"response","hyper::server","Server Responses",null,null],[3,"Response","hyper::server::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`.",null,null],[12,"version","","The HTTP version of this response.",125,null],[11,"fmt","","",125,null],[11,"status","","The status of this response.",125,null],[11,"headers","","The headers of this response.",125,null],[11,"construct","","Construct a Response from its constituent parts.",125,{"inputs":[{"name":"httpversion"},{"name":"httpwriter"},{"name":"statuscode"},{"name":"headers"}],"output":{"name":"response"}}],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",125,null],[11,"new","","Creates a new Response that can be used to write to a network stream.",125,{"inputs":[{"name":"write"},{"name":"headers"}],"output":{"name":"response"}}],[11,"send","","Writes the body and ends the response.",125,null],[11,"start","","Consume this Response&lt;Fresh&gt;, writing the Headers and Status and\ncreating a Response&lt;Streaming&gt;",125,null],[11,"status_mut","","Get a mutable reference to the status.",125,null],[11,"headers_mut","","Get a mutable reference to the Headers.",125,null],[11,"end","","Flushes all writing of a response to the client.",125,null],[11,"write","","",125,null],[11,"flush","","",125,null],[11,"drop","","",125,null],[8,"Handler","hyper::server","A handler that can handle incoming requests for a server.",null,null],[10,"handle","","Receives a `Request`/`Response` pair, and should perform some action on them.",126,null],[11,"check_continue","","Called when a Request includes a `Expect: 100-continue` header.",126,null],[11,"on_connection_start","","This is run after a connection is received, on a per-connection basis (not a\nper-request basis, as a connection with keep-alive may handle multiple\nrequests)",126,null],[11,"on_connection_end","","This is run before a connection is closed, on a per-connection basis (not a\nper-request basis, as a connection with keep-alive may handle multiple\nrequests)",126,null],[11,"fmt","","",127,null],[11,"new","","Creates a new server with the provided handler.",127,{"inputs":[{"name":"l"}],"output":{"name":"server"}}],[11,"keep_alive","","Controls keep-alive for this server.",127,null],[11,"set_read_timeout","","Sets the read timeout for all Request reads.",127,null],[11,"set_write_timeout","","Sets the write timeout for all Response writes.",127,null],[11,"http","","Creates a new server that will handle `HttpStream`s.",127,{"inputs":[{"name":"to"}],"output":{"name":"result"}}],[11,"https","","Creates a new server that will handle `HttpStream`s over SSL.",127,{"inputs":[{"name":"a"},{"name":"s"}],"output":{"name":"result"}}],[11,"handle","","Binds to a socket and starts handling connections.",127,null],[11,"handle_threads","","Binds to a socket and starts handling connections with the provided\nnumber of threads.",127,null],[11,"fmt","","",123,null],[11,"drop","","",123,null],[11,"close","","Warning: This function doesn&#39;t work. The server remains listening after you called\nit. See https://github.com/hyperium/hyper/issues/338 for more details.",123,null],[0,"status","hyper","HTTP status codes",null,null],[4,"StatusCode","hyper::status","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",128,null],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",128,null],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",128,null],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",128,null],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",128,null],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",128,null],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",128,null],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",128,null],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",128,null],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",128,null],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",128,null],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",128,null],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",128,null],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",128,null],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",128,null],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",128,null],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",128,null],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",128,null],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",128,null],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",128,null],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",128,null],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",128,null],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",128,null],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",128,null],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",128,null],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",128,null],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",128,null],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",128,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",128,null],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",128,null],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",128,null],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",128,null],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",128,null],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",128,null],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",128,null],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",128,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",128,null],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",128,null],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",128,null],[13,"ImATeapot","","418 I&#39;m a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",128,null],[13,"MisdirectedRequest","","421 Misdirected Request\n[RFC7540, Section 9.1.2](http://tools.ietf.org/html/rfc7540#section-9.1.2)",128,null],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",128,null],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",128,null],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",128,null],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",128,null],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",128,null],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",128,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",128,null],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons\n[[RFC7725](http://tools.ietf.org/html/rfc7725)]",128,null],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",128,null],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",128,null],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",128,null],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",128,null],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",128,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",128,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",128,null],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",128,null],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",128,null],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",128,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",128,null],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",128,null],[4,"StatusClass","","The class of an HTTP `status-code`.",null,null],[13,"Informational","","1xx (Informational): The request was received, continuing process",129,null],[13,"Success","","2xx (Success): The request was successfully received, understood, and accepted",129,null],[13,"Redirection","","3xx (Redirection): Further action needs to be taken in order to complete the request",129,null],[13,"ClientError","","4xx (Client Error): The request contains bad syntax or cannot be fulfilled",129,null],[13,"ServerError","","5xx (Server Error): The server failed to fulfill an apparently valid request",129,null],[13,"NoClass","","A status code lower than 100 or higher than 599. These codes do no belong to any class.",129,null],[11,"fmt","","",128,null],[11,"hash","","",128,null],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",128,null],[11,"class","","Determine the class of a status code, based on its first digit.",128,null],[11,"is_informational","","Check if class is Informational.",128,null],[11,"is_success","","Check if class is Success.",128,null],[11,"is_redirection","","Check if class is Redirection.",128,null],[11,"is_client_error","","Check if class is ClientError.",128,null],[11,"is_server_error","","Check if class is ServerError.",128,null],[11,"is_strange_status","","Check if class is NoClass",128,null],[11,"fmt","","",128,null],[11,"eq","","",128,null],[11,"clone","","",128,null],[11,"partial_cmp","","",128,null],[11,"cmp","","",128,null],[11,"fmt","","",129,null],[11,"clone","","",129,null],[11,"eq","","",129,null],[11,"partial_cmp","","",129,null],[11,"cmp","","",129,null],[11,"default_code","","Get the default status code for the class.",129,null],[0,"uri","hyper","HTTP RequestUris",null,null],[4,"RequestUri","hyper::uri","The Request-URI of a Request&#39;s StartLine.",null,null],[13,"AbsolutePath","","The most common request target, an absolute path and optional query.",130,null],[13,"AbsoluteUri","","An absolute URI. Used in conjunction with proxies.",130,null],[13,"Authority","","The authority form is only for use with `CONNECT` requests.",130,null],[13,"Star","","The star is used to target the entire server, instead of a specific resource.",130,null],[11,"fmt","","",130,null],[11,"eq","","",130,null],[11,"ne","","",130,null],[11,"clone","","",130,null],[11,"from_str","","",130,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",130,null],[0,"version","hyper","HTTP Versions enum",null,null],[4,"HttpVersion","hyper::version","Represents a version of the HTTP spec.",null,null],[13,"Http09","","`HTTP/0.9`",131,null],[13,"Http10","","`HTTP/1.0`",131,null],[13,"Http11","","`HTTP/1.1`",131,null],[13,"Http20","","`HTTP/2.0`",131,null],[11,"eq","","",131,null],[11,"partial_cmp","","",131,null],[11,"clone","","",131,null],[11,"cmp","","",131,null],[11,"hash","","",131,null],[11,"fmt","","",131,null],[11,"fmt","","",131,null],[0,"mime","hyper","Re-exporting the mime crate, for convenience.",null,null],[14,"header","","",null,null],[11,"parse","","Parse an absolute URL from a string.",12,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",12,null],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",12,{"inputs":[],"output":{"name":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",12,null],[11,"into_string","","Return the serialization of this URL.",12,null],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",12,null],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the &#39;:&#39; delimiter.",12,null],[11,"has_authority","","Return whether the URL has an &#39;authority&#39;,\nwhich can contain a username, password, host, and port number.",12,null],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL,\nmeaning that parsing a relative URL string with this URL as the base will return an error.",12,null],[11,"username","","Return the username for this URL (typically the empty string)\nas a percent-encoded ASCII string.",12,null],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",12,null],[11,"has_host","","Equivalent to `url.host().is_some()`.",12,null],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",12,null],[11,"host","","Return the parsed representation of the host for this URL.\nNon-ASCII domain labels are punycode-encoded per IDNA.",12,null],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",12,null],[11,"port","","Return the port number for this URL, if any.",12,null],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",12,null],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",12,null],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string.\nFor cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with &#39;/&#39;.\nFor other URLs, this starts with a &#39;/&#39; slash\nand continues with slash-separated path segments.",12,null],[11,"path_segments","","Unless this URL is cannot-be-a-base,\nreturn an iterator of &#39;/&#39; slash-separated path segments,\neach as a percent-encoded ASCII string.",12,null],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",12,null],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return an iterator of (key, value) pairs.",12,null],[11,"fragment","","Return this URL’s fragment identifier, if any.",12,null],[11,"set_fragment","","Change this URL’s fragment identifier.",12,null],[11,"set_query","","Change this URL’s query string.",12,null],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs\nin `application/x-www-form-urlencoded` syntax.",12,null],[11,"set_path","","Change this URL’s path.",12,null],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",12,null],[11,"set_port","","Change this URL’s port number.",12,null],[11,"set_host","","Change this URL’s host.",12,null],[11,"set_ip_host","","Change this URL’s host to the given IP address.",12,null],[11,"set_password","","Change this URL’s password.",12,null],[11,"set_username","","Change this URL’s username.",12,null],[11,"set_scheme","","Change this URL’s scheme.",12,null],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",12,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",12,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",12,null],[11,"fmt","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"languagetag"}}],[11,"eq","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"fmt","hyper::header","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"from_str","","",16,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",16,null],[11,"clone","","",16,null],[11,"description","hyper::error","",13,null],[11,"cmp","hyper","",12,null],[11,"fmt","hyper::error","",13,null],[11,"fmt","hyper","",12,null],[11,"to_socket_addrs","","",12,null],[11,"hash","","",12,null],[11,"index","","",12,null],[11,"index","","",12,null],[11,"index","","",12,null],[11,"index","","",12,null],[11,"eq","","",12,null],[11,"eq","hyper::error","",13,null],[11,"partial_cmp","hyper","",12,null],[11,"from_str","","",12,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",12,null],[11,"fmt","hyper::error","",13,null],[11,"from","","",13,{"inputs":[{"name":"errors"}],"output":{"name":"parseerror"}}],[11,"as_ref","hyper","",12,null],[11,"clone","hyper::error","",13,null],[11,"clone","hyper","",12,null],[11,"matches","","Matches language tags. The first language acts as a language range, the second one is used\nas a normal language tag. None fields in the language range are ignored. If the language\ntag has more extlangs than the range these extlangs are ignored. Matches are\ncase-insensitive. `*` in language ranges are represented using `None` values. The language\nrange `*` that matches language tags is created by the default language tag:\n`let wildcard: LanguageTag = Default::default();.`",0,null],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",0,null],[11,"canonicalize","","Returns the canonical version of the language tag.",0,null],[11,"new","hyper::header","",16,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"cookie"}}],[11,"parse","","",16,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pair","","",16,null],[11,"new","","Creates a new empty cookie jar with the given signing key.",132,null],[11,"add_original","","Adds an original cookie from a request.",132,null],[11,"add","","Adds a new cookie to this cookie jar.",132,null],[11,"remove","","Removes a cookie from this cookie jar.",132,null],[11,"find","","Finds a cookie inside of this cookie jar.",132,null],[11,"signed","","Creates a child signed cookie jar.",132,null],[11,"encrypted","","Creates a child encrypted cookie jar.",132,null],[11,"permanent","","Creates a child jar for permanent cookie storage.",132,null],[11,"delta","","Calculates the changes that have occurred to this cookie jar over time,\nreturning a vector of `Set-Cookie` headers.",132,null],[11,"iter","","Return an iterator over the cookies in this jar.",132,null]],"paths":[[3,"LanguageTag"],[3,"ProxyConfig"],[4,"Body"],[4,"RedirectPolicy"],[3,"Config"],[3,"Pool"],[3,"PooledStream"],[3,"Request"],[3,"Response"],[8,"IntoUrl"],[3,"Client"],[3,"RequestBuilder"],[3,"Url"],[4,"ParseError"],[4,"Error"],[4,"Method"],[3,"CookiePair"],[3,"EntityTag"],[3,"HttpDate"],[3,"Quality"],[3,"QualityItem"],[3,"Accept"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlExposeHeaders"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"Bearer"],[3,"CacheControl"],[3,"Connection"],[3,"ContentDisposition"],[3,"ContentLength"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentRange"],[3,"ContentType"],[3,"Cookie"],[3,"Date"],[3,"ETag"],[3,"Expires"],[3,"From"],[3,"Host"],[3,"IfModifiedSince"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Location"],[3,"Origin"],[3,"Prefer"],[3,"PreferenceApplied"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"StrictTransportSecurity"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"Protocol"],[3,"UserAgent"],[3,"HeaderFormatter"],[4,"Charset"],[4,"Encoding"],[4,"AccessControlAllowOrigin"],[4,"RangeUnit"],[4,"CacheDirective"],[4,"ConnectionOption"],[4,"DispositionType"],[4,"DispositionParam"],[4,"ContentRangeSpec"],[4,"Expect"],[4,"IfMatch"],[4,"IfNoneMatch"],[4,"IfRange"],[4,"Pragma"],[4,"Preference"],[4,"Range"],[4,"ByteRangeSpec"],[4,"ReferrerPolicy"],[4,"ProtocolName"],[4,"Vary"],[3,"AccessControlAllowCredentials"],[3,"ExtendedValue"],[3,"HTTP_VALUE"],[8,"Scheme"],[8,"Header"],[8,"HeaderFormat"],[3,"Headers"],[3,"HeadersItems"],[3,"HeaderView"],[3,"RawStatus"],[3,"Incoming"],[4,"HttpReader"],[4,"HttpWriter"],[3,"Http11Message"],[3,"Http11Protocol"],[3,"EndError"],[3,"Http2Protocol"],[3,"Http2Message"],[3,"RequestHead"],[3,"ResponseHead"],[8,"Protocol"],[8,"HttpMessage"],[3,"Openssl"],[3,"HttpStream"],[4,"HttpsStream"],[3,"OpensslClient"],[8,"NetworkListener"],[8,"NetworkStream"],[8,"NetworkConnector"],[8,"Ssl"],[8,"SslClient"],[8,"SslServer"],[3,"NetworkConnections"],[3,"HttpListener"],[3,"HttpConnector"],[3,"HttpsListener"],[3,"HttpsConnector"],[3,"Listening"],[3,"Request"],[3,"Response"],[8,"Handler"],[3,"Server"],[4,"StatusCode"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"],[3,"CookieJar"]]};
searchIndex["serde_json"] = {"doc":"JSON and serialization","items":[[0,"builder","serde_json","JSON Builders",null,null],[3,"ArrayBuilder","serde_json::builder","This structure provides a simple interface for constructing a JSON array.",null,null],[3,"ObjectBuilder","","This structure provides a simple interface for constructing a JSON object.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"arraybuilder"}}],[11,"new","","Construct an `ObjectBuilder`.",0,{"inputs":[],"output":{"name":"arraybuilder"}}],[11,"build","","Return the constructed `Value`.",0,null],[11,"push","","Insert a value into the array.",0,null],[11,"push_array","","Creates and passes an `ArrayBuilder` into a closure, then inserts the resulting array into\nthis array.",0,null],[11,"push_object","","Creates and passes an `ArrayBuilder` into a closure, then inserts the resulting object into\nthis array.",0,null],[11,"default","","",1,{"inputs":[],"output":{"name":"objectbuilder"}}],[11,"new","","Construct an `ObjectBuilder`.",1,{"inputs":[],"output":{"name":"objectbuilder"}}],[11,"build","","Return the constructed `Value`.",1,null],[11,"insert","","Insert a key-value pair into the object.",1,null],[11,"insert_array","","Creates and passes an `ObjectBuilder` into a closure, then inserts the resulting array into\nthis object.",1,null],[11,"insert_object","","Creates and passes an `ObjectBuilder` into a closure, then inserts the resulting object into\nthis object.",1,null],[0,"de","serde_json","JSON Deserialization",null,null],[3,"Deserializer","serde_json::de","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON values.",null,null],[5,"from_iter","","Decodes a json value from an iterator over an iterator\n`Iterator&lt;Item=io::Result&lt;u8&gt;&gt;`.",null,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[5,"from_reader","","Decodes a json value from a `std::io::Read`.",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[5,"from_slice","","Decodes a json value from a byte slice `&amp;[u8]`.",null,null],[5,"from_str","","Decodes a json value from a `&amp;str`.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Creates the JSON parser from an `std::iter::Iterator`.",2,{"inputs":[{"name":"iter"}],"output":{"name":"self"}}],[11,"end","","The `Deserializer::end` method should be called after a value has been fully deserialized.\nThis allows the `Deserializer` to validate that the input stream is at the end or that it\nonly has trailing whitespace.",2,null],[11,"deserialize","","",2,null],[11,"deserialize_option","","Parses a `null` as a None, and any other values as a `Some(...)`.",2,null],[11,"deserialize_newtype_struct","","Parses a newtype struct as the underlying value.",2,null],[11,"deserialize_enum","","Parses an enum as an object like `{&quot;$KEY&quot;:$VALUE}`, where $VALUE is either a straight\nvalue, a `[..]`, or a `{..}`.",2,null],[11,"deserialize_bool","","",2,null],[11,"deserialize_usize","","",2,null],[11,"deserialize_u8","","",2,null],[11,"deserialize_u16","","",2,null],[11,"deserialize_u32","","",2,null],[11,"deserialize_u64","","",2,null],[11,"deserialize_isize","","",2,null],[11,"deserialize_i8","","",2,null],[11,"deserialize_i16","","",2,null],[11,"deserialize_i32","","",2,null],[11,"deserialize_i64","","",2,null],[11,"deserialize_f32","","",2,null],[11,"deserialize_f64","","",2,null],[11,"deserialize_char","","",2,null],[11,"deserialize_str","","",2,null],[11,"deserialize_string","","",2,null],[11,"deserialize_unit","","",2,null],[11,"deserialize_seq","","",2,null],[11,"deserialize_seq_fixed_size","","",2,null],[11,"deserialize_bytes","","",2,null],[11,"deserialize_map","","",2,null],[11,"deserialize_unit_struct","","",2,null],[11,"deserialize_tuple_struct","","",2,null],[11,"deserialize_struct","","",2,null],[11,"deserialize_struct_field","","",2,null],[11,"deserialize_tuple","","",2,null],[11,"deserialize_ignored_any","","",2,null],[11,"new","","Returns an `Iterator` of decoded JSON values from an iterator over\n`Iterator&lt;Item=io::Result&lt;u8&gt;&gt;`.",3,{"inputs":[{"name":"iter"}],"output":{"name":"streamdeserializer"}}],[11,"next","","",3,null],[0,"error","serde_json","JSON Errors",null,null],[4,"ErrorCode","serde_json::error","The errors that can arise while parsing a JSON stream.",null,null],[13,"Custom","","Catchall for syntax error messages",4,null],[13,"InvalidType","","Incorrect type from value",4,null],[13,"InvalidValue","","Incorrect value",4,null],[13,"InvalidLength","","Invalid length",4,null],[13,"UnknownVariant","","Unknown variant in an enum.",4,null],[13,"UnknownField","","Unknown field in struct.",4,null],[13,"MissingField","","Struct is missing a field.",4,null],[13,"EOFWhileParsingList","","EOF while parsing a list.",4,null],[13,"EOFWhileParsingObject","","EOF while parsing an object.",4,null],[13,"EOFWhileParsingString","","EOF while parsing a string.",4,null],[13,"EOFWhileParsingValue","","EOF while parsing a JSON value.",4,null],[13,"ExpectedColon","","Expected this character to be a `&#39;:&#39;`.",4,null],[13,"ExpectedListCommaOrEnd","","Expected this character to be either a `&#39;,&#39;` or a `]`.",4,null],[13,"ExpectedObjectCommaOrEnd","","Expected this character to be either a `&#39;,&#39;` or a `}`.",4,null],[13,"ExpectedSomeIdent","","Expected to parse either a `true`, `false`, or a `null`.",4,null],[13,"ExpectedSomeValue","","Expected this character to start a JSON value.",4,null],[13,"InvalidEscape","","Invalid hex escape code.",4,null],[13,"InvalidNumber","","Invalid number.",4,null],[13,"NumberOutOfRange","","Number is bigger than the maximum value of its type.",4,null],[13,"InvalidUnicodeCodePoint","","Invalid unicode code point.",4,null],[13,"KeyMustBeAString","","Object key is not a string.",4,null],[13,"LoneLeadingSurrogateInHexEscape","","Lone leading surrogate in hex escape.",4,null],[13,"TrailingCharacters","","JSON has non-whitespace trailing characters after the value.",4,null],[13,"UnexpectedEndOfHexEscape","","Unexpected end of hex excape.",4,null],[4,"Error","","This type represents all possible errors that can occur when serializing or deserializing a\nvalue into JSON.",null,null],[13,"Syntax","","The JSON value had some syntatic error.",5,null],[13,"Io","","Some IO error occurred when serializing or deserializing a value.",5,null],[6,"Result","","Helper alias for `Result` objects that return a JSON `Error`.",null,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"cause","","",5,null],[11,"fmt","","",5,null],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"custom","","",5,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[11,"end_of_stream","","",5,{"inputs":[],"output":{"name":"error"}}],[11,"invalid_type","","",5,{"inputs":[{"name":"type"}],"output":{"name":"error"}}],[11,"invalid_value","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"invalid_length","","",5,{"inputs":[{"name":"usize"}],"output":{"name":"error"}}],[11,"unknown_variant","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"unknown_field","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"missing_field","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"custom","","Raised when there is general error when deserializing a type.",5,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[0,"ser","serde_json","JSON Serialization",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra whitespace.",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human readable.",null,null],[5,"escape_str","","Serializes and escapes a `&amp;str` into a JSON string.",null,{"inputs":[{"name":"w"},{"name":"str"}],"output":{"name":"result"}}],[5,"to_writer","","Encode the specified struct into a json `[u8]` writer.",null,{"inputs":[{"name":"w"},{"name":"t"}],"output":{"name":"result"}}],[5,"to_writer_pretty","","Encode the specified struct into a json `[u8]` writer.",null,{"inputs":[{"name":"w"},{"name":"t"}],"output":{"name":"result"}}],[5,"to_vec","","Encode the specified struct into a json `[u8]` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_vec_pretty","","Encode the specified struct into a json `[u8]` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_string","","Encode the specified struct into a json `String` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_string_pretty","","Encode the specified struct into a json `String` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[8,"Formatter","","This trait abstracts away serializing the JSON control characters, which allows the user to\noptionally pretty print the JSON output.",null,null],[10,"open","","Called when serializing a &#39;{&#39; or &#39;[&#39;.",6,null],[10,"comma","","Called when serializing a &#39;,&#39;.",6,null],[10,"colon","","Called when serializing a &#39;:&#39;.",6,null],[10,"close","","Called when serializing a &#39;}&#39; or &#39;]&#39;.",6,null],[11,"new","","Creates a new JSON serializer.",7,{"inputs":[{"name":"w"}],"output":{"name":"self"}}],[11,"pretty","","Creates a new JSON pretty print serializer.",7,{"inputs":[{"name":"w"}],"output":{"name":"self"}}],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to the writer\nspecified.",7,{"inputs":[{"name":"w"},{"name":"f"}],"output":{"name":"self"}}],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",7,null],[11,"serialize_bool","","",7,null],[11,"serialize_isize","","",7,null],[11,"serialize_i8","","",7,null],[11,"serialize_i16","","",7,null],[11,"serialize_i32","","",7,null],[11,"serialize_i64","","",7,null],[11,"serialize_usize","","",7,null],[11,"serialize_u8","","",7,null],[11,"serialize_u16","","",7,null],[11,"serialize_u32","","",7,null],[11,"serialize_u64","","",7,null],[11,"serialize_f32","","",7,null],[11,"serialize_f64","","",7,null],[11,"serialize_char","","",7,null],[11,"serialize_str","","",7,null],[11,"serialize_bytes","","",7,null],[11,"serialize_unit","","",7,null],[11,"serialize_unit_struct","","",7,null],[11,"serialize_unit_variant","","",7,null],[11,"serialize_newtype_struct","","Serialize newtypes without an object wrapper.",7,null],[11,"serialize_newtype_variant","","",7,null],[11,"serialize_none","","",7,null],[11,"serialize_some","","",7,null],[11,"serialize_seq","","",7,null],[11,"serialize_seq_elt","","",7,null],[11,"serialize_seq_end","","",7,null],[11,"serialize_seq_fixed_size","","",7,null],[11,"serialize_tuple","","",7,null],[11,"serialize_tuple_elt","","",7,null],[11,"serialize_tuple_end","","",7,null],[11,"serialize_tuple_struct","","",7,null],[11,"serialize_tuple_struct_elt","","",7,null],[11,"serialize_tuple_struct_end","","",7,null],[11,"serialize_tuple_variant","","",7,null],[11,"serialize_tuple_variant_elt","","",7,null],[11,"serialize_tuple_variant_end","","",7,null],[11,"serialize_map","","",7,null],[11,"serialize_map_key","","",7,null],[11,"serialize_map_value","","",7,null],[11,"serialize_map_end","","",7,null],[11,"serialize_struct","","",7,null],[11,"serialize_struct_elt","","",7,null],[11,"serialize_struct_end","","",7,null],[11,"serialize_struct_variant","","",7,null],[11,"serialize_struct_variant_elt","","",7,null],[11,"serialize_struct_variant_end","","",7,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"open","","",8,null],[11,"comma","","",8,null],[11,"colon","","",8,null],[11,"close","","",8,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"new","","Construct a pretty printer formatter that defaults to using two spaces for indentation.",9,{"inputs":[],"output":{"name":"self"}}],[11,"with_indent","","Construct a pretty printer formatter that uses the `indent` string for indentation.",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"open","","",9,null],[11,"comma","","",9,null],[11,"colon","","",9,null],[11,"close","","",9,null],[0,"value","serde_json","JSON Value",null,null],[3,"Serializer","serde_json::value","Create a `serde::Serializer` that serializes a `Serialize`e into a `Value`.",null,null],[3,"Deserializer","","Creates a `serde::Deserializer` from a `json::Value` object.",null,null],[4,"Value","","Represents a JSON value",null,null],[13,"Null","","Represents a JSON null value",10,null],[13,"Bool","","Represents a JSON Boolean",10,null],[13,"I64","","Represents a JSON signed integer",10,null],[13,"U64","","Represents a JSON unsigned integer",10,null],[13,"F64","","Represents a JSON floating point number",10,null],[13,"String","","Represents a JSON string",10,null],[13,"Array","","Represents a JSON array",10,null],[13,"Object","","Represents a JSON object",10,null],[5,"to_value","","Shortcut function to encode a `T` into a JSON `Value`",null,{"inputs":[{"name":"t"}],"output":{"name":"value"}}],[5,"from_value","","Shortcut function to decode a JSON `Value` into a `T`",null,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[6,"Map","","Represents a key/value type.",null,null],[6,"MapIntoIter","","Represents the `IntoIter` type.",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",11,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"find","","If the `Value` is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",10,null],[11,"find_path","","Attempts to get a nested Value Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the `Value` associated with the final key.",10,null],[11,"lookup","","**Deprecated**: Use `Value.pointer()` and pointer syntax instead.",10,null],[11,"pointer","","Looks up a value by a JSON Pointer.",10,null],[11,"search","","If the `Value` is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the `Value` is not an Object, returns None.",10,null],[11,"is_object","","Returns true if the `Value` is an Object. Returns false otherwise.",10,null],[11,"as_object","","If the `Value` is an Object, returns the associated Map.\nReturns None otherwise.",10,null],[11,"as_object_mut","","If the `Value` is an Object, returns the associated mutable Map.\nReturns None otherwise.",10,null],[11,"is_array","","Returns true if the `Value` is an Array. Returns false otherwise.",10,null],[11,"as_array","","If the `Value` is an Array, returns the associated vector.\nReturns None otherwise.",10,null],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable vector.\nReturns None otherwise.",10,null],[11,"is_string","","Returns true if the `Value` is a String. Returns false otherwise.",10,null],[11,"as_str","","If the `Value` is a String, returns the associated str.\nReturns None otherwise.",10,null],[11,"is_number","","Returns true if the `Value` is a Number. Returns false otherwise.",10,null],[11,"is_i64","","Returns true if the `Value` is a i64. Returns false otherwise.",10,null],[11,"is_u64","","Returns true if the `Value` is a u64. Returns false otherwise.",10,null],[11,"is_f64","","Returns true if the `Value` is a f64. Returns false otherwise.",10,null],[11,"as_i64","","If the `Value` is a number, return or cast it to a i64.\nReturns None otherwise.",10,null],[11,"as_u64","","If the `Value` is a number, return or cast it to a u64.\nReturns None otherwise.",10,null],[11,"as_f64","","If the `Value` is a number, return or cast it to a f64.\nReturns None otherwise.",10,null],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false otherwise.",10,null],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.\nReturns None otherwise.",10,null],[11,"is_null","","Returns true if the `Value` is a Null. Returns false otherwise.",10,null],[11,"as_null","","If the `Value` is a Null, returns ().\nReturns None otherwise.",10,null],[11,"serialize","","",10,null],[11,"deserialize","","",10,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","Serializes a json value into a string",10,null],[11,"fmt","","Serializes a json value into a string",10,null],[11,"from_str","","",10,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Serializer`.",12,{"inputs":[],"output":{"name":"serializer"}}],[11,"unwrap","","Unwrap the `Serializer` and return the `Value`.",12,null],[11,"default","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"serialize_bool","","",12,null],[11,"serialize_isize","","",12,null],[11,"serialize_i8","","",12,null],[11,"serialize_i16","","",12,null],[11,"serialize_i32","","",12,null],[11,"serialize_i64","","",12,null],[11,"serialize_usize","","",12,null],[11,"serialize_u8","","",12,null],[11,"serialize_u16","","",12,null],[11,"serialize_u32","","",12,null],[11,"serialize_u64","","",12,null],[11,"serialize_f32","","",12,null],[11,"serialize_f64","","",12,null],[11,"serialize_char","","",12,null],[11,"serialize_str","","",12,null],[11,"serialize_bytes","","",12,null],[11,"serialize_unit","","",12,null],[11,"serialize_unit_struct","","",12,null],[11,"serialize_unit_variant","","",12,null],[11,"serialize_newtype_struct","","",12,null],[11,"serialize_newtype_variant","","",12,null],[11,"serialize_none","","",12,null],[11,"serialize_some","","",12,null],[11,"serialize_seq","","",12,null],[11,"serialize_seq_elt","","",12,null],[11,"serialize_seq_end","","",12,null],[11,"serialize_seq_fixed_size","","",12,null],[11,"serialize_tuple","","",12,null],[11,"serialize_tuple_elt","","",12,null],[11,"serialize_tuple_end","","",12,null],[11,"serialize_tuple_struct","","",12,null],[11,"serialize_tuple_struct_elt","","",12,null],[11,"serialize_tuple_struct_end","","",12,null],[11,"serialize_tuple_variant","","",12,null],[11,"serialize_tuple_variant_elt","","",12,null],[11,"serialize_tuple_variant_end","","",12,null],[11,"serialize_map","","",12,null],[11,"serialize_map_key","","",12,null],[11,"serialize_map_value","","",12,null],[11,"serialize_map_end","","",12,null],[11,"serialize_struct","","",12,null],[11,"serialize_struct_elt","","",12,null],[11,"serialize_struct_end","","",12,null],[11,"serialize_struct_variant","","",12,null],[11,"serialize_struct_variant_elt","","",12,null],[11,"serialize_struct_variant_end","","",12,null],[11,"new","","Creates a new deserializer instance for deserializing the specified JSON value.",13,{"inputs":[{"name":"value"}],"output":{"name":"deserializer"}}],[11,"deserialize","","",13,null],[11,"deserialize_option","","",13,null],[11,"deserialize_enum","","",13,null],[11,"deserialize_newtype_struct","","",13,null],[11,"deserialize_bool","","",13,null],[11,"deserialize_usize","","",13,null],[11,"deserialize_u8","","",13,null],[11,"deserialize_u16","","",13,null],[11,"deserialize_u32","","",13,null],[11,"deserialize_u64","","",13,null],[11,"deserialize_isize","","",13,null],[11,"deserialize_i8","","",13,null],[11,"deserialize_i16","","",13,null],[11,"deserialize_i32","","",13,null],[11,"deserialize_i64","","",13,null],[11,"deserialize_f32","","",13,null],[11,"deserialize_f64","","",13,null],[11,"deserialize_char","","",13,null],[11,"deserialize_str","","",13,null],[11,"deserialize_string","","",13,null],[11,"deserialize_unit","","",13,null],[11,"deserialize_seq","","",13,null],[11,"deserialize_seq_fixed_size","","",13,null],[11,"deserialize_bytes","","",13,null],[11,"deserialize_map","","",13,null],[11,"deserialize_unit_struct","","",13,null],[11,"deserialize_tuple_struct","","",13,null],[11,"deserialize_struct","","",13,null],[11,"deserialize_struct_field","","",13,null],[11,"deserialize_tuple","","",13,null],[11,"deserialize_ignored_any","","",13,null]],"paths":[[3,"ArrayBuilder"],[3,"ObjectBuilder"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"ErrorCode"],[4,"Error"],[8,"Formatter"],[3,"Serializer"],[3,"CompactFormatter"],[3,"PrettyFormatter"],[4,"Value"],[8,"ToJson"],[3,"Serializer"],[3,"Deserializer"]]};
searchIndex["mime_guess"] = {"doc":"Guessing of MIME types by file extension.","items":[[3,"Mime","mime_guess","Mime, or Media Type. Encapsulates common registers types.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[12,"2","","",0,null],[5,"guess_mime_type","","Guess the MIME type of `path` by its extension (as defined by `Path::extension()`).",null,{"inputs":[{"name":"p"}],"output":{"name":"mime"}}],[5,"guess_mime_type_opt","","Guess the MIME type of `path` by its extension (as defined by `Path::extension()`).",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"get_mime_type","","Get the MIME type associated with a file extension.",null,{"inputs":[{"name":"str"}],"output":{"name":"mime"}}],[5,"get_mime_type_opt","","Get the MIME type associated with a file extension.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"get_mime_type_str","","Get the MIME type string associated with a file extension. Case-insensitive.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"get_mime_extensions","","Get a list of known extensions for a given `Mime`.",null,{"inputs":[{"name":"mime"}],"output":{"name":"option"}}],[5,"get_mime_extensions_str","","Get a list of known extensions for a MIME type string.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"get_extensions","","Get the extensions for a given top-level and sub-level of a MIME type\n(`{toplevel}/{sublevel}`).",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[5,"octet_stream","","Get the MIME type for `application/octet-stream` (generic binary stream)",null,{"inputs":[],"output":{"name":"mime"}}],[11,"get_param","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"clone","","",0,null]],"paths":[[3,"Mime"]]};
searchIndex["clap"] = {"doc":"A simple-to-use, efficient, and full-featured library for parsing command line arguments and subcommands when writing console/terminal applications.","items":[[3,"Arg","clap","The abstract representation of a command line argument. Used to set all the options and\nrelationships that define a valid argument for the program.",null,null],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way for you to express, &quot;Any of these\narguments&quot;. By placing arguments in a logical group, you can create easier requirement and\nexclusion rules instead of having to list each argument individually, or when you want a rule\nto apply &quot;any but not all&quot; arguments.",null,null],[3,"ArgMatches","","Used to get information about the arguments that where supplied to the program at runtime by\nthe user. New instances of this struct are obtained by using the [`App::get_matches`] family of\nmethods.",null,null],[3,"SubCommand","","The abstract representation of a command line subcommand.",null,null],[3,"Values","","An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of`]\nmethod.",null,null],[3,"OsValues","","An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of_os`]\nmethod. Usage of this iterator allows values which contain invalid UTF-8 code points unlike\n[`Values`].",null,null],[3,"App","","Used to create a representation of a command line program and all possible command line\narguments. Application settings are set using the &quot;builder pattern&quot; with the\n[`App::get_matches`] family of methods being the terminal methods that starts the\nruntime-parsing process. These methods then return information about the user supplied\narguments (or lack there of).",null,null],[3,"Error","","Command Line Argument Parser Error",null,null],[12,"message","","Formated error message",0,null],[12,"kind","","The type of error",0,null],[12,"info","","Any additional information passed along, such as the argument name that caused the error",0,null],[4,"ArgSettings","","Various settings that apply to arguments and may be set, unset, and checked via getter/setter\nmethods [`Arg::set`], [`Arg::unset`], and [`Arg::is_set`]\n[`Arg::set`]: ./struct.Arg.html#method.set\n[`Arg::unset`]: ./struct.Arg.html#method.unset\n[`Arg::is_set`]: ./struct.Arg.html#method.is_set",null,null],[13,"Required","","The argument must be used",1,null],[13,"Multiple","","The argument may be used multiple times such as `--flag --flag`",1,null],[13,"EmptyValues","","The argument allows empty values such as `--option &quot;&quot;`",1,null],[13,"Global","","The argument should be propagated down through all child [`SubCommands`]\n[`SubCommand`]: ./struct.SubCommand.html",1,null],[13,"Hidden","","The argument should **not** be shown in help text",1,null],[13,"TakesValue","","The argument accepts a value, such as `--option &lt;value&gt;`",1,null],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via a delimter",1,null],[13,"NextLineHelp","","Prints the help text on the line after the argument",1,null],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple values",1,null],[13,"HidePossibleValues","","Hides the possible values from the help string",1,null],[4,"AppSettings","","Application level settings, which affect how [`App`] operates",null,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should *not* be treated as an error.\nThis is the default behavior of `clap`.",2,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument *values*, such as negative numbers\nlike `-10`. (which would otherwise be parsed as another flag or option)",2,null],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar to\n`AllowLeadingHyphen` except that it only allows numbers, all\nother undefined leading hyphens will fail to parse.",2,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument,\nwhich would otherwise cause a [`ErrorKind::UnknownArgument`] error,\nshould instead be treated as a [`SubCommand`] within the [`ArgMatches`] struct.",2,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then exit gracefully),\nif no arguments are present at runtime (i.e. an empty run such as, `$ myprog`.",2,null],[13,"ColoredHelp","","Uses colorized help messages.",2,null],[13,"ColorAuto","","Enables colored output only when the output is going to a terminal or TTY.",2,null],[13,"ColorAlways","","Enables colored output regardless of whether or not the output is going to a terminal/TTY.",2,null],[13,"ColorNever","","Disables colored output no matter if the output is going to a terminal/TTY, or not.",2,null],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or [`AppSettings::TrailingVarArg`]\nwas used.",2,null],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting any of the [`SubCommand`]s\n(Defaults to `false`; application *does* have a version flag)",2,null],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help message in the order that they were\ndeclared in, and not alphabetically which is the default.",2,null],[13,"GlobalVersion","","Specifies to use the version of the current command for all child [`SubCommand`]s.\n(Defaults to `false`; subcommands have independant version strings from their parents.)",2,null],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from help messages",2,null],[13,"HidePossibleValuesInHelp","","Tells `clap` *not* to print possible values when displaying help information.\nThis can be useful if there are many values, or they are explained elsewhere.",2,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first argument passed is the binary name.\nThis is normally the case when using a &quot;daemon&quot; style mode, or an interactive CLI where one\none would not normally type the binary or program name for each command.",2,null],[13,"NextLineHelp","","Places the help string for all arguments on the line after the argument.",2,null],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the parent command.\nFor example if you had a subcommand or top level application with a required argument\nthat is only required as long as there is no subcommand present,\nusing this setting would allow you to set those arguments to [`Arg::required(true)`]\nand yet receive no error so long as the user uses a valid subcommand instead.",2,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before exiting gracefully) if no\n[`SubCommand`]s are present at runtime (i.e. an empty run such as `$ myprog`).",2,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be treated as an error and fail\nwith a [`ErrorKind::InvalidUtf8`] error.",2,null],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at runtime,\nerror and exit gracefully.",2,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a &quot;VarArg&quot; and that `clap` should not\nattempt to parse any further args.",2,null],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more unified help message\n(a la `getopts` or `docopt` style).",2,null],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s\n(Defaults to `false`; subcommands *do* have version flags.)",2,null],[13,"WaitOnError","","Will display a message &quot;Press [ENTER]/[RETURN] to continue...&quot; and wait for user before\nexiting",2,null],[4,"ErrorKind","","Command line argument parser kind of error",null,null],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values,\nand the user provides a value which isn&#39;t in that set.",3,null],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or subcommand which isn&#39;t defined.",3,null],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized [`SubCommand`] which meets the threshold for\nbeing similar enough to an existing subcommand.  \nIf it doesn&#39;t meet the threshold, or the &#39;suggestions&#39; feature is disabled,\nthe more general [`UnknownArgument`] error is returned.",3,null],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized [`SubCommand`] which either\ndoesn&#39;t meet the threshold for being similar enough to an existing subcommand,\nor the &#39;sggestions&#39; feature is disabled.  \nOtherwise the more detailed [`InvalidSubcommand`] error is returned.",3,null],[13,"EmptyValue","","Occurs when the user provides an empty value for an option that does not allow empty\nvalues.",3,null],[13,"ValueValidation","","Occurs when the user provides a value for an argument with a custom validation and the\nvalue fails that validation.",3,null],[13,"TooManyValues","","Occurs when a user provides more values for an argument than were defined by setting\n[`Arg::max_values`].",3,null],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument than were defined by setting\n[`Arg::min_values`].",3,null],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values for an argument than what&#39;s\nbeen defined by setting [`Arg::number_of_values`] or than was implicitly set by\n[`Arg::value_names`].",3,null],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict with each other and can&#39;t be used\ntogether.",3,null],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required arguments.",3,null],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by [`AppSettings::SubcommandRequired`]),\nbut the user does not provide one.",3,null],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is required, as defined by\n[`AppSettings::ArgRequiredElseHelp`], but the user did not provide one.",3,null],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an argument which doesn&#39;t allow that.",3,null],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid UTF-8 for an argument and\n[`AppSettings::StrictUtf8`] is set.",3,null],[13,"HelpDisplayed","","Not a true &quot;error&quot; as it means `--help` or similar was used.\nThe help message will be sent to `stdout`.",3,null],[13,"VersionDisplayed","","Not a true &quot;error&quot; as it means `--version` or similar was used.\nThe message will be sent to `stdout`.",3,null],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`] macros to convert an argument value\ninto type `T`, but the argument you requested wasn&#39;t used. I.e. you asked for an argument\nwith name `config` to be converted, but `config` wasn&#39;t used by the user.\n[`value_t!`]: ./macro.value_t!.html\n[`values_t!`]: ./macro.values_t!.html",3,null],[13,"Io","","Represents an [I/O error].\nCan occur when writing to `stderr` or `stdout` or reading a configuration file.\n[I/O error]: https://doc.rust-lang.org/std/io/struct.Error.html",3,null],[13,"Format","","Represents a [Format error] (which is a part of [`Display`]).\nTypically caused by writing to `stderr` or `stdout`.\n[`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html\n[Format error]: https://doc.rust-lang.org/std/fmt/struct.Error.html",3,null],[4,"Shell","","Describes which shell to produce a completions file for",null,null],[13,"Bash","","Generates a .bash-completion completion file for the Bourne Again SHell (BASH)",4,null],[13,"Fish","","Generates a .fish completion file for the Friendly Interactive SHell (fish)",4,null],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",4,null],[13,"PowerShell","","Generates a completion file for PowerShell",4,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"clone","","",2,null],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Creates a new instance of an application requiring a name. The name may be, but doesn&#39;t\nhave to be same as the binary. The name will be displayed to the user when they request to\nprint version or help and usage information.",5,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"get_name","","Get the name of the app",5,null],[11,"get_bin_name","","Get the name of the binary",5,null],[11,"with_defaults","","Creates a new instance of an application requiring a name, but uses the [`crate_authors!`]\nand [`crate_version!`] macros to fill in the [`App::author`] and [`App::version`] fields.",5,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"author","","Sets a string of author(s) that will be displayed to the user when they\nrequest the help information with `--help` or `-h`.",5,null],[11,"bin_name","","Overrides the system-determined binary name. This should only be used when absolutely\nneccessary, such as when the binary name for your application is misleading, or perhaps\n*not* how the user should invoke your program.",5,null],[11,"about","","Sets a string describing what the program does. This will be displayed when displaying help\ninformation.",5,null],[11,"after_help","","Adds additional help information to be displayed in addition to auto-generated help. This\ninformation is displayed **after** the auto-generated help information. This is often used\nto describe how to use the arguments, or caveats to be noted.",5,null],[11,"before_help","","Adds additional help information to be displayed in addition to auto-generated help. This\ninformation is displayed **before** the auto-generated help information. This is often used\nfor header information.",5,null],[11,"version","","Sets a string of the version number to be displayed when displaying version or help\ninformation.",5,null],[11,"usage","","Sets a custom usage string to override the auto-generated usage string.",5,null],[11,"help","","Sets a custom help message and overrides the auto-generated one. This should only be used\nwhen the auto-generated message does not suffice.",5,null],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",5,null],[11,"version_short","","Sets the [`short`] for the auto-generated `version` argument.",5,null],[11,"template","","Sets the help template to be used, overriding the default format.",5,null],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",5,null],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",5,null],[11,"global_setting","","Enables a single setting that is propogated *down* through all child [`SubCommand`]s.",5,null],[11,"global_settings","","Enables multiple settings which are propogated *down* through all child [`SubCommand`]s.",5,null],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",5,null],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level settings.",5,null],[11,"set_term_width","","Sets the terminal width at which to wrap help messages. Defaults to `120`. Using `0` will\nignore terminal widths and use source formatting.",5,null],[11,"max_term_width","","Sets the max terminal width at which to wrap help messages. Using `0` will ignore terminal\nwidths and use source formatting.",5,null],[11,"arg","","Adds an [argument] to the list of valid possibilties.",5,null],[11,"args","","Adds multiple [arguments] to the list of valid possibilties",5,null],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a usage type string. The string\nused follows the same rules and syntax as [`Arg::from_usage`]",5,null],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one per line. See\n[`Arg::from_usage`] for details on the syntax and rules supported.",5,null],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as &quot;hidden&quot; subcommands that\nautomatically dispatch as if this subcommand was used. This is more efficient, and easier\nthan creating multiple hidden subcommands as one only needs to check for the existence of\nthis command, and not all variants.",5,null],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as &quot;hidden&quot; subcommands that\nautomatically dispatch as if this subcommand was used. This is more efficient, and easier\nthan creating multiple hidden subcommands as one only needs to check for the existence of\nthis command, and not all variants.",5,null],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions exactly like those defined with\n[`App::alias`], except that they are visible inside the help message.",5,null],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that functions exactly like those defined\nwith [`App::aliases`], except that they are visible inside the help message.",5,null],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are a family of related arguments.\nBy placing them in a logical group, you can build easier requirement and exclusion rules.\nFor instance, you can make an entire [`ArgGroup`] required, meaning that one (and *only*\none) argument from that group must be present at runtime.",5,null],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,null],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilties. Subcommands are effectively\nsub-[`App`]s, because they can contain their own arguments, subcommands, version, usage,\netc. They also function just like [`App`]s, in that they get their own auto generated help,\nversion, and usage.",5,null],[11,"subcommands","","Adds multiple subcommands to the list of valid possibilties by iterating over an\n[`IntoIterator`] of [`SubCommand`]s",5,null],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help message. Subcommands with a lower\nvalue will be displayed first in the help message. This is helpful when one would like to\nemphasise frequently used subcommands, or prioritize those towards the top of the list.\nDuplicate values **are** allowed. Subcommands with duplicate display orders will be\ndisplayed in alphabetical order.",5,null],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a [`BufWriter`]",5,null],[11,"write_help","","Writes the full help message to the user to a [`io::Write`] object",5,null],[11,"write_version","","Writes the version message to the user to a [`io::Write`] object",5,null],[11,"gen_completions","","Generate a completions file for a specified shell at compile time.",5,null],[11,"gen_completions_to","","Generate a completions file for a specified shell at runtime.  Until `cargo install` can\ninstall extra files like a completion script, this may be used e.g. in a command that\noutputs the contents of the completion script, to be redirected into a file by the user.",5,null],[11,"get_matches","","Starts the parsing process, upon a failed parse an error will be displayed to the user and\nthe process will exit with the appropriate error code. By default this method gets all user\nprovided arguments from [`env::args_os`] in order to allow for invalid UTF-8 code points,\nwhich are legal on many platforms.",5,null],[11,"get_matches_safe","","Starts the parsing process. This method will return a [`clap::Result`] type instead of exiting\nthe process on failed parse. By default this method gets matches from [`env::args_os`]",5,null],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this method does not return a [`clap::Result`]\nand will automatically exit with an error message. This method, however, lets you specify\nwhat iterator to use when performing matches, such as a [`Vec`] of your making.",5,null],[11,"get_matches_from_safe","","Starts the parsing process. A combination of [`App::get_matches_from`], and\n[`App::get_matches_safe`]",5,null],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`] struct `self`. This is normally not\nthe desired functionality, instead prefer [`App::get_matches_from_safe`] which *does*\nconsume `self`.",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"default","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string name. The name will be used to get\ninformation about whether or not the argument was used at runtime, get values, set\nrelationships with other args, etc..",6,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string. Allows creation of basic settings\nfor the [`Arg`]. The syntax is flexible, but there are some rules to follow.",6,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"short","","Sets the short version of the argument without the preceding `-`.",6,null],[11,"long","","Sets the long version of the argument without the preceding `--`.",6,null],[11,"alias","","Allows adding a [`Arg`] alias, which function as &quot;hidden&quot; arguments that\nautomatically dispatch as if this argument was used. This is more efficient, and easier\nthan creating multiple hidden arguments as one only needs to check for the existence of\nthis command, and not all variants.",6,null],[11,"aliases","","Allows adding [`Arg`] aliases, which function as &quot;hidden&quot; arguments that\nautomatically dispatch as if this argument was used. This is more efficient, and easier\nthan creating multiple hidden subcommands as one only needs to check for the existence of\nthis command, and not all variants.",6,null],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like those defined with\n[`Arg::alias`], except that they are visible inside the help message.",6,null],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions exactly like those defined\nwith [`Arg::aliases`], except that they are visible inside the help message.",6,null],[11,"help","","Sets the help text of the argument that will be displayed to the user when they print the\nusage/help information.",6,null],[11,"required","","Sets whether or not the argument is required by default. Required by default means it is\nrequired, when no other conflicting rules have been evaluated. Conflicting rules take\nprecedence over being required. **Default:** `false`",6,null],[11,"required_unless","","Sets an arg that override this arg&#39;s required setting. (i.e. this arg will be required\nunless this other argument is present).",6,null],[11,"required_unless_all","","Sets args that override this arg&#39;s required setting. (i.e. this arg will be required unless\nall these other arguments are present).",6,null],[11,"required_unless_one","","Sets args that override this arg&#39;s [required] setting. (i.e. this arg will be required\nunless *at least one of* these other arguments are present).",6,null],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this argument,\nthe following argument can&#39;t be present and vice versa.",6,null],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying multiple two-way conlicts per\nargument.",6,null],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument and the following argument\nwill override each other in POSIX style (whichever argument was specified at runtime\n**last** &quot;wins&quot;)",6,null],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e. this argument and the following\nargument will override each other in POSIX style (whichever argument was specified at\nruntime **last** &quot;wins&quot;)",6,null],[11,"requires","","Sets an argument by name that is required when this one is present I.e. when\nusing this argument, the following argument *must* be present.",6,null],[11,"requires_all","","Sets multiple arguments by names that are required when this one is present I.e. when\nusing this argument, the following arguments *must* be present.",6,null],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,null],[11,"hide_possible_values","","Specifies if the possible values of an argument should be displayed in the help text or\nnot. Defaults to `false` (i.e. show possible values)",6,null],[11,"index","","Specifies the index of a positional argument **starting at** 1.",6,null],[11,"multiple","","Specifies that the argument may appear more than once. For flags, this results\nin the number of occurrences of the flag being recorded. For example `-ddd` or `-d -d -d`\nwould count as three occurrences. For options there is a distinct difference in multiple\noccurrences vs multiple values.",6,null],[11,"global","","Specifies that an argument can be matched to all child [`SubCommand`]s.",6,null],[11,"empty_values","","Allows an argument to accept explicitly empty values. An empty value must be specified at\nthe command line with an explicit `&quot;&quot;`, or `&#39;&#39;`",6,null],[11,"hidden","","Hides an argument from help message output.",6,null],[11,"possible_values","","Specifies a list of possible values for this argument. At runtime, `clap` verifies that\nonly one of the specified values was used, or fails with an error message.",6,null],[11,"possible_value","","Specifies a possible value for this argument, one at a time. At runtime, `clap` verifies\nthat only one of the specified values was used, or fails with error message.",6,null],[11,"group","","Specifies the name of the [`ArgGroup`] the argument belongs to.",6,null],[11,"groups","","Specifies the names of multiple [`ArgGroup`]&#39;s the argument belongs to.",6,null],[11,"number_of_values","","Specifies how many values are required to satisfy this argument. For example, if you had a\n`-f &lt;file&gt;` argument where you wanted exactly 3 &#39;files&#39; you would set\n`.number_of_values(3)`, and this argument wouldn&#39;t be satisfied unless the user provided\n3 and only 3 values.",6,null],[11,"validator","","Allows one to perform a custom validation on the argument value. You provide a closure\nwhich accepts a [`String`] value, and return a [`Result`] where the [`Err(String)`] is a\nmessage displayed to the user.",6,null],[11,"max_values","","Specifies the *maximum* number of values are for this argument. For example, if you had a\n`-f &lt;file&gt;` argument where you wanted up to 3 &#39;files&#39; you would set `.max_values(3)`, and\nthis argument would be satisfied if the user provided, 1, 2, or 3 values.",6,null],[11,"min_values","","Specifies the *minimum* number of values for this argument. For example, if you had a\n`-f &lt;file&gt;` argument where you wanted at least 2 &#39;files&#39; you would set\n`.min_values(2)`, and this argument would be satisfied if the user provided, 2 or more\nvalues.",6,null],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping of multiple values via a\ndelimiter. I.e. should `--option=val1,val2,val3` be parsed as three values (`val1`, `val2`,\nand `val3`) or as a single value (`val1,val2,val3`). Defaults to using `,` (comma) as the\nvalue delimiter for all arguments that accept values (options and positional arguments)",6,null],[11,"require_delimiter","","Specifies that *multiple values* may only be set using the delimiter. This means if an\nif an option is encountered, and no delimiter is found, it automatically assumed that no\nadditional values for that option follow. This is unlike the default, where it is generally\nassumed that more values will follow regardless of whether or not a delimiter is used.",6,null],[11,"value_delimiter","","Specifies the separator to use when values are clumped together, defaults to `,` (comma).",6,null],[11,"value_names","","Specify multiple names for values of option arguments. These names are cosmetic only, used\nfor help and usage strings only. The names are **not** used to access arguments. The values\nof the arguments are accessed in numeric order (i.e. if you specify two names `one` and\n`two` `one` will be the first matched value, `two` will be the second).",6,null],[11,"value_name","","Specifies the name for value of [option] or [positional] arguments inside of help\ndocumentation. This name is cosmetic only, the name is **not** used to access arguments.\nThis setting can be very helpful when describing the type of input the user should be\nusing, such as `FILE`, `INTERFACE`, etc. Although not required, it&#39;s somewhat convention to\nuse all capital letters for the value name.",6,null],[11,"default_value","","Specifies the value of the argument when *not* specified at runtime.",6,null],[11,"next_line_help","","When set to `true` the help string will be displayed on the line after the argument and\nindented once. This can be helpful for arguments with very long or complex help messages.\nThis can also be helpful for arguments with very long flag names, or many/long value names.",6,null],[11,"display_order","","Allows custom ordering of args within the help message. Args with a lower value will be\ndisplayed first in the help message. This is helpful when one would like to emphasise\nfrequently used args, or prioritize those towards the top of the list. Duplicate values\n**are** allowed. Args with duplicate display orders will be displayed in alphabetical\norder.",6,null],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for the argument\n[`ArgSettings`]: ./enum.ArgSettings.html",6,null],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument\n[`ArgSettings`]: ./enum.ArgSettings.html",6,null],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the argument\n[`ArgSettings`]: ./enum.ArgSettings.html",6,null],[11,"from","","",6,{"inputs":[{"name":"arg"}],"output":{"name":"self"}}],[11,"clone","","",6,null],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"value_of","","Gets the value of a specific [option] or [positional] argument (i.e. an argument that takes\nan additional value at runtime). If the option wasn&#39;t present at runtime\nit returns `None`.",7,null],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the argument wasn&#39;t present at runtime\nit returns `None`. A lossy value is one which contains invalid UTF-8 code points, those\ninvalid points will be replaced with `\\u{FFFD}`",7,null],[11,"value_of_os","","Gets the OS version of a string value of a specific argument. If the option wasn&#39;t present\nat runtime it returns `None`. An OS value on Unix-like systems is any series of bytes,\nregardless of whether or not they contain valid UTF-8 code points. Since [`String`]s in\nRust are guaranteed to be valid UTF-8, a valid filename on a Unix system as an argument\nvalue may contain invalid UTF-8 code points.",7,null],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for values of a specific argument\n(i.e. an argument that takes multiple values at runtime). If the option wasn&#39;t present at\nruntime it returns `None`",7,null],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the option wasn&#39;t present at runtime\nit returns `None`. A lossy value is one where if it contains invalid UTF-8 code points,\nthose invalid points will be replaced with `\\u{FFFD}`",7,null],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements [`Iterator`] for [`OsString`] values of a\nspecific argument. If the option wasn&#39;t present at runtime it returns `None`. An OS value\non Unix-like systems is any series of bytes, regardless of whether or not they contain\nvalid UTF-8 code points. Since [`String`]s in Rust are guaranteed to be valid UTF-8, a valid\nfilename as an argument value on Linux (for example) may contain invalid UTF-8 code points.",7,null],[11,"is_present","","Returns `true` if an argument was present at runtime, otherwise `false`.",7,null],[11,"occurrences_of","","Returns the number of times an argument was used at runtime. If an argument isn&#39;t present\nit will return `0`.",7,null],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially &quot;sub-[`App`]s&quot; they have their own [`ArgMatches`]\nas well. This method returns the [`ArgMatches`] for a particular subcommand or `None` if\nthe subcommand wasn&#39;t present at runtime.",7,null],[11,"subcommand_name","","Because [`Subcommand`]s are essentially &quot;sub-[`App`]s&quot; they have their own [`ArgMatches`]\nas well.But simply getting the sub-[`ArgMatches`] doesn&#39;t help much if we don&#39;t also know\nwhich subcommand was actually used. This method returns the name of the subcommand that was\nused at runtime, or `None` if one wasn&#39;t.",7,null],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`] and [`ArgMatches::subcommand_name`]\nby returning a tuple with both pieces of information.",7,null],[11,"usage","","Returns a string slice of the usage statement for the [`App`] or [`SubCommand`]",7,null],[11,"clone","","",8,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"next_back","","",8,null],[11,"clone","","",9,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next_back","","",9,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"with_name","","Creates a new instance of a subcommand requiring a name. The name will be displayed\nto the user when they print version or help and usage information.",10,{"inputs":[{"name":"str"}],"output":{"name":"app"}}],[11,"default","","",11,{"inputs":[],"output":{"name":"arggroup"}}],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string name. The name will be used to\nget values from the group or refer to the group inside of conflict and requirement rules.",11,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"arg","","Adds an [argument] to this group by name",11,null],[11,"args","","Adds multiple [arguments] to this group by name",11,null],[11,"multiple","","Allows more than one of the [&#39;Arg&#39;]s in this group to be used. (Default: `false`)",11,null],[11,"required","","Sets the group as required or not. A required group will be displayed in the usage string\nof the application in the format `&lt;arg|arg2|arg3&gt;`. A required `ArgGroup` simply states\nthat one argument from this group *must* be present at runtime (unless\nconflicting with another argument).",11,null],[11,"requires","","Sets the requirement rules of this group. This is not to be confused with a\n[required group]. Requirement rules function just like [argument requirement rules], you\ncan name other arguments or groups that must be present when any one of the arguments from\nthis group is used.",11,null],[11,"requires_all","","Sets the requirement rules of this group. This is not to be confused with a\n[required group]. Requirement rules function just like [argument requirement rules], you\ncan name other arguments or groups that must be present when one of the arguments from this\ngroup is used.",11,null],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka conflict) rules function just like\n[argument exclusion rules], you can name other arguments or groups that must *not* be\npresent when one of the arguments from this group are used.",11,null],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules function just like\n[argument exclusion rules], you can name other arguments or groups that must *not* be\npresent when one of the arguments from this group are used.",11,null],[11,"fmt","","",11,null],[11,"from","","",11,{"inputs":[{"name":"arggroup"}],"output":{"name":"self"}}],[11,"clone","","",11,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"clone","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",0,null],[11,"use_stderr","","Should the message be written to `stdout` or not",0,null],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,null],[11,"with_description","","Create an error with a custom description.",0,{"inputs":[{"name":"str"},{"name":"errorkind"}],"output":{"name":"self"}}],[11,"description","","",0,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"variants","","A list of possible variants in `&amp;&#39;static str` form",4,null],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",4,null],[6,"Result","","Short hand for [`Result`] type\n[`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html",null,null],[14,"value_t","","Convenience macro getting a typed value `T` where `T` implements [`std::str::FromStr`] from an\nargument value. This macro returns a `Result&lt;T,String&gt;` which allows you as the developer to\ndecide what you&#39;d like to do on a failed parse. There are two types of errors, parse failures\nand those where the argument wasn&#39;t present (such as a non-required argument). You can use\nit to get a single value, or a iterator as with the [`ArgMatches::values_of`]",null,null],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T` implements [`std::str::FromStr`] or\nexiting upon error, instead of returning a [`Result`] type.",null,null],[14,"values_t","","Convenience macro getting a typed value [`Vec&lt;T&gt;`] where `T` implements [`std::str::FromStr`]\nThis macro returns a [`clap::Result&lt;Vec&lt;T&gt;&gt;`] which allows you as the developer to decide\nwhat you&#39;d like to do on a failed parse.",null,null],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec&lt;T&gt;`] where `T` implements [`std::str::FromStr`]\nor exiting upon error.",null,null],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to it.  The result is a compile-time\nevaluable expression, suitable for use as a static array size, or the value of a `const`.",null,null],[14,"arg_enum","","Convenience macro to generate more complete enums with variants to be used as a type when\nparsing arguments. This enum also provides a `variants()` function which can be used to\nretrieve a `Vec&lt;&amp;&#39;static str&gt;` of the variant names, as well as implementing [`FromStr`] and\n[`Display`] automatically.",null,null],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at compile time as\nMAJOR.MINOR.PATCH_PKGVERSION_PRE",null,null],[14,"crate_authors","","Allows you to pull the authors for the app from your Cargo.toml at\ncompile time as\n&quot;author1 lastname. &lt;author1@example.com&gt;&quot;,\n    &quot;author2 lastname. &lt;author2@example.com&gt;&quot;",null,null],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with Usage-string like input\nbut without the parsing.",null,null]],"paths":[[3,"Error"],[4,"ArgSettings"],[4,"AppSettings"],[4,"ErrorKind"],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"Values"],[3,"OsValues"],[3,"SubCommand"],[3,"ArgGroup"]]};
searchIndex["toml"] = {"doc":"A TOML-parsing library","items":[[3,"Parser","toml","Parser for converting a string to a TOML `Value` instance.",null,null],[12,"errors","","A list of all errors which have occurred during parsing.",0,null],[3,"ParserError","","A structure representing a parse error.",null,null],[12,"lo","","The low byte at which this error is pointing at.",1,null],[12,"hi","","One byte beyond the last character at which this error is pointing at.",1,null],[12,"desc","","A human-readable description explaining what the error is.",1,null],[3,"Encoder","","A structure to transform Rust values into TOML values.",null,null],[12,"toml","","Output TOML that is emitted. The current version of this encoder forces\nthe top-level representation of a structure to be a table.",2,null],[3,"EncoderState","","Internal state of the encoder when encoding transitions",null,null],[3,"Decoder","","A structure to transform TOML values into Rust values.",null,null],[12,"toml","","The TOML value left over after decoding. This can be used to inspect\nwhether fields were decoded or not.",3,null],[3,"DecodeError","","Description for errors which can occur while decoding a type.",null,null],[12,"field","","Field that this error applies to.",4,null],[12,"kind","","The type of error which occurred while decoding,",4,null],[4,"Error","","Enumeration of errors which can occur while encoding a rust value into a\nTOML value.",null,null],[13,"NeedsKey","","Indication that a key was needed when a value was emitted, but no key\nwas previously emitted.",5,null],[13,"NoValue","","Indication that a key was emitted, but no value was emitted.",5,null],[13,"InvalidMapKeyLocation","","Indicates that a map key was attempted to be emitted at an invalid\nlocation.",5,null],[13,"InvalidMapKeyType","","Indicates that a type other than a string was attempted to be used as a\nmap key type.",5,null],[13,"Custom","","A custom error type was generated",5,null],[4,"DecodeErrorKind","","Enumeration of possible errors which can occur while decoding a structure.",null,null],[13,"ApplicationError","","An error flagged by the application, e.g. value out of range",6,null],[13,"ExpectedField","","A field was expected, but none was found.",6,null],[13,"UnknownField","","A field was found, but it was not an expected one.",6,null],[13,"ExpectedType","","A field was found, but it had the wrong type.",6,null],[13,"ExpectedMapKey","","The nth map key was expected, but none was found.",6,null],[13,"ExpectedMapElement","","The nth map element was expected, but none was found.",6,null],[13,"NoEnumVariants","","An enum decoding was requested, but no variants were supplied",6,null],[13,"NilTooLong","","The unit type was being decoded, but a non-zero length string was found",6,null],[13,"SyntaxError","","There was an error with the syntactical structure of the TOML.",6,null],[13,"CustomError","","A custom error was generated when decoding.",6,null],[13,"EndOfStream","","The end of the TOML input was reached too soon",6,null],[13,"InvalidType","","Produced by serde ...",6,null],[4,"Value","","Representation of a TOML value.",null,null],[13,"String","","",7,null],[13,"Integer","","",7,null],[13,"Float","","",7,null],[13,"Boolean","","",7,null],[13,"Datetime","","",7,null],[13,"Array","","",7,null],[13,"Table","","",7,null],[5,"encode","","Encodes an encodable value into a TOML value.",null,{"inputs":[{"name":"t"}],"output":{"name":"value"}}],[5,"encode_str","","Encodes an encodable value into a TOML string.",null,{"inputs":[{"name":"t"}],"output":{"name":"string"}}],[5,"decode","","Decodes a TOML value into a decodable type.",null,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[5,"decode_str","","Decodes a string into a toml-encoded value.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"new","","Creates a new parser for a string.",0,{"inputs":[{"name":"str"}],"output":{"name":"parser"}}],[11,"to_linecol","","Converts a byte offset from an error message to a (line, column) pair",0,null],[11,"set_require_newline_after_table","","Historical versions of toml-rs accidentally allowed a newline after a\ntable definition, but the TOML spec requires a newline after a table\ndefinition header.",0,null],[11,"parse","","Executes the parser, parsing the string contained within.",0,null],[11,"lookup","","Parse a path into a vector of paths",0,null],[11,"description","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",7,null],[11,"emit_nil","","",2,null],[11,"emit_usize","","",2,null],[11,"emit_u8","","",2,null],[11,"emit_u16","","",2,null],[11,"emit_u32","","",2,null],[11,"emit_u64","","",2,null],[11,"emit_isize","","",2,null],[11,"emit_i8","","",2,null],[11,"emit_i16","","",2,null],[11,"emit_i32","","",2,null],[11,"emit_i64","","",2,null],[11,"emit_bool","","",2,null],[11,"emit_f32","","",2,null],[11,"emit_f64","","",2,null],[11,"emit_char","","",2,null],[11,"emit_str","","",2,null],[11,"emit_enum","","",2,null],[11,"emit_enum_variant","","",2,null],[11,"emit_enum_variant_arg","","",2,null],[11,"emit_enum_struct_variant","","",2,null],[11,"emit_enum_struct_variant_field","","",2,null],[11,"emit_struct","","",2,null],[11,"emit_struct_field","","",2,null],[11,"emit_tuple","","",2,null],[11,"emit_tuple_arg","","",2,null],[11,"emit_tuple_struct","","",2,null],[11,"emit_tuple_struct_arg","","",2,null],[11,"emit_option","","",2,null],[11,"emit_option_none","","",2,null],[11,"emit_option_some","","",2,null],[11,"emit_seq","","",2,null],[11,"emit_seq_elt","","",2,null],[11,"emit_map","","",2,null],[11,"emit_map_elt_key","","",2,null],[11,"emit_map_elt_val","","",2,null],[11,"encode","","",7,null],[11,"default","","",2,{"inputs":[],"output":{"name":"encoder"}}],[11,"fmt","","",2,null],[11,"fmt","","",5,null],[11,"fmt","","",8,null],[11,"new","","Constructs a new encoder which will emit to the given output stream.",2,{"inputs":[],"output":{"name":"encoder"}}],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"read_nil","","",3,null],[11,"read_usize","","",3,null],[11,"read_u64","","",3,null],[11,"read_u32","","",3,null],[11,"read_u16","","",3,null],[11,"read_u8","","",3,null],[11,"read_isize","","",3,null],[11,"read_i64","","",3,null],[11,"read_i32","","",3,null],[11,"read_i16","","",3,null],[11,"read_i8","","",3,null],[11,"read_bool","","",3,null],[11,"read_f64","","",3,null],[11,"read_f32","","",3,null],[11,"read_char","","",3,null],[11,"read_str","","",3,null],[11,"read_enum","","",3,null],[11,"read_enum_variant","","",3,null],[11,"read_enum_variant_arg","","",3,null],[11,"read_enum_struct_variant","","",3,null],[11,"read_enum_struct_variant_field","","",3,null],[11,"read_struct","","",3,null],[11,"read_struct_field","","",3,null],[11,"read_tuple","","",3,null],[11,"read_tuple_arg","","",3,null],[11,"read_tuple_struct","","",3,null],[11,"read_tuple_struct_arg","","",3,null],[11,"read_option","","",3,null],[11,"read_seq","","",3,null],[11,"read_seq_elt","","",3,null],[11,"read_map","","",3,null],[11,"read_map_elt_key","","",3,null],[11,"read_map_elt_val","","",3,null],[11,"error","","",3,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"fmt","","",6,null],[11,"new","","Creates a new decoder, consuming the TOML value to decode.",3,{"inputs":[{"name":"value"}],"output":{"name":"decoder"}}],[11,"fmt","","",4,null],[11,"description","","",4,null],[6,"Array","","Type representing a TOML array, payload of the `Value::Array` variant",null,null],[6,"Table","","Type representing a TOML table, payload of the `Value::Table` variant",null,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"same_type","","Tests whether this and another value have the same type.",7,null],[11,"type_str","","Returns a human-readable representation of the type of this value.",7,null],[11,"as_str","","Extracts the string of this value if it is a string.",7,null],[11,"as_integer","","Extracts the integer value if it is an integer.",7,null],[11,"as_float","","Extracts the float value if it is a float.",7,null],[11,"as_bool","","Extracts the boolean value if it is a boolean.",7,null],[11,"as_datetime","","Extracts the datetime value if it is a datetime.",7,null],[11,"as_slice","","Extracts the array value if it is an array.",7,null],[11,"as_table","","Extracts the table value if it is a table.",7,null],[11,"lookup","","Lookups for value at specified path.",7,null],[11,"lookup_mut","","Lookups for mutable value at specified path.",7,null],[11,"from_str","","",7,{"inputs":[{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Parser"],[3,"ParserError"],[3,"Encoder"],[3,"Decoder"],[3,"DecodeError"],[4,"Error"],[4,"DecodeErrorKind"],[4,"Value"],[3,"EncoderState"]]};
searchIndex["cookie"] = {"doc":"","items":[[3,"CookieJar","cookie","A jar of cookies for managing a session",null,null],[3,"Cookie","","",null,null],[12,"name","","",0,null],[12,"value","","",0,null],[12,"expires","","",0,null],[12,"max_age","","",0,null],[12,"domain","","",0,null],[12,"path","","",0,null],[12,"secure","","",0,null],[12,"httponly","","",0,null],[12,"custom","","",0,null],[3,"AttrVal","","",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[11,"new","","Creates a new empty cookie jar with the given signing key.",2,null],[11,"add_original","","Adds an original cookie from a request.",2,null],[11,"add","","Adds a new cookie to this cookie jar.",2,null],[11,"remove","","Removes a cookie from this cookie jar.",2,null],[11,"find","","Finds a cookie inside of this cookie jar.",2,null],[11,"signed","","Creates a child signed cookie jar.",2,null],[11,"encrypted","","Creates a child encrypted cookie jar.",2,null],[11,"permanent","","Creates a child jar for permanent cookie storage.",2,null],[11,"delta","","Calculates the changes that have occurred to this cookie jar over time,\nreturning a vector of `Set-Cookie` headers.",2,null],[11,"iter","","Return an iterator over the cookies in this jar.",2,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"new","","",0,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"cookie"}}],[11,"parse","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pair","","",0,null],[11,"fmt","","",1,null],[11,"fmt","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Cookie"],[3,"AttrVal"],[3,"CookieJar"]]};
searchIndex["openssl_verify"] = {"doc":"Hostname verification for OpenSSL.","items":[[5,"verify_callback","openssl_verify","A convenience wrapper around verify_hostname that implements the logic for\nOpenSSL&#39;s certificate verification callback.",null,{"inputs":[{"name":"str"},{"name":"bool"},{"name":"x509storecontext"}],"output":{"name":"bool"}}],[5,"verify_hostname","","Validates that the certificate matches the provided fully qualified domain\nname.",null,{"inputs":[{"name":"str"},{"name":"x509"}],"output":{"name":"bool"}}]],"paths":[]};
searchIndex["chrono"] = {"doc":"# Chrono 0.2.25","items":[[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[4,"Weekday","","The day of week.",null,null],[13,"Mon","","Monday.",0,null],[13,"Tue","","Tuesday.",0,null],[13,"Wed","","Wednesday.",0,null],[13,"Thu","","Thursday.",0,null],[13,"Fri","","Friday.",0,null],[13,"Sat","","Saturday.",0,null],[13,"Sun","","Sunday.",0,null],[0,"duration","","ISO 8601 duration.",null,null],[3,"Duration","chrono::duration","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[0,"offset","chrono","The time zone, which calculates offsets from the local time to UTC.",null,null],[4,"LocalResult","chrono::offset","The conversion result from the local time to the timezone-aware datetime types.",null,null],[13,"None","","Given local time representation is invalid.\nThis can occur when, for example, the positive timezone transition.",1,null],[13,"Single","","Given local time representation has a single unique result.",1,null],[13,"Ambiguous","","Given local time representation has multiple results and thus ambiguous.\nThis can occur when, for example, the negative timezone transition.",1,null],[0,"utc","","The UTC (Coordinated Universal Time) time zone.",null,null],[3,"UTC","chrono::offset::utc","The UTC time zone. This is the most efficient time zone when you don&#39;t need the local time.\nIt is also used as an offset (which is also a dummy type).",null,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"today","","Returns a `Date` which corresponds to the current date.",2,{"inputs":[],"output":{"name":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",2,{"inputs":[],"output":{"name":"datetime"}}],[11,"from_offset","","",2,{"inputs":[{"name":"utc"}],"output":{"name":"utc"}}],[11,"offset_from_local_date","","",2,null],[11,"offset_from_local_datetime","","",2,null],[11,"offset_from_utc_date","","",2,null],[11,"offset_from_utc_datetime","","",2,null],[11,"local_minus_utc","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[0,"fixed","chrono::offset","The time zone which has a fixed offset from UTC.",null,null],[3,"FixedOffset","chrono::offset::fixed","The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.",null,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"fixedoffset"}}],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"fixedoffset"}}],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_offset","","",3,{"inputs":[{"name":"fixedoffset"}],"output":{"name":"fixedoffset"}}],[11,"offset_from_local_date","","",3,null],[11,"offset_from_local_datetime","","",3,null],[11,"offset_from_utc_date","","",3,null],[11,"offset_from_utc_datetime","","",3,null],[11,"local_minus_utc","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[0,"local","chrono::offset","The local (system) time zone.",null,null],[3,"Local","chrono::offset::local","The local timescale. This is implemented via the standard `time` crate.",null,null],[11,"clone","","",4,null],[11,"today","","Returns a `Date` which corresponds to the current date.",4,{"inputs":[],"output":{"name":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",4,{"inputs":[],"output":{"name":"datetime"}}],[11,"from_offset","","",4,{"inputs":[{"name":"fixedoffset"}],"output":{"name":"local"}}],[11,"offset_from_local_date","","",4,null],[11,"offset_from_local_datetime","","",4,null],[11,"offset_from_utc_date","","",4,null],[11,"offset_from_utc_datetime","","",4,null],[11,"from_local_date","","",4,null],[11,"from_local_datetime","","",4,null],[11,"from_utc_date","","",4,null],[11,"from_utc_datetime","","",4,null],[8,"Offset","chrono::offset","The offset from the local time to UTC.",null,null],[10,"local_minus_utc","","Returns the offset from UTC to the local time stored.",5,null],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","","An associated offset type.\nThis type is used to store the actual offset in date and time types.\nThe original `TimeZone` value can be recovered via `TimeZone::from_offset`.",6,null],[11,"ymd","","Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"yo","","Makes a new `Date` from year, day of year (DOY or &quot;ordinal&quot;) and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or &quot;ordinal&quot;) and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.",6,null],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.",6,null],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",6,null],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",6,null],[11,"datetime_from_str","","Parses a string with the specified format string and\nreturns a `DateTime` with the current offset.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",6,null],[10,"from_offset","","Reconstructs the time zone from the offset.",6,{"inputs":[{"name":"offset"}],"output":{"name":"self"}}],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if possible.",6,null],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if possible.",6,null],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware `Date` if possible.",6,null],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.",6,null],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot fail.",6,null],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This cannot fail.",6,null],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).",6,null],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).",6,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"single","","Returns `Some` only when the conversion result is unique, or `None` otherwise.",1,null],[11,"earliest","","Returns `Some` for the earliest possible conversion result, or `None` if none.",1,null],[11,"latest","","Returns `Some` for the latest possible conversion result, or `None` if none.",1,null],[11,"map","","Maps a `LocalResult&lt;T&gt;` into `LocalResult&lt;U&gt;` with given function.",1,null],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",1,null],[11,"unwrap","","Returns the single unique conversion result, or panics accordingly.",1,null],[0,"naive","chrono","Date and time types which do not concern about the timezones.",null,null],[0,"date","chrono::naive","ISO 8601 calendar date without timezone.",null,null],[3,"NaiveDate","chrono::naive::date","ISO 8601 calendar date without timezone.\nAllows for every [proleptic Gregorian date](./index.html#calendar-date)\nfrom Jan 1, 262145 BCE to Dec 31, 262143 CE.\nAlso supports the conversion from ISO 8601 ordinal and week date.",null,null],[17,"MIN","","The minimum possible `NaiveDate` (January 1, 262145 BCE).",null,null],[17,"MAX","","The maximum possible `NaiveDate` (December 31, 262143 CE).",null,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"cmp","","",7,null],[11,"clone","","",7,null],[11,"from_ymd","","Makes a new `NaiveDate` from the [calendar date](./index.html#calendar-date)\n(year, month and day).",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the [calendar date](./index.html#calendar-date)\n(year, month and day).",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_yo","","Makes a new `NaiveDate` from the [ordinal date](./index.html#ordinal-date)\n(year and day of the year).",7,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_yo_opt","","Makes a new `NaiveDate` from the [ordinal date](./index.html#ordinal-date)\n(year and day of the year).",7,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_isoywd","","Makes a new `NaiveDate` from the [ISO week date](./index.html#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"naivedate"}}],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the [ISO week date](./index.html#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"option"}}],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\nin the proleptic Gregorian calendar.",7,{"inputs":[{"name":"i32"}],"output":{"name":"naivedate"}}],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\nin the proleptic Gregorian calendar.",7,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDate`.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",7,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.",7,null],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",7,null],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",7,null],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",7,null],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",7,null],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",7,null],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",7,null],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",7,null],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",7,null],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",7,null],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",7,null],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",7,null],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",7,null],[11,"checked_add","","Adds the `days` part of given `Duration` to the current date.",7,null],[11,"checked_sub","","Subtracts the `days` part of given `Duration` from the current date.",7,null],[11,"format_with_items","","Formats the date with the specified formatting items.\nOtherwise it is same to the ordinary `format` method.",7,null],[11,"format","","Formats the date with the specified format string.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",7,null],[11,"year","","Returns the year number in the [calendar date](./index.html#calendar-date).",7,null],[11,"month","","Returns the month number starting from 1.",7,null],[11,"month0","","Returns the month number starting from 0.",7,null],[11,"day","","Returns the day of month starting from 1.",7,null],[11,"day0","","Returns the day of month starting from 0.",7,null],[11,"ordinal","","Returns the day of year starting from 1.",7,null],[11,"ordinal0","","Returns the day of year starting from 0.",7,null],[11,"weekday","","Returns the day of week.",7,null],[11,"isoweekdate","","",7,null],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",7,null],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting from 1) changed.",7,null],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting from 0) changed.",7,null],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting from 1) changed.",7,null],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting from 0) changed.",7,null],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting from 1) changed.",7,null],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting from 0) changed.",7,null],[11,"hash","","",7,null],[11,"add","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"from_str","","",7,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"time","chrono::naive","ISO 8601 time without timezone.",null,null],[3,"NaiveTime","chrono::naive::time","ISO 8601 time without timezone.\nAllows for the nanosecond precision and optional leap second representation.",null,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"partial_cmp","","",8,null],[11,"lt","","",8,null],[11,"le","","",8,null],[11,"gt","","",8,null],[11,"ge","","",8,null],[11,"cmp","","",8,null],[11,"clone","","",8,null],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveTime`.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",8,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"format_with_items","","Formats the time with the specified formatting items.\nOtherwise it is same to the ordinary [`format`](#method.format) method.",8,null],[11,"format","","Formats the time with the specified format string.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",8,null],[11,"hour","","Returns the hour number from 0 to 23.",8,null],[11,"minute","","Returns the minute number from 0 to 59.",8,null],[11,"second","","Returns the second number from 0 to 59.",8,null],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/time/index.html#leap-second-handling).",8,null],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",8,null],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",8,null],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",8,null],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.",8,null],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",8,null],[11,"hash","","",8,null],[11,"add","","",8,null],[11,"sub","","",8,null],[11,"sub","","",8,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"datetime","chrono::naive","ISO 8601 date and time without timezone.",null,null],[3,"NaiveDateTime","chrono::naive::datetime","ISO 8601 combined date and time without timezone.",null,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"cmp","","",9,null],[11,"clone","","",9,null],[11,"new","","Makes a new `NaiveDateTime` from date and time components.\nEquivalent to `date.and_time(time)` and many other helper constructors on `NaiveDate`.",9,{"inputs":[{"name":"naivedate"},{"name":"naivetime"}],"output":{"name":"naivedatetime"}}],[11,"from_timestamp","","Makes a new `NaiveDateTime` from the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` from the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_num_seconds_from_unix_epoch","","*Deprecated:* Same to [`NaiveDateTime::from_timestamp`](#method.from_timestamp).",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"from_num_seconds_from_unix_epoch_opt","","*Deprecated:* Same to [`NaiveDateTime::from_timestamp_opt`](#method.from_timestamp_opt).",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDateTime`.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",9,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"date","","Retrieves a date component.",9,null],[11,"time","","Retrieves a time component.",9,null],[11,"timestamp","","Returns the number of non-leap seconds since the midnight on January 1, 1970.",9,null],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole non-leap second.",9,null],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole non-leap second.",9,null],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole non-leap second.",9,null],[11,"num_seconds_from_unix_epoch","","*Deprecated:* Same to [`NaiveDateTime::timestamp`](#method.timestamp).",9,null],[11,"checked_add","","Adds given `Duration` to the current date and time.",9,null],[11,"checked_sub","","Subtracts given `Duration` from the current date and time.",9,null],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",9,null],[11,"format","","Formats the combined date and time with the specified format string.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",9,null],[11,"year","","Returns the year number in the [calendar date](./index.html#calendar-date).",9,null],[11,"month","","Returns the month number starting from 1.",9,null],[11,"month0","","Returns the month number starting from 0.",9,null],[11,"day","","Returns the day of month starting from 1.",9,null],[11,"day0","","Returns the day of month starting from 0.",9,null],[11,"ordinal","","Returns the day of year starting from 1.",9,null],[11,"ordinal0","","Returns the day of year starting from 0.",9,null],[11,"weekday","","Returns the day of week.",9,null],[11,"isoweekdate","","",9,null],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",9,null],[11,"with_month","","Makes a new `NaiveDateTime` with the month number (starting from 1) changed.",9,null],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number (starting from 0) changed.",9,null],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.",9,null],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.",9,null],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.",9,null],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.",9,null],[11,"hour","","Returns the hour number from 0 to 23.",9,null],[11,"minute","","Returns the minute number from 0 to 59.",9,null],[11,"second","","Returns the second number from 0 to 59.",9,null],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/time/index.html#leap-second-handling).",9,null],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",9,null],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",9,null],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",9,null],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.",9,null],[11,"hash","","",9,null],[11,"add","","",9,null],[11,"sub","","",9,null],[11,"sub","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",9,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"date","chrono","ISO 8601 calendar date with time zone.",null,null],[3,"Date","chrono::date","ISO 8601 calendar date with time zone.",null,null],[17,"MIN","","The minimum possible `Date`.",null,null],[17,"MAX","","The maximum possible `Date`.",null,null],[11,"clone","","",10,null],[11,"from_utc","","Makes a new `Date` with given *UTC* date and offset.\nThe local date should be constructed via the `TimeZone` trait.",10,{"inputs":[{"name":"naivedate"},{"name":"offset"}],"output":{"name":"date"}}],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.",10,null],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"succ","","Makes a new `Date` for the next date.",10,null],[11,"succ_opt","","Makes a new `Date` for the next date.",10,null],[11,"pred","","Makes a new `Date` for the prior date.",10,null],[11,"pred_opt","","Makes a new `Date` for the prior date.",10,null],[11,"offset","","Retrieves an associated offset from UTC.",10,null],[11,"timezone","","Retrieves an associated time zone.",10,null],[11,"with_timezone","","Changes the associated time zone.\nThis does not change the actual `Date` (but will change the string representation).",10,null],[11,"checked_add","","Adds given `Duration` to the current date.",10,null],[11,"checked_sub","","Subtracts given `Duration` from the current date.",10,null],[11,"naive_utc","","Returns a view to the naive UTC date.",10,null],[11,"naive_local","","Returns a view to the naive local date.",10,null],[11,"format_with_items","","Formats the date with the specified formatting items.",10,null],[11,"format","","Formats the date with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.",10,null],[11,"year","","",10,null],[11,"month","","",10,null],[11,"month0","","",10,null],[11,"day","","",10,null],[11,"day0","","",10,null],[11,"ordinal","","",10,null],[11,"ordinal0","","",10,null],[11,"weekday","","",10,null],[11,"isoweekdate","","",10,null],[11,"with_year","","",10,null],[11,"with_month","","",10,null],[11,"with_month0","","",10,null],[11,"with_day","","",10,null],[11,"with_day0","","",10,null],[11,"with_ordinal","","",10,null],[11,"with_ordinal0","","",10,null],[11,"eq","","",10,null],[11,"partial_cmp","","",10,null],[11,"cmp","","",10,null],[11,"hash","","",10,null],[11,"add","","",10,null],[11,"sub","","",10,null],[11,"sub","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[0,"datetime","chrono","ISO 8601 date and time with time zone.",null,null],[3,"DateTime","chrono::datetime","ISO 8601 combined date and time with time zone.",null,null],[11,"clone","","",11,null],[11,"from_utc","","Makes a new `DateTime` with given *UTC* datetime and offset.\nThe local datetime should be constructed via the `TimeZone` trait.",11,{"inputs":[{"name":"naivedatetime"},{"name":"offset"}],"output":{"name":"datetime"}}],[11,"date","","Retrieves a date component.",11,null],[11,"time","","Retrieves a time component.\nUnlike `date`, this is not associated to the time zone.",11,null],[11,"timestamp","","Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n(aka &quot;UNIX timestamp&quot;).",11,null],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second boundary",11,null],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second boundary",11,null],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second boundary",11,null],[11,"num_seconds_from_unix_epoch","","*Deprecated*: Same to `DateTime::timestamp`.",11,null],[11,"offset","","Retrieves an associated offset from UTC.",11,null],[11,"timezone","","Retrieves an associated time zone.",11,null],[11,"with_timezone","","Changes the associated time zone.\nThis does not change the actual `DateTime` (but will change the string representation).",11,null],[11,"checked_add","","Adds given `Duration` to the current date and time.",11,null],[11,"checked_sub","","Subtracts given `Duration` from the current date and time.",11,null],[11,"naive_utc","","Returns a view to the naive UTC datetime.",11,null],[11,"naive_local","","Returns a view to the naive local datetime.",11,null],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\nthen returns a new `DateTime` with a parsed `FixedOffset`.",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\nthen returns a new `DateTime` with a parsed `FixedOffset`.",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_from_str","","Parses a string with the specified format string and\nreturns a new `DateTime` with a parsed `FixedOffset`.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.",11,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.",11,null],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.",11,null],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",11,null],[11,"format","","Formats the combined date and time with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.",11,null],[11,"year","","",11,null],[11,"month","","",11,null],[11,"month0","","",11,null],[11,"day","","",11,null],[11,"day0","","",11,null],[11,"ordinal","","",11,null],[11,"ordinal0","","",11,null],[11,"weekday","","",11,null],[11,"isoweekdate","","",11,null],[11,"with_year","","",11,null],[11,"with_month","","",11,null],[11,"with_month0","","",11,null],[11,"with_day","","",11,null],[11,"with_day0","","",11,null],[11,"with_ordinal","","",11,null],[11,"with_ordinal0","","",11,null],[11,"hour","","",11,null],[11,"minute","","",11,null],[11,"second","","",11,null],[11,"nanosecond","","",11,null],[11,"with_hour","","",11,null],[11,"with_minute","","",11,null],[11,"with_second","","",11,null],[11,"with_nanosecond","","",11,null],[11,"eq","","",11,null],[11,"partial_cmp","","",11,null],[11,"cmp","","",11,null],[11,"hash","","",11,null],[11,"add","","",11,null],[11,"sub","","",11,null],[11,"sub","","",11,null],[11,"fmt","","",11,null],[11,"fmt","","",11,null],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"format","chrono","Formatting utilities for date and time.",null,null],[3,"ParseError","chrono::format","An error from the `parse` function.",null,null],[3,"DelayedFormat","","A *temporary* object which can be used as an argument to `format!` or others.\nThis is normally constructed via `format` methods of each date and time type.",null,null],[4,"Pad","","Padding characters for numeric items.",null,null],[13,"None","","No padding.",12,null],[13,"Zero","","Zero (`0`) padding.",12,null],[13,"Space","","Space padding.",12,null],[4,"Numeric","","Numeric item types.\nThey have associated formatting width (FW) and parsing width (PW).",null,null],[13,"Year","","Full Gregorian year (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.",13,null],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.",13,null],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",13,null],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.",13,null],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.",13,null],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.",13,null],[13,"Month","","Month (FW=PW=2).",13,null],[13,"Day","","Day of the month (FW=PW=2).",13,null],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).",13,null],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday of January (FW=PW=2).",13,null],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",13,null],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).",13,null],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",13,null],[13,"Ordinal","","Day of the year (FW=PW=3).",13,null],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",13,null],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",13,null],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",13,null],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",13,null],[13,"Nanosecond","","The number of nanoseconds since the last whole second (FW=PW=9).\nNote that this is *not* left-aligned;\nsee also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).",13,null],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\nFor formatting, it assumes UTC upon the absence of time zone offset.",13,null],[4,"Fixed","","Fixed-format item types.",null,null],[13,"ShortMonthName","","Abbreviated month names.",14,null],[13,"LongMonthName","","Full month names.",14,null],[13,"ShortWeekdayName","","Abbreviated day of the week names.",14,null],[13,"LongWeekdayName","","Full day of the week names.",14,null],[13,"LowerAmPm","","AM/PM.",14,null],[13,"UpperAmPm","","AM/PM.",14,null],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned nanoseconds.\nMay print nothing, 3, 6 or 9 digits according to the available accuracy.\nSee also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).",14,null],[13,"Nanosecond3","","Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.",14,null],[13,"Nanosecond6","","Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.",14,null],[13,"Nanosecond9","","Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.",14,null],[13,"TimezoneName","","Timezone name.",14,null],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).",14,null],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).",14,null],[13,"TimezoneOffset","","Same to [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\nParsing allows an optional colon.",14,null],[13,"TimezoneOffsetZ","","Same to [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\nParsing allows an optional colon.",14,null],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and MIME date and time.",14,null],[13,"RFC3339","","RFC 3339 &amp; ISO 8601 date and time syntax.",14,null],[4,"Item","","A single formatting item. This is used for both formatting and parsing.",null,null],[13,"Literal","","A literally printed and parsed text.",15,null],[13,"Space","","Whitespace. Prints literally but reads zero or more whitespace.",15,null],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\nthe parser simply ignores any padded whitespace and zeroes.",15,null],[13,"Fixed","","Fixed-format item.",15,null],[13,"Error","","Issues a formatting error. Used to signal an invalid format string.",15,null],[5,"parse","","Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\nThere should be no trailing string after parsing;\nuse a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.",null,{"inputs":[{"name":"parsed"},{"name":"str"},{"name":"i"}],"output":{"name":"parseresult"}}],[5,"format","","Tries to format given arguments with given formatting items.\nInternally used by `DelayedFormat`.",null,{"inputs":[{"name":"formatter"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"i"}],"output":{"name":"result"}}],[0,"parsed","","A collection of parsed date and time items.\nThey can be constructed incrementally while being checked for consistency.",null,null],[3,"Parsed","chrono::format::parsed","Parsed parts of date and time. There are two classes of methods:",null,null],[12,"year","","Year.",16,null],[12,"year_div_100","","Year divided by 100. Implies that the year is &gt;= 1 BCE when set.",16,null],[12,"year_mod_100","","Year modulo 100. Implies that the year is &gt;= 1 BCE when set.",16,null],[12,"isoyear","","Year in the [ISO week date](../../naive/date/index.html#week-date).",16,null],[12,"isoyear_div_100","","Year in the [ISO week date](../../naive/date/index.html#week-date), divided by 100.\nImplies that the year is &gt;= 1 BCE when set.",16,null],[12,"isoyear_mod_100","","Year in the [ISO week date](../../naive/date/index.html#week-date), modulo 100.\nImplies that the year is &gt;= 1 BCE when set.",16,null],[12,"month","","Month (1--12).",16,null],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday of January\n(0--53, 1--53 or 1--52 depending on the year).",16,null],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday of January\n(0--53, 1--53 or 1--52 depending on the year).",16,null],[12,"isoweek","","[ISO week number](../../naive/date/index.html#week-date)\n(1--52 or 1--53 depending on the year).",16,null],[12,"weekday","","Day of the week.",16,null],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",16,null],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).",16,null],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.",16,null],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",16,null],[12,"minute","","Minute number (0--59).",16,null],[12,"second","","Second number (0--60, accounting for leap seconds).",16,null],[12,"nanosecond","","The number of nanoseconds since the whole second (0--999,999,999).",16,null],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970.",16,null],[12,"offset","","Offset from the local time to UTC, in seconds.",16,null],[11,"clone","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"fmt","","",16,null],[11,"new","","Returns the initial value of parsed parts.",16,{"inputs":[],"output":{"name":"parsed"}}],[11,"set_year","","Tries to set the [`year`](#structfield.year) field from given value.",16,null],[11,"set_year_div_100","","Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.",16,null],[11,"set_year_mod_100","","Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.",16,null],[11,"set_isoyear","","Tries to set the [`isoyear`](#structfield.isoyear) field from given value.",16,null],[11,"set_isoyear_div_100","","Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.",16,null],[11,"set_isoyear_mod_100","","Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.",16,null],[11,"set_month","","Tries to set the [`month`](#structfield.month) field from given value.",16,null],[11,"set_week_from_sun","","Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.",16,null],[11,"set_week_from_mon","","Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.",16,null],[11,"set_isoweek","","Tries to set the [`isoweek`](#structfield.isoweek) field from given value.",16,null],[11,"set_weekday","","Tries to set the [`weekday`](#structfield.weekday) field from given value.",16,null],[11,"set_ordinal","","Tries to set the [`ordinal`](#structfield.ordinal) field from given value.",16,null],[11,"set_day","","Tries to set the [`day`](#structfield.day) field from given value.",16,null],[11,"set_ampm","","Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n(`false` for AM, `true` for PM)",16,null],[11,"set_hour12","","Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\ngiven hour number in 12-hour clocks.",16,null],[11,"set_hour","","Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n[`hour_mod_12`](#structfield.hour_mod_12) fields from given value.",16,null],[11,"set_minute","","Tries to set the [`minute`](#structfield.minute) field from given value.",16,null],[11,"set_second","","Tries to set the [`second`](#structfield.second) field from given value.",16,null],[11,"set_nanosecond","","Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.",16,null],[11,"set_timestamp","","Tries to set the [`timestamp`](#structfield.timestamp) field from given value.",16,null],[11,"set_offset","","Tries to set the [`offset`](#structfield.offset) field from given value.",16,null],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",16,null],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",16,null],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields,\nexcept for the [`offset`](#structfield.offset) field (assumed to have a given value).\nThis is required for parsing a local time or other known-timezone inputs.",16,null],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",16,null],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given fields.",16,null],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given fields,\nwith an additional `TimeZone` used to interpret and validate the local date.",16,null],[0,"strftime","chrono::format","`strftime`/`strptime`-inspired date and time formatting syntax.",null,null],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",null,null],[11,"clone","","",17,null],[11,"new","","Creates a new parsing iterator from the `strftime`-like format string.",17,{"inputs":[{"name":"str"}],"output":{"name":"strftimeitems"}}],[11,"next","","",17,null],[6,"ParseResult","chrono::format","Same to `Result&lt;T, ParseError&gt;`.",null,null],[11,"clone","","",12,null],[11,"eq","","",12,null],[11,"fmt","","",12,null],[11,"clone","","",13,null],[11,"eq","","",13,null],[11,"fmt","","",13,null],[11,"clone","","",14,null],[11,"eq","","",14,null],[11,"fmt","","",14,null],[11,"clone","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"fmt","","",15,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"fmt","","",18,null],[11,"description","","",18,null],[11,"fmt","","",19,null],[11,"new","","Makes a new `DelayedFormat` value out of local date and time.",19,{"inputs":[{"name":"option"},{"name":"option"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and time and UTC offset.",19,{"inputs":[{"name":"option"},{"name":"option"},{"name":"off"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"fmt","","",19,null],[8,"Datelike","chrono","The common set of methods for date component.",null,null],[10,"year","","Returns the year number in the [calendar date](./naive/date/index.html#calendar-date).",20,null],[11,"year_ce","","Returns the absolute year number starting from 1 with a boolean flag,\nwhich is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).",20,null],[10,"month","","Returns the month number starting from 1.",20,null],[10,"month0","","Returns the month number starting from 0.",20,null],[10,"day","","Returns the day of month starting from 1.",20,null],[10,"day0","","Returns the day of month starting from 0.",20,null],[10,"ordinal","","Returns the day of year starting from 1.",20,null],[10,"ordinal0","","Returns the day of year starting from 0.",20,null],[10,"weekday","","Returns the day of week.",20,null],[10,"isoweekdate","","Returns the ISO week date: an adjusted year, week number and day of week.\nThe adjusted year may differ from that of the calendar date.",20,null],[10,"with_year","","Makes a new value with the year number changed.",20,null],[10,"with_month","","Makes a new value with the month number (starting from 1) changed.",20,null],[10,"with_month0","","Makes a new value with the month number (starting from 0) changed.",20,null],[10,"with_day","","Makes a new value with the day of month (starting from 1) changed.",20,null],[10,"with_day0","","Makes a new value with the day of month (starting from 0) changed.",20,null],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1) changed.",20,null],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0) changed.",20,null],[11,"num_days_from_ce","","Returns the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",20,null],[8,"Timelike","","The common set of methods for time component.",null,null],[10,"hour","","Returns the hour number from 0 to 23.",21,null],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag,\nwhich is false for AM and true for PM.",21,null],[10,"minute","","Returns the minute number from 0 to 59.",21,null],[10,"second","","Returns the second number from 0 to 59.",21,null],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/time/index.html#leap-second-handling).",21,null],[10,"with_hour","","Makes a new value with the hour number changed.",21,null],[10,"with_minute","","Makes a new value with the minute number changed.",21,null],[10,"with_second","","Makes a new value with the second number changed.",21,null],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole non-leap second changed.",21,null],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",21,null],[11,"eq","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"succ","","The next day in the week.",0,null],[11,"pred","","The previous day in the week.",0,null],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)",0,null],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",0,null],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",0,null],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",0,null],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"weeks","chrono::duration","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",22,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",22,null],[11,"num_days","","Returns the total number of whole days in the duration.",22,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",22,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",22,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",22,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",22,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",22,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",22,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",22,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",22,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",22,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",22,{"inputs":[{"name":"duration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",22,null],[11,"mul","","",22,null],[11,"sub","","",22,null],[11,"cmp","","",22,null],[11,"div","","",22,null],[11,"fmt","","",22,null],[11,"neg","","",22,null],[11,"add","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"partial_cmp","","",22,null],[11,"lt","","",22,null],[11,"le","","",22,null],[11,"gt","","",22,null],[11,"ge","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",22,null]],"paths":[[4,"Weekday"],[4,"LocalResult"],[3,"UTC"],[3,"FixedOffset"],[3,"Local"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"DateTime"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"Parsed"],[3,"StrftimeItems"],[3,"ParseError"],[3,"DelayedFormat"],[8,"Datelike"],[8,"Timelike"],[3,"Duration"]]};
searchIndex["regex"] = {"doc":"This crate provides a native implementation of regular expressions that is\nheavily based on RE2 both in syntax and in implementation. Notably,\nbackreferences and arbitrary lookahead/lookbehind assertions are not\nprovided. In return, regular expression searching provided by this package\nhas excellent worst-case performance. The specific syntax supported is\ndocumented further down.","items":[[3,"RegexBuilder","regex","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"Captures","","Captures represents a group of captured strings for a single match.",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of a regular\nexpression.",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular match of a\nregular expression.",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the group\nname and the value.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"NoExpand","","NoExpand indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"RegexSplits","","Yields all substrings delimited by a regular expression match.",null,null],[3,"RegexSplitsN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[4,"Error","","An error that occurred during parsing or compiling a regular expression.",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit.\nThe argument is the size limit imposed.",1,null],[13,"InvalidSet","","**DEPRECATED:** Will be removed on next major version bump.",1,null],[5,"quote","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"is_match","","Tests if the given regular expression matches somewhere in the text given.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.",null,null],[3,"Splits","","Yields all substrings delimited by a regular expression match.",null,null],[3,"SplitsN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a single match.",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of a regular\nexpression.",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular match of a\nregular expression.",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the group name and\nthe value.",null,null],[3,"NoExpand","","NoExpand indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[8,"Replacer","","Replacer describes types that can be used to replace matches in a byte\nstring.",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,null],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,null],[11,"fmt","regex","",1,null],[11,"description","","",1,null],[11,"cause","","",1,null],[11,"fmt","","",1,null],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"new","regex::bytes","Create a new regular expression builder with the given pattern.",4,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"compile","","Consume the builder and compile the regular expression.",4,null],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,null],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,null],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).",4,null],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,null],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,null],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,null],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",4,null],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,null],[11,"new","regex","Create a new regular expression builder with the given pattern.",5,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"compile","","Consume the builder and compile the regular expression.",5,null],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,null],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,null],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).",5,null],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,null],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,null],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,null],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",5,null],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,null],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,null],[11,"clone","","",6,null],[11,"fmt","","Shows the original regular expression.",6,null],[11,"fmt","","Shows the original regular expression.",6,null],[11,"from_str","","Attempts to parse a string into a regular expression",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",6,{"inputs":[{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",6,null],[11,"find","","Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.",6,null],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.",6,null],[11,"captures","","Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.",6,null],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about submatches.",6,null],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn&#39;t* matched by the regular expression.",6,null],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn&#39;t* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.",6,null],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The\nreplacement can be a regular byte string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches&#39;\n`Captures` and returns the replaced byte string.",6,null],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.",6,null],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.",6,null],[11,"shortest_match","","Returns the end location of a match in the text given.",6,null],[11,"as_str","","Returns the original string of this regex.",6,null],[11,"capture_names","","Returns an iterator over the capture names.",6,null],[11,"captures_len","","Returns the number of captures.",6,null],[11,"next","","",7,null],[11,"next","","",8,null],[11,"next","","",9,null],[11,"next","","",10,null],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"pos","","Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original byte string matched.",12,null],[11,"at","","Returns the matched string for the capture group `i`.  If `i` isn&#39;t\na valid capture group or didn&#39;t match anything, then `None` is\nreturned.",12,null],[11,"name","","Returns the matched string for the capture group named `name`.  If\n`name` isn&#39;t a valid capture group or didn&#39;t match anything, then\n`None` is returned.",12,null],[11,"iter","","Creates an iterator of all the capture groups in order of appearance\nin the regular expression.",12,null],[11,"iter_pos","","Creates an iterator of all the capture group positions in order of\nappearance in the regular expression. Positions are byte indices\nin terms of the original string matched.",12,null],[11,"iter_named","","Creates an iterator of all named groups as an tuple with the group\nname and the value. The iterator returns these values in arbitrary\norder.",12,null],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture\ngroup `name`, and writes them to the `dst` buffer given.",12,null],[11,"len","","Returns the number of captured groups.",12,null],[11,"is_empty","","Returns true if and only if there are no captured groups.",12,null],[11,"fmt","","",12,null],[11,"index","","",12,null],[11,"index","","",12,null],[11,"next","","",13,null],[11,"next","","",14,null],[11,"next","","",15,null],[11,"replace_append","","",2,null],[11,"no_expansion","","",2,null],[11,"clone","regex","",16,null],[11,"new","","Create a new regex set with the given regular expressions.",16,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches\nthe text given.",16,null],[11,"matches","","Returns the set of regular expressions that match in the given text.",16,null],[11,"len","","Returns the total number of regular expressions in this set.",16,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"matched_any","","Whether this set contains any matches.",17,null],[11,"matched","","Whether the regex at the given index matched.",17,null],[11,"len","","The total number of regexes in the set that created these matches.",17,null],[11,"iter","","Returns an iterator over indexes in the regex that matched.",17,null],[11,"into_iter","","",17,null],[11,"next","","",18,null],[11,"next_back","","",18,null],[11,"clone","","",19,null],[11,"next","","",19,null],[11,"next_back","","",19,null],[11,"fmt","","",16,null],[11,"clone","regex::bytes","",20,null],[11,"new","","Create a new regex set with the given regular expressions.",20,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches\nthe text given.",20,null],[11,"matches","","Returns the set of regular expressions that match in the given text.",20,null],[11,"len","","Returns the total number of regular expressions in this set.",20,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"matched_any","","Whether this set contains any matches.",21,null],[11,"matched","","Whether the regex at the given index matched.",21,null],[11,"len","","The total number of regexes in the set that created these matches.",21,null],[11,"iter","","Returns an iterator over indexes in the regex that matched.",21,null],[11,"into_iter","","",21,null],[11,"next","","",22,null],[11,"next_back","","",22,null],[11,"clone","","",23,null],[11,"next","","",23,null],[11,"next_back","","",23,null],[11,"fmt","","",20,null],[11,"clone","regex","",24,null],[11,"fmt","","Shows the original regular expression.",24,null],[11,"fmt","","Shows the original regular expression.",24,null],[11,"eq","","",24,null],[11,"from_str","","Attempts to parse a string into a regular expression",24,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.",24,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",24,{"inputs":[{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",24,null],[11,"find","","Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.",24,null],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.",24,null],[11,"captures","","Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.",24,null],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about submatches.",24,null],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn&#39;t* matched by the regular expression.",24,null],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn&#39;t* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.",24,null],[11,"replace","","Replaces the leftmost-first match with the replacement provided.\nThe replacement can be a regular string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches&#39;\n`Captures` and returns the replaced string.",24,null],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.",24,null],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.",24,null],[11,"shortest_match","","Returns the end location of a match in the text given.",24,null],[11,"as_str","","Returns the original string of this regex.",24,null],[11,"capture_names","","Returns an iterator over the capture names.",24,null],[11,"captures_len","","Returns the number of captures.",24,null],[11,"next","","",25,null],[11,"size_hint","","",25,null],[11,"reg_replace","","",0,null],[11,"no_expand","","",0,null],[11,"next","","",26,null],[11,"next","","",27,null],[11,"pos","","Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.",28,null],[11,"at","","Returns the matched string for the capture group `i`.  If `i` isn&#39;t\na valid capture group or didn&#39;t match anything, then `None` is\nreturned.",28,null],[11,"name","","Returns the matched string for the capture group named `name`.  If\n`name` isn&#39;t a valid capture group or didn&#39;t match anything, then\n`None` is returned.",28,null],[11,"iter","","Creates an iterator of all the capture groups in order of appearance\nin the regular expression.",28,null],[11,"iter_pos","","Creates an iterator of all the capture group positions in order of\nappearance in the regular expression. Positions are byte indices\nin terms of the original string matched.",28,null],[11,"iter_named","","Creates an iterator of all named groups as an tuple with the group\nname and the value. The iterator returns these values in arbitrary\norder.",28,null],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture\ngroup `name`.",28,null],[11,"len","","Returns the number of captured groups.",28,null],[11,"is_empty","","Returns true if and only if there are no captured groups.",28,null],[11,"fmt","","",28,null],[11,"index","","",28,null],[11,"index","","",28,null],[11,"next","","",29,null],[11,"next","","",30,null],[11,"next","","",31,null],[11,"next","","",32,null],[11,"next","","",33,null],[8,"Replacer","","Replacer describes types that can be used to replace matches in a string.",null,null],[10,"reg_replace","","Returns a possibly owned string that is used to replace the match\ncorresponding to the `caps` capture group.",34,null],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",34,null],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",34,null]],"paths":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"Regex"],[3,"FindMatches"],[3,"FindCaptures"],[3,"Splits"],[3,"SplitsN"],[3,"CaptureNames"],[3,"Captures"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"Regex"],[3,"CaptureNames"],[3,"RegexSplits"],[3,"RegexSplitsN"],[3,"Captures"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"],[3,"FindCaptures"],[3,"FindMatches"],[8,"Replacer"]]};
searchIndex["openssl"] = {"doc":"","items":[[0,"asn1","openssl","",null,null],[3,"Asn1Time","openssl::asn1","",null,null],[11,"new","","Wraps existing ASN1_TIME and takes ownership",0,null],[11,"days_from_now","","Creates a new time on specified interval in days from now",0,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"get_handle","","Returns raw handle",0,null],[11,"drop","","",0,null],[0,"bn","openssl","",null,null],[3,"BigNum","openssl::bn","A signed arbitrary-precision integer.",null,null],[4,"RNGProperty","","Specifies the desired properties of a randomly generated `BigNum`.",null,null],[13,"MsbMaybeZero","","The most significant bit of the number is allowed to be 0.",1,null],[13,"MsbOne","","The MSB should be set to 1.",1,null],[13,"TwoMsbOne","","The two most significant bits of the number will be set to 1, so that the product of two\nsuch random numbers will always have `2 * bits` length.",1,null],[11,"clone","","",2,null],[11,"neg","","",2,null],[11,"clone","","",1,null],[11,"new","","Creates a new `BigNum` with the value 0.",2,{"inputs":[],"output":{"name":"result"}}],[11,"new_from","","Creates a new `BigNum` with the given value.",2,{"inputs":[{"name":"u64"}],"output":{"name":"result"}}],[11,"from_dec_str","","Creates a `BigNum` from a decimal string.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_hex_str","","Creates a `BigNum` from a hexadecimal string.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_from_ffi","","",2,null],[11,"new_from_slice","","Creates a new `BigNum` from an unsigned, big-endian encoded number of arbitrary length.",2,null],[11,"checked_sqr","","Returns the square of `self`.",2,null],[11,"checked_nnmod","","Returns the unsigned remainder of the division `self / n`.",2,null],[11,"checked_mod_add","","Equivalent to `(self + a) mod n`.",2,null],[11,"checked_mod_sub","","Equivalent to `(self - a) mod n`.",2,null],[11,"checked_mod_mul","","Equivalent to `(self * a) mod n`.",2,null],[11,"checked_mod_sqr","","Equivalent to `self² mod n`.",2,null],[11,"checked_exp","","Raises `self` to the `p`th power.",2,null],[11,"checked_mod_exp","","Equivalent to `self.checked_exp(p) mod n`.",2,null],[11,"checked_mod_inv","","Calculates the modular multiplicative inverse of `self` modulo `n`, that is, an integer `r`\nsuch that `(self * r) % n == 1`.",2,null],[11,"add_word","","Add an `unsigned long` to `self`. This is more efficient than adding a `BigNum`.",2,null],[11,"sub_word","","",2,null],[11,"mul_word","","",2,null],[11,"div_word","","",2,null],[11,"mod_word","","",2,null],[11,"checked_gcd","","Computes the greatest common denominator of `self` and `a`.",2,null],[11,"checked_generate_prime","","Generates a prime number.",2,{"inputs":[{"name":"i32"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"is_prime","","Checks whether `self` is prime.",2,null],[11,"is_prime_fast","","Checks whether `self` is prime with optional trial division.",2,null],[11,"checked_new_random","","Generates a cryptographically strong pseudo-random `BigNum`.",2,{"inputs":[{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_new_pseudo_random","","The cryptographically weak counterpart to `checked_new_random`.",2,{"inputs":[{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_rand_in_range","","Generates a cryptographically strong pseudo-random `BigNum` `r` in the range\n`0 &lt;= r &lt; self`.",2,null],[11,"checked_pseudo_rand_in_range","","The cryptographically weak counterpart to `checked_rand_in_range`.",2,null],[11,"set_bit","","Sets bit `n`. Equivalent to `self |= (1 &lt;&lt; n)`.",2,null],[11,"clear_bit","","Clears bit `n`, setting it to 0. Equivalent to `self &amp;= ~(1 &lt;&lt; n)`.",2,null],[11,"is_bit_set","","Returns `true` if the `n`th bit of `self` is set to 1, `false` otherwise.",2,null],[11,"mask_bits","","Truncates `self` to the lowest `n` bits.",2,null],[11,"checked_shl1","","Returns `self`, shifted left by 1 bit. `self` may be negative.",2,null],[11,"checked_shr1","","Returns `self`, shifted right by 1 bit. `self` may be negative.",2,null],[11,"checked_add","","",2,null],[11,"checked_sub","","",2,null],[11,"checked_mul","","",2,null],[11,"checked_div","","",2,null],[11,"checked_mod","","",2,null],[11,"checked_shl","","",2,null],[11,"checked_shr","","",2,null],[11,"negate","","Inverts the sign of `self`.",2,null],[11,"abs_cmp","","Compare the absolute values of `self` and `oth`.",2,null],[11,"is_negative","","",2,null],[11,"num_bits","","Returns the number of significant bits in `self`.",2,null],[11,"num_bytes","","Returns the size of `self` in bytes.",2,null],[11,"raw","","",2,null],[11,"raw_ptr","","",2,null],[11,"into_raw","","",2,null],[11,"to_vec","","Returns a big-endian byte vector representation of the absolute value of `self`.",2,null],[11,"to_dec_str","","Returns a decimal string representation of `self`.",2,null],[11,"to_hex_str","","Returns a hexadecimal string representation of `self`.",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"drop","","",2,null],[0,"bio","openssl","",null,null],[3,"MemBio","openssl::bio","",null,null],[11,"drop","","",3,null],[11,"new","","Creates a new owned memory based BIO",3,{"inputs":[],"output":{"name":"result"}}],[11,"borrowed","","Returns a &quot;borrow&quot;, i.e. it has no ownership",3,null],[11,"unwrap","","Consumes current bio and returns wrapped value\nNote that data ownership is lost and\nshould be managed manually",3,null],[11,"get_handle","","Temporarily gets wrapped value",3,null],[11,"set_eof","","Sets the BIO&#39;s EOF state.",3,null],[11,"read","","",3,null],[11,"write","","",3,null],[11,"flush","","",3,null],[0,"crypto","openssl","",null,null],[0,"hash","openssl::crypto","",null,null],[3,"Hasher","openssl::crypto::hash","Provides message digest (hash) computation.",null,null],[4,"Type","","Message digest (hash) type.",null,null],[13,"MD5","","",4,null],[13,"SHA1","","",4,null],[13,"SHA224","","",4,null],[13,"SHA256","","",4,null],[13,"SHA384","","",4,null],[13,"SHA512","","",4,null],[13,"RIPEMD160","","",4,null],[5,"hash","","Computes the hash of the `data` with the hash `t`.",null,null],[11,"clone","","",4,null],[11,"md_len","","Returns the length of the message digest.",4,null],[11,"evp_md","","Internal interface subject to removal.",4,null],[11,"new","","Creates a new `Hasher` with the specified hash type.",5,{"inputs":[{"name":"type"}],"output":{"name":"hasher"}}],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",5,null],[11,"write","","",5,null],[11,"flush","","",5,null],[11,"clone","","",5,null],[11,"drop","","",5,null],[0,"hmac","openssl::crypto","",null,null],[3,"HMAC","openssl::crypto::hmac","Provides HMAC computation.",null,null],[5,"hmac","","Computes the HMAC of the `data` with the hash `t` and `key`.",null,null],[11,"new","","Creates a new `HMAC` with the specified hash type using the `key`.",6,null],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",6,null],[11,"write","","",6,null],[11,"flush","","",6,null],[11,"clone","","",6,null],[11,"drop","","",6,null],[0,"pkcs5","openssl::crypto","",null,null],[3,"KeyIvPair","openssl::crypto::pkcs5","",null,null],[12,"key","","",7,null],[12,"iv","","",7,null],[5,"evp_bytes_to_key_pbkdf1_compatible","","Derives a key and an IV from various parameters.",null,null],[5,"pbkdf2_hmac_sha1","","Derives a key from a password and salt using the PBKDF2-HMAC-SHA1 algorithm.",null,null],[11,"clone","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"hash","","",7,null],[11,"fmt","","",7,null],[0,"pkey","openssl::crypto","",null,null],[3,"PKey","openssl::crypto::pkey","",null,null],[4,"Parts","","",null,null],[13,"Neither","","",8,null],[13,"Public","","",8,null],[13,"Both","","",8,null],[4,"Role","","Represents a role an asymmetric key might be appropriate for.",null,null],[13,"Encrypt","","",9,null],[13,"Decrypt","","",9,null],[13,"Sign","","",9,null],[13,"Verify","","",9,null],[4,"EncryptionPadding","","Type of encryption padding to use.",null,null],[13,"OAEP","","",10,null],[13,"PKCS1v15","","",10,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"new","","",11,{"inputs":[],"output":{"name":"pkey"}}],[11,"from_handle","","",11,null],[11,"private_key_from_pem","","Reads private key from PEM, takes ownership of handle",11,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"public_key_from_pem","","Reads public key from PEM, takes ownership of handle",11,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"private_rsa_key_from_pem","","Reads an RSA private key from PEM, takes ownership of handle",11,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"public_rsa_key_from_pem","","Reads an RSA public key from PEM, takes ownership of handle",11,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"gen","","",11,null],[11,"set_rsa","","assign RSA key to this pkey",11,null],[11,"get_rsa","","get a reference to the interal RSA key for direct access to the key components",11,null],[11,"save_pub","","Returns a DER serialized form of the public key, suitable for load_pub().",11,null],[11,"load_pub","","Loads a DER serialized form of the public key, as produced by save_pub().",11,null],[11,"save_priv","","Returns a serialized form of the public and private keys, suitable for\nload_priv().",11,null],[11,"load_priv","","Loads a serialized form of the public and private keys, as produced by\nsave_priv().",11,null],[11,"write_pem","","Stores private key as a PEM",11,null],[11,"write_pub_pem","","Stores public key as a PEM",11,null],[11,"size","","Returns the size of the public key modulus.",11,null],[11,"can","","Returns whether this pkey object can perform the specified role.",11,null],[11,"max_data","","Returns the maximum amount of data that can be encrypted by an encrypt()\ncall.",11,null],[11,"private_encrypt_with_padding","","",11,null],[11,"public_encrypt_with_padding","","",11,null],[11,"private_decrypt_with_padding","","",11,null],[11,"public_decrypt_with_padding","","",11,null],[11,"encrypt","","Encrypts data with the public key, using OAEP padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"encrypt_with_padding","","Encrypts data with the public key, using provided padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"public_encrypt","","Encrypts data with the public key, using OAEP padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"public_decrypt","","Decrypts data with the public key, using PKCS1v15 padding, returning the decrypted data.",11,null],[11,"decrypt","","Decrypts data with the private key, expecting OAEP padding, returning the decrypted data.",11,null],[11,"decrypt_with_padding","","Decrypts data with the private key, using provided padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"private_decrypt","","Decrypts data with the private key, expecting OAEP padding, returning the decrypted data.",11,null],[11,"private_encrypt","","Encrypts data with the private key, using PKCS1v15 padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"sign","","Signs data, using OpenSSL&#39;s default scheme and adding sha256 ASN.1 information to the\nsignature.\nThe bytes to sign must be the result of a sha256 hashing;\nreturns the signature.",11,null],[11,"verify","","Verifies a signature s (using OpenSSL&#39;s default scheme and sha256) on the SHA256 hash of a\nmessage.\nReturns true if the signature is valid, and false otherwise.",11,null],[11,"sign_with_hash","","Signs data, using OpenSSL&#39;s default scheme and add ASN.1 information for the given hash type to the\nsignature.\nThe bytes to sign must be the result of this type of hashing;\nreturns the signature.",11,null],[11,"verify_with_hash","","",11,null],[11,"get_handle","","",11,null],[11,"public_eq","","",11,null],[11,"drop","","",11,null],[11,"clone","","",11,null],[0,"rand","openssl::crypto","",null,null],[5,"rand_bytes","openssl::crypto::rand","",null,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[0,"symm","openssl::crypto","",null,null],[3,"Crypter","openssl::crypto::symm","Represents a symmetric cipher context.",null,null],[4,"Mode","","",null,null],[13,"Encrypt","","",12,null],[13,"Decrypt","","",12,null],[4,"Type","","",null,null],[13,"AES_128_ECB","","",13,null],[13,"AES_128_CBC","","",13,null],[13,"AES_128_CFB1","","",13,null],[13,"AES_128_CFB128","","",13,null],[13,"AES_128_CFB8","","",13,null],[13,"AES_256_ECB","","",13,null],[13,"AES_256_CBC","","",13,null],[13,"AES_256_CFB1","","",13,null],[13,"AES_256_CFB128","","",13,null],[13,"AES_256_CFB8","","",13,null],[13,"DES_CBC","","",13,null],[13,"DES_ECB","","",13,null],[13,"RC4_128","","",13,null],[5,"encrypt","","Encrypts data, using the specified crypter type in encrypt mode with the\nspecified key and iv; returns the resulting (encrypted) data.",null,null],[5,"decrypt","","Decrypts data, using the specified crypter type in decrypt mode with the\nspecified key and iv; returns the resulting (decrypted) data.",null,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"new","","",14,{"inputs":[{"name":"type"}],"output":{"name":"crypter"}}],[11,"pad","","Enables or disables padding. If padding is disabled, total amount of\ndata encrypted must be a multiple of block size.",14,null],[11,"init","","Initializes this crypter.",14,null],[11,"update","","Update this crypter with more data to encrypt or decrypt. Returns\nencrypted or decrypted bytes.",14,null],[11,"finalize","","Finish crypting. Returns the remaining partial block of output, if any.",14,null],[11,"drop","","",14,null],[0,"memcmp","openssl::crypto","",null,null],[5,"eq","openssl::crypto::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",null,null],[0,"rsa","openssl::crypto","",null,null],[3,"RSA","openssl::crypto::rsa","",null,null],[11,"drop","","",15,null],[11,"from_public_components","","only useful for associating the key material directly with the key, it&#39;s safer to use\nthe supplied load and save methods for DER formatted keys.",15,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_private_components","","",15,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_raw","","the caller should assert that the rsa pointer is valid.",15,null],[11,"private_key_from_pem","","Reads an RSA private key from PEM formatted data.",15,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"private_key_to_pem","","Writes an RSA private key as unencrypted PEM formatted data",15,null],[11,"public_key_from_pem","","Reads an RSA public key from PEM formatted data.",15,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"public_key_to_pem","","Writes an RSA public key as PEM formatted data",15,null],[11,"size","","",15,null],[11,"sign","","",15,null],[11,"verify","","",15,null],[11,"as_ptr","","",15,null],[11,"n","","",15,null],[11,"has_n","","",15,null],[11,"d","","",15,null],[11,"e","","",15,null],[11,"has_e","","",15,null],[11,"p","","",15,null],[11,"q","","",15,null],[11,"fmt","","",15,null],[0,"dh","openssl","",null,null],[3,"DH","openssl::dh","",null,null],[11,"from_params","","",16,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_pem","","",16,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"raw","","",16,null],[11,"raw_ptr","","",16,null],[11,"drop","","",16,null],[0,"ssl","openssl","",null,null],[3,"SslContextOptions","openssl::ssl","",null,null],[3,"SslVerifyMode","","",null,null],[3,"SslContext","","An SSL context object",null,null],[3,"CipherBits","","",null,null],[12,"secret","","The number of secret bits used for the cipher.",17,null],[12,"algorithm","","The number of bits processed by the chosen algorithm, if not None.",17,null],[3,"SslCipher","","",null,null],[3,"Ssl","","",null,null],[3,"SslStream","","A stream wrapper which handles SSL encryption for an underlying stream.",null,null],[3,"NonblockingSslStream","","# Deprecated",null,null],[4,"Error","","An SSL error.",null,null],[13,"ZeroReturn","","The SSL session has been closed by the other end",18,null],[13,"WantRead","","An attempt to read data from the underlying socket returned\n`WouldBlock`. Wait for read readiness and reattempt the operation.",18,null],[13,"WantWrite","","An attempt to write data from the underlying socket returned\n`WouldBlock`. Wait for write readiness and reattempt the operation.",18,null],[13,"WantX509Lookup","","The client certificate callback requested to be called again.",18,null],[13,"Stream","","An error reported by the underlying stream.",18,null],[13,"Ssl","","An error in the OpenSSL library.",18,null],[4,"SslMethod","","Determines the SSL method supported",null,null],[13,"Sslv23","","Support the SSLv2, SSLv3, TLSv1, TLSv1.1, and TLSv1.2 protocols depending on what the\nlinked OpenSSL library supports.",19,null],[13,"Tlsv1","","Only support the TLSv1 protocol.",19,null],[4,"MaybeSslStream","","A utility type to help in cases where the use of SSL is decided at runtime.",null,null],[13,"Ssl","","A connection using SSL",20,null],[13,"Normal","","A connection not using SSL",20,null],[5,"init","","Manually initialize SSL.\nIt is optional to call this function and safe to do so more than once.",null,{"inputs":[],"output":null}],[0,"error","","",null,null],[3,"OpenSslError","openssl::ssl::error","An error reported from OpenSSL.",null,null],[4,"Error","","An SSL error.",null,null],[13,"ZeroReturn","","The SSL session has been closed by the other end",18,null],[13,"WantRead","","An attempt to read data from the underlying socket returned\n`WouldBlock`. Wait for read readiness and reattempt the operation.",18,null],[13,"WantWrite","","An attempt to write data from the underlying socket returned\n`WouldBlock`. Wait for write readiness and reattempt the operation.",18,null],[13,"WantX509Lookup","","The client certificate callback requested to be called again.",18,null],[13,"Stream","","An error reported by the underlying stream.",18,null],[13,"Ssl","","An error in the OpenSSL library.",18,null],[4,"SslError","","An SSL error",null,null],[13,"StreamError","","The underlying stream reported an error",21,null],[13,"SslSessionClosed","","The SSL session has been closed by the other end",21,null],[13,"OpenSslErrors","","An error in the OpenSSL library",21,null],[4,"NonblockingSslError","","An error on a nonblocking stream.",null,null],[13,"SslError","","A standard SSL error occurred.",22,null],[13,"WantRead","","The OpenSSL library wants data from the remote socket;\nthe caller should wait for read readiness.",22,null],[13,"WantWrite","","The OpenSSL library wants to send data to the remote socket;\nthe caller should wait for write readiness.",22,null],[4,"OpensslError","","An error from the OpenSSL library",null,null],[13,"UnknownError","","An unknown error",23,null],[12,"library","openssl::ssl::error::OpensslError","The library reporting the error",23,null],[12,"function","","The function reporting the error",23,null],[12,"reason","","The reason for the error",23,null],[11,"fmt","openssl::ssl::error","",18,null],[11,"fmt","","",18,null],[11,"description","","",18,null],[11,"cause","","",18,null],[11,"get_stack","","Returns the contents of the OpenSSL error stack.",24,{"inputs":[],"output":{"name":"vec"}}],[11,"error_code","","Returns the raw OpenSSL error code for this error.",24,null],[11,"library","","Returns the name of the library reporting the error.",24,null],[11,"function","","Returns the name of the function reporting the error.",24,null],[11,"reason","","Returns the reason for the error.",24,null],[11,"fmt","","",24,null],[11,"fmt","","",24,null],[11,"description","","",24,null],[11,"fmt","","",21,null],[11,"fmt","","",22,null],[11,"fmt","","",21,null],[11,"description","","",21,null],[11,"cause","","",21,null],[11,"fmt","","",22,null],[11,"description","","",22,null],[11,"cause","","",22,null],[11,"from","","",22,{"inputs":[{"name":"sslerror"}],"output":{"name":"nonblockingsslerror"}}],[11,"fmt","","",23,null],[11,"clone","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"from_error_code","","",23,{"inputs":[{"name":"c_ulong"}],"output":{"name":"opensslerror"}}],[11,"get","","Creates a new `OpenSslErrors` with the current contents of the error\nstack.",21,{"inputs":[],"output":{"name":"sslerror"}}],[11,"from_error","","Creates an `SslError` from the raw numeric error code.",21,{"inputs":[{"name":"c_ulong"}],"output":{"name":"sslerror"}}],[6,"VerifyCallback","openssl::ssl","The signature of functions that can be used to manually verify certificates",null,null],[6,"VerifyCallbackData","","The signature of functions that can be used to manually verify certificates\nwhen user-data should be carried for all verification process",null,null],[6,"ServerNameCallback","","The signature of functions that can be used to choose the context depending on the server name",null,null],[6,"ServerNameCallbackData","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLV2","","",null,null],[17,"SSL_OP_NO_SSLV3","","",null,null],[17,"SSL_OP_NO_DTLSV1","","",null,null],[17,"SSL_OP_NO_TLSV1","","",null,null],[17,"SSL_OP_NO_DTLSV1_2","","",null,null],[17,"SSL_OP_NO_TLSV1_2","","",null,null],[17,"SSL_OP_NO_TLSV1_1","","",null,null],[17,"SSL_OP_NETSCAPE_CA_DN_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",null,null],[17,"SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG","","",null,null],[17,"SSL_OP_MSIE_SSLV2_RSA_PADDING","","",null,null],[17,"SSL_OP_PKCS1_CHECK_1","","",null,null],[17,"SSL_OP_PKCS1_CHECK_2","","",null,null],[17,"SSL_OP_EPHEMERAL_RSA","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_SSL_MASK","","",null,null],[17,"SSL_VERIFY_PEER","","Verify that the server&#39;s certificate is trusted",null,null],[17,"SSL_VERIFY_NONE","","Do not verify the server&#39;s certificate",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","Terminate handshake if client did not return a certificate.\nUse together with SSL_VERIFY_PEER.",null,null],[8,"IntoSsl","","",null,null],[10,"into_ssl","","",25,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"clone","","",26,null],[11,"partial_cmp","","",26,null],[11,"lt","","",26,null],[11,"le","","",26,null],[11,"gt","","",26,null],[11,"ge","","",26,null],[11,"cmp","","",26,null],[11,"hash","","",26,null],[11,"fmt","","",26,null],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"sslcontextoptions"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"sslcontextoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"u64"}],"output":{"name":"sslcontextoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,null],[11,"is_all","","Returns `true` if all flags are currently set.",26,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,null],[11,"insert","","Inserts the specified flags in-place.",26,null],[11,"remove","","Removes the specified flags in-place.",26,null],[11,"toggle","","Toggles the specified flags in-place.",26,null],[11,"bitor","","Returns the union of the two sets of flags.",26,null],[11,"bitor_assign","","Adds the set of flags.",26,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,null],[11,"bitxor_assign","","Toggles the set of flags.",26,null],[11,"bitand","","Returns the intersection between the two sets of flags.",26,null],[11,"bitand_assign","","Disables all flags disabled in the set.",26,null],[11,"sub","","Returns the set difference of the two sets of flags.",26,null],[11,"sub_assign","","Disables all flags enabled in the set.",26,null],[11,"not","","Returns the complement of this set of flags.",26,null],[11,"extend","","",26,null],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"sslcontextoptions"}}],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"hash","","",19,null],[11,"eq","","",19,null],[11,"is_dtls","","",19,null],[11,"is_dtlsv1","","",19,null],[11,"is_dtlsv1_2","","",19,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"clone","","",27,null],[11,"partial_cmp","","",27,null],[11,"lt","","",27,null],[11,"le","","",27,null],[11,"gt","","",27,null],[11,"ge","","",27,null],[11,"cmp","","",27,null],[11,"hash","","",27,null],[11,"fmt","","",27,null],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",27,{"inputs":[{"name":"i32"}],"output":{"name":"sslverifymode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,null],[11,"is_all","","Returns `true` if all flags are currently set.",27,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,null],[11,"insert","","Inserts the specified flags in-place.",27,null],[11,"remove","","Removes the specified flags in-place.",27,null],[11,"toggle","","Toggles the specified flags in-place.",27,null],[11,"bitor","","Returns the union of the two sets of flags.",27,null],[11,"bitor_assign","","Adds the set of flags.",27,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,null],[11,"bitxor_assign","","Toggles the set of flags.",27,null],[11,"bitand","","Returns the intersection between the two sets of flags.",27,null],[11,"bitand_assign","","Disables all flags disabled in the set.",27,null],[11,"sub","","Returns the set difference of the two sets of flags.",27,null],[11,"sub_assign","","Disables all flags enabled in the set.",27,null],[11,"not","","Returns the complement of this set of flags.",27,null],[11,"extend","","",27,null],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"sslverifymode"}}],[11,"clone","","",28,null],[11,"fmt","","",28,null],[11,"drop","","",28,null],[11,"new","","Creates a new SSL context.",28,{"inputs":[{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"set_verify","","Configures the certificate verification method for new connections.",28,null],[11,"set_verify_with_data","","Configures the certificate verification method for new connections also\ncarrying supplied data.",28,null],[11,"set_servername_callback","","Configures the server name indication (SNI) callback for new connections",28,null],[11,"set_servername_callback_with_data","","Configures the server name indication (SNI) callback for new connections\ncarrying supplied data",28,null],[11,"set_verify_depth","","Sets verification depth",28,null],[11,"set_read_ahead","","",28,null],[11,"set_tmp_dh","","",28,null],[11,"set_default_verify_paths","","Use the default locations of trusted certificates for verification.",28,null],[11,"set_CA_file","","Specifies the file that contains trusted CA certificates.",28,null],[11,"set_session_id_context","","Set the context identifier for sessions",28,null],[11,"set_certificate_file","","Specifies the file that contains certificate",28,null],[11,"set_certificate_chain_file","","Specifies the file that contains certificate chain",28,null],[11,"set_certificate","","Specifies the certificate",28,null],[11,"add_extra_chain_cert","","Adds a certificate to the certificate chain presented together with the\ncertificate specified using set_certificate()",28,null],[11,"set_private_key_file","","Specifies the file that contains private key",28,null],[11,"set_private_key","","Specifies the private key",28,null],[11,"check_private_key","","Check consistency of private key and certificate",28,null],[11,"set_cipher_list","","",28,null],[11,"set_options","","",28,null],[11,"get_options","","",28,null],[11,"clear_options","","",28,null],[11,"name","","Returns the name of cipher.",29,null],[11,"version","","Returns the SSL/TLS protocol version that first defined the cipher.",29,null],[11,"bits","","Returns the number of bits used for the cipher.",29,null],[11,"description","","Returns a textual description of the cipher used",29,null],[11,"fmt","","",30,null],[11,"drop","","",30,null],[11,"clone","","# Deprecated",30,null],[11,"new","","",30,{"inputs":[{"name":"sslcontext"}],"output":{"name":"result"}}],[11,"set_verify","","Sets the verification mode to be used during the handshake process.",30,null],[11,"set_verify_callback","","Sets the certificate verification callback to be used during the\nhandshake process.",30,null],[11,"get_current_cipher","","",30,null],[11,"state_string","","",30,null],[11,"state_string_long","","",30,null],[11,"set_hostname","","Sets the host name to be used with SNI (Server Name Indication).",30,null],[11,"peer_certificate","","Returns the certificate of the peer, if present.",30,null],[11,"version","","Returns the name of the protocol used for the connection, e.g. &quot;TLSv1.2&quot;, &quot;SSLv3&quot;, etc.",30,null],[11,"pending","","Returns the number of bytes remaining in the currently processed TLS\nrecord.",30,null],[11,"compression","","Returns the compression currently in use.",30,null],[11,"get_ssl_method","","",30,null],[11,"get_servername","","Returns the server&#39;s name for the current connection",30,null],[11,"set_ssl_context","","change the context corresponding to the current connection",30,null],[11,"get_ssl_context","","obtain the context corresponding to the current connection",30,null],[11,"clone","","",31,null],[11,"fmt","","",31,null],[11,"as_raw_fd","","",31,null],[11,"connect","","Creates an SSL/TLS client operating over the provided stream.",31,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"accept","","Creates an SSL/TLS server operating over the provided stream.",31,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"connect_generic","","### Deprecated",31,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"accept_generic","","### Deprecated",31,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"ssl_read","","Like `read`, but returns an `ssl::Error` rather than an `io::Error`.",31,null],[11,"ssl_write","","Like `write`, but returns an `ssl::Error` rather than an `io::Error`.",31,null],[11,"get_ref","","Returns a reference to the underlying stream.",31,null],[11,"get_mut","","Returns a mutable reference to the underlying stream.",31,null],[11,"ssl","","Returns the OpenSSL `Ssl` object associated with this stream.",31,null],[11,"try_clone","","# Deprecated",31,null],[11,"read","","",31,null],[11,"write","","",31,null],[11,"flush","","",31,null],[11,"into_ssl","","",30,null],[11,"fmt","","",20,null],[11,"read","","",20,null],[11,"write","","",20,null],[11,"flush","","",20,null],[11,"get_ref","","Returns a reference to the underlying stream.",20,null],[11,"get_mut","","Returns a mutable reference to the underlying stream.",20,null],[11,"try_clone","","Like `TcpStream::try_clone`.",20,null],[11,"clone","","",32,null],[11,"as_raw_fd","","",32,null],[11,"try_clone","","",32,null],[11,"get_ref","","Returns a reference to the underlying stream.",32,null],[11,"get_mut","","Returns a mutable reference to the underlying stream.",32,null],[11,"ssl","","Returns a reference to the Ssl.",32,null],[11,"connect","","Create a new nonblocking client ssl connection on wrapped `stream`.",32,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"accept","","Create a new nonblocking server ssl connection on wrapped `stream`.",32,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"read","","Read bytes from the SSL stream into `buf`.",32,null],[11,"write","","Write bytes from `buf` to the SSL stream.",32,null],[0,"x509","openssl","",null,null],[3,"SslString","openssl::x509","",null,null],[3,"X509StoreContext","","",null,null],[3,"X509Generator","","Generator of private key/certificate pairs",null,null],[3,"X509","","A public key certificate",null,null],[3,"X509Name","","",null,null],[3,"X509NameEntry","","",null,null],[3,"X509Req","","A certificate signing request",null,null],[3,"GeneralNames","","A collection of OpenSSL `GENERAL_NAME`s.",null,null],[3,"GeneralNamesIter","","An iterator over OpenSSL `GENERAL_NAME`s.",null,null],[3,"GeneralName","","An OpenSSL `GENERAL_NAME`.",null,null],[4,"X509FileType","","",null,null],[13,"PEM","","",33,null],[13,"ASN1","","",33,null],[13,"Default","","",33,null],[4,"X509ValidationError","","",null,null],[13,"X509UnableToGetIssuerCert","","",34,null],[13,"X509UnableToGetCrl","","",34,null],[13,"X509UnableToDecryptCertSignature","","",34,null],[13,"X509UnableToDecryptCrlSignature","","",34,null],[13,"X509UnableToDecodeIssuerPublicKey","","",34,null],[13,"X509CertSignatureFailure","","",34,null],[13,"X509CrlSignatureFailure","","",34,null],[13,"X509CertNotYetValid","","",34,null],[13,"X509CertHasExpired","","",34,null],[13,"X509CrlNotYetValid","","",34,null],[13,"X509CrlHasExpired","","",34,null],[13,"X509ErrorInCertNotBeforeField","","",34,null],[13,"X509ErrorInCertNotAfterField","","",34,null],[13,"X509ErrorInCrlLastUpdateField","","",34,null],[13,"X509ErrorInCrlNextUpdateField","","",34,null],[13,"X509OutOfMem","","",34,null],[13,"X509DepthZeroSelfSignedCert","","",34,null],[13,"X509SelfSignedCertInChain","","",34,null],[13,"X509UnableToGetIssuerCertLocally","","",34,null],[13,"X509UnableToVerifyLeafSignature","","",34,null],[13,"X509CertChainTooLong","","",34,null],[13,"X509CertRevoked","","",34,null],[13,"X509InvalidCA","","",34,null],[13,"X509PathLengthExceeded","","",34,null],[13,"X509InvalidPurpose","","",34,null],[13,"X509CertUntrusted","","",34,null],[13,"X509CertRejected","","",34,null],[13,"X509SubjectIssuerMismatch","","",34,null],[13,"X509AkidSkidMismatch","","",34,null],[13,"X509AkidIssuerSerialMismatch","","",34,null],[13,"X509KeyusageNoCertsign","","",34,null],[13,"X509UnableToGetCrlIssuer","","",34,null],[13,"X509UnhandledCriticalExtension","","",34,null],[13,"X509KeyusageNoCrlSign","","",34,null],[13,"X509UnhandledCriticalCrlExtension","","",34,null],[13,"X509InvalidNonCA","","",34,null],[13,"X509ProxyPathLengthExceeded","","",34,null],[13,"X509KeyusageNoDigitalSignature","","",34,null],[13,"X509ProxyCertificatesNotAllowed","","",34,null],[13,"X509InvalidExtension","","",34,null],[13,"X509InavlidPolicyExtension","","",34,null],[13,"X509NoExplicitPolicy","","",34,null],[13,"X509DifferentCrlScope","","",34,null],[13,"X509UnsupportedExtensionFeature","","",34,null],[13,"X509UnnestedResource","","",34,null],[13,"X509PermittedVolation","","",34,null],[13,"X509ExcludedViolation","","",34,null],[13,"X509SubtreeMinmax","","",34,null],[13,"X509UnsupportedConstraintType","","",34,null],[13,"X509UnsupportedConstraintSyntax","","",34,null],[13,"X509UnsupportedNameSyntax","","",34,null],[13,"X509CrlPathValidationError","","",34,null],[13,"X509ApplicationVerification","","",34,null],[13,"X509UnknownError","","",34,null],[0,"extension","","",null,null],[4,"ExtensionType","openssl::x509::extension","Type-only version of the `Extension` enum.",null,null],[13,"KeyUsage","","",35,null],[13,"ExtKeyUsage","","",35,null],[13,"SubjectAltName","","",35,null],[13,"IssuerAltName","","",35,null],[13,"OtherNid","","",35,null],[13,"OtherStr","","",35,null],[4,"Extension","","A X.509 v3 certificate extension.",null,null],[13,"KeyUsage","","The purposes of the key contained in the certificate",36,null],[13,"ExtKeyUsage","","The extended purposes of the key contained in the certificate",36,null],[13,"SubjectAltName","","Subject Alternative Names",36,null],[13,"IssuerAltName","","Issuer Alternative Names",36,null],[13,"OtherNid","","Arbitrary extensions by NID. See `man x509v3_config` for value syntax.",36,null],[13,"OtherStr","","Arbitrary extensions by OID string. See `man ASN1_generate_nconf` for value syntax.",36,null],[4,"KeyUsageOption","","",null,null],[13,"DigitalSignature","","",37,null],[13,"NonRepudiation","","",37,null],[13,"KeyEncipherment","","",37,null],[13,"DataEncipherment","","",37,null],[13,"KeyAgreement","","",37,null],[13,"KeyCertSign","","",37,null],[13,"CRLSign","","",37,null],[13,"EncipherOnly","","",37,null],[13,"DecipherOnly","","",37,null],[4,"ExtKeyUsageOption","","",null,null],[13,"ServerAuth","","",38,null],[13,"ClientAuth","","",38,null],[13,"CodeSigning","","",38,null],[13,"EmailProtection","","",38,null],[13,"TimeStamping","","",38,null],[13,"MsCodeInd","","",38,null],[13,"MsCodeCom","","",38,null],[13,"MsCtlSign","","",38,null],[13,"MsSgc","","",38,null],[13,"MsEfs","","",38,null],[13,"NsSgc","","",38,null],[13,"Other","","An arbitrary key usage by OID.",38,null],[4,"AltNameOption","","",null,null],[13,"Other","","The value is specified as OID;content. See `man ASN1_generate_nconf` for more information on the content syntax.",39,null],[13,"Email","","",39,null],[13,"DNS","","",39,null],[13,"Directory","","",39,null],[13,"URI","","",39,null],[13,"IPAddress","","",39,null],[13,"RegisteredID","","",39,null],[11,"clone","","",35,null],[11,"hash","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"clone","","",36,null],[11,"get_type","","",36,null],[11,"get_nid","","",35,null],[11,"get_name","","",35,null],[11,"to_string","","",36,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"clone","","",38,null],[11,"fmt","","",38,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[11,"drop","openssl::x509","",40,null],[11,"deref","","",40,null],[11,"fmt","","",40,null],[11,"fmt","","",40,null],[11,"clone","","",33,null],[11,"new","","",41,null],[11,"get_error","","",41,null],[11,"get_current_cert","","",41,null],[11,"error_depth","","",41,null],[11,"new","","Creates a new generator with the following defaults:",42,{"inputs":[],"output":{"name":"x509generator"}}],[11,"set_bitlength","","Sets desired bit length",42,null],[11,"set_valid_period","","Sets certificate validity period in days since today",42,null],[11,"add_name","","Add attribute to the name of the certificate",42,null],[11,"add_names","","Add multiple attributes to the name of the certificate",42,null],[11,"add_extension","","Add an extension to a certificate",42,null],[11,"add_extensions","","Add multiple extensions to a certificate",42,null],[11,"set_sign_hash","","",42,null],[11,"generate","","Generates a private key and a self-signed certificate and returns them",42,null],[11,"sign","","Sets the certificate public-key, then self-sign and return it\nNote: That the bit-length of the private key is used (set_bitlength is ignored)",42,null],[11,"request","","Obtain a certificate signing request (CSR)",42,null],[11,"new","","Creates new from handle with desired ownership.",43,null],[11,"new_in_ctx","","Creates a new certificate from context. Doesn&#39;t take ownership\nof handle.",43,null],[11,"from_pem","","Reads certificate from PEM, takes ownership of handle",43,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"get_handle","","",43,null],[11,"subject_name","","",43,null],[11,"subject_alt_names","","Returns this certificate&#39;s SAN entries, if they exist.",43,null],[11,"public_key","","",43,null],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",43,null],[11,"write_pem","","Writes certificate as PEM",43,null],[11,"clone","","",43,null],[11,"drop","","",43,null],[11,"text_by_nid","","",44,null],[11,"new","","Creates new from handle",45,null],[11,"from_pem","","Reads CSR from PEM",45,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"write_pem","","Writes CSR as PEM",45,null],[11,"drop","","",45,null],[11,"clone","","",34,null],[11,"len","","Returns the number of `GeneralName`s in this structure.",46,null],[11,"get","","Returns the specified `GeneralName`.",46,null],[11,"iter","","Returns an iterator over the `GeneralName`s in this structure.",46,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"dnsname","","Returns the contents of this `GeneralName` if it is a `dNSName`.",48,null],[11,"ipaddress","","Returns the contents of this `GeneralName` if it is an `iPAddress`.",48,null],[0,"nid","openssl","",null,null],[4,"Nid","openssl::nid","",null,null],[13,"Undefined","","",49,null],[13,"Rsadsi","","",49,null],[13,"Pkcs","","",49,null],[13,"MD2","","",49,null],[13,"MD4","","",49,null],[13,"MD5","","",49,null],[13,"RC4","","",49,null],[13,"RsaEncryption","","",49,null],[13,"RSA_MD2","","",49,null],[13,"RSA_MD5","","",49,null],[13,"PBE_MD2_DES","","",49,null],[13,"X500","","",49,null],[13,"x509","","",49,null],[13,"CN","","",49,null],[13,"C","","",49,null],[13,"L","","",49,null],[13,"ST","","",49,null],[13,"O","","",49,null],[13,"OU","","",49,null],[13,"RSA","","",49,null],[13,"Pkcs7","","",49,null],[13,"Pkcs7_data","","",49,null],[13,"Pkcs7_signedData","","",49,null],[13,"Pkcs7_envelopedData","","",49,null],[13,"Pkcs7_signedAndEnvelopedData","","",49,null],[13,"Pkcs7_digestData","","",49,null],[13,"Pkcs7_encryptedData","","",49,null],[13,"Pkcs3","","",49,null],[13,"DhKeyAgreement","","",49,null],[13,"DES_ECB","","",49,null],[13,"DES_CFB","","",49,null],[13,"DES_CBC","","",49,null],[13,"DES_EDE","","",49,null],[13,"DES_EDE3","","",49,null],[13,"IDEA_CBC","","",49,null],[13,"IDEA_CFB","","",49,null],[13,"IDEA_ECB","","",49,null],[13,"RC2_CBC","","",49,null],[13,"RC2_ECB","","",49,null],[13,"RC2_CFB","","",49,null],[13,"RC2_OFB","","",49,null],[13,"SHA","","",49,null],[13,"RSA_SHA","","",49,null],[13,"DES_EDE_CBC","","",49,null],[13,"DES_EDE3_CBC","","",49,null],[13,"DES_OFB","","",49,null],[13,"IDEA_OFB","","",49,null],[13,"Pkcs9","","",49,null],[13,"Email","","",49,null],[13,"UnstructuredName","","",49,null],[13,"ContentType","","",49,null],[13,"MessageDigest","","",49,null],[13,"SigningTime","","",49,null],[13,"CounterSignature","","",49,null],[13,"ChallengePassword","","",49,null],[13,"UnstructuredAddress","","",49,null],[13,"ExtendedCertificateAttributes","","",49,null],[13,"Netscape","","",49,null],[13,"NetscapeCertExtention","","",49,null],[13,"NetscapeDatatype","","",49,null],[13,"DES_EDE_CFB64","","",49,null],[13,"DES_EDE3_CFB64","","",49,null],[13,"DES_EDE_OFB64","","",49,null],[13,"DES_EDE3_OFB64","","",49,null],[13,"SHA1","","",49,null],[13,"RSA_SHA1","","",49,null],[13,"DSA_SHA","","",49,null],[13,"DSA_OLD","","",49,null],[13,"PBE_SHA1_RC2_64","","",49,null],[13,"PBKDF2","","",49,null],[13,"DSA_SHA1_OLD","","",49,null],[13,"NetscapeCertType","","",49,null],[13,"NetscapeBaseUrl","","",49,null],[13,"NetscapeRevocationUrl","","",49,null],[13,"NetscapeCARevocationUrl","","",49,null],[13,"NetscapeRenewalUrl","","",49,null],[13,"NetscapeCAPolicyUrl","","",49,null],[13,"NetscapeSSLServerName","","",49,null],[13,"NetscapeComment","","",49,null],[13,"NetscapeCertSequence","","",49,null],[13,"DESX_CBC","","",49,null],[13,"ID_CE","","",49,null],[13,"SubjectKeyIdentifier","","",49,null],[13,"KeyUsage","","",49,null],[13,"PrivateKeyUsagePeriod","","",49,null],[13,"SubjectAltName","","",49,null],[13,"IssuerAltName","","",49,null],[13,"BasicConstraints","","",49,null],[13,"CrlNumber","","",49,null],[13,"CertificatePolicies","","",49,null],[13,"AuthorityKeyIdentifier","","",49,null],[13,"BF_CBC","","",49,null],[13,"BF_ECB","","",49,null],[13,"BF_CFB","","",49,null],[13,"BF_OFB","","",49,null],[13,"MDC2","","",49,null],[13,"RSA_MDC2","","",49,null],[13,"RC4_40","","",49,null],[13,"RC2_40_CBC","","",49,null],[13,"G","","",49,null],[13,"S","","",49,null],[13,"I","","",49,null],[13,"UID","","uniqueIdentifier",49,null],[13,"CrlDistributionPoints","","",49,null],[13,"RSA_NP_MD5","","",49,null],[13,"SN","","",49,null],[13,"T","","",49,null],[13,"D","","",49,null],[13,"CAST5_CBC","","",49,null],[13,"CAST5_ECB","","",49,null],[13,"CAST5_CFB","","",49,null],[13,"CAST5_OFB","","",49,null],[13,"PbeWithMD5AndCast5CBC","","",49,null],[13,"DSA_SHA1","","",49,null],[13,"MD5_SHA1","","",49,null],[13,"RSA_SHA1_2","","",49,null],[13,"DSA","","",49,null],[13,"RIPEMD160","","",49,null],[13,"RSA_RIPEMD160","","",49,null],[13,"RC5_CBC","","",49,null],[13,"RC5_ECB","","",49,null],[13,"RC5_CFB","","",49,null],[13,"RC5_OFB","","",49,null],[13,"RLE","","",49,null],[13,"ZLIB","","",49,null],[13,"ExtendedKeyUsage","","",49,null],[13,"PKIX","","",49,null],[13,"ID_KP","","",49,null],[13,"ServerAuth","","",49,null],[13,"ClientAuth","","",49,null],[13,"CodeSigning","","",49,null],[13,"EmailProtection","","",49,null],[13,"TimeStamping","","",49,null],[13,"MsCodeInd","","",49,null],[13,"MsCodeCom","","",49,null],[13,"MsCtlSigh","","",49,null],[13,"MsSGC","","",49,null],[13,"MsEFS","","",49,null],[13,"NsSGC","","",49,null],[13,"DeltaCRL","","",49,null],[13,"CRLReason","","",49,null],[13,"InvalidityDate","","",49,null],[13,"SXNetID","","",49,null],[13,"PBE_SHA1_RC4_128","","",49,null],[13,"PBE_SHA1_RC4_40","","",49,null],[13,"PBE_SHA1_3DES","","",49,null],[13,"PBE_SHA1_2DES","","",49,null],[13,"PBE_SHA1_RC2_128","","",49,null],[13,"PBE_SHA1_RC2_40","","",49,null],[13,"KeyBag","","",49,null],[13,"Pkcs8ShroudedKeyBag","","",49,null],[13,"CertBag","","",49,null],[13,"CrlBag","","",49,null],[13,"SecretBag","","",49,null],[13,"SafeContentsBag","","",49,null],[13,"FriendlyName","","",49,null],[13,"LocalKeyID","","",49,null],[13,"X509Certificate","","",49,null],[13,"SdsiCertificate","","",49,null],[13,"X509Crl","","",49,null],[13,"PBES2","","",49,null],[13,"PBMAC1","","",49,null],[13,"HmacWithSha1","","",49,null],[13,"ID_QT_CPS","","",49,null],[13,"ID_QT_UNOTICE","","",49,null],[13,"RC2_64_CBC","","",49,null],[13,"SMIMECaps","","",49,null],[13,"PBE_MD2_RC2_64","","",49,null],[13,"PBE_MD5_RC2_64","","",49,null],[13,"PBE_SHA1_DES","","",49,null],[13,"MicrosoftExtensionRequest","","",49,null],[13,"ExtensionRequest","","",49,null],[13,"Name","","",49,null],[13,"DnQualifier","","",49,null],[13,"IdPe","","",49,null],[13,"IdAd","","",49,null],[13,"AuthorityInfoAccess","","",49,null],[13,"OCSP","","",49,null],[13,"CaIssuers","","",49,null],[13,"OCSPSigning","","",49,null],[13,"UserId","","Shown as UID in cert subject",49,null],[13,"SHA256","","",49,null],[13,"SHA384","","",49,null],[13,"SHA512","","",49,null],[13,"SHA224","","",49,null],[11,"clone","","",49,null],[11,"hash","","",49,null],[11,"eq","","",49,null],[0,"version","openssl","",null,null],[5,"number","openssl::version","OPENSSL_VERSION_NUMBER is a numeric release version identifier:",null,{"inputs":[],"output":{"name":"i64"}}],[5,"version","","The text variant of the version number and the release date. For example, &quot;OpenSSL 0.9.5a 1 Apr 2000&quot;.",null,{"inputs":[],"output":{"name":"str"}}],[5,"c_flags","","The compiler flags set for the compilation process in the form &quot;compiler: ...&quot; if available or\n&quot;compiler: information not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"built_on","","The date of the build process in the form &quot;built on: ...&quot; if available or &quot;built on: date not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"platform","","The &quot;Configure&quot; target of the library build in the form &quot;platform: ...&quot; if available or &quot;platform: information not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"dir","","The &quot;OPENSSLDIR&quot; setting of the library build in the form &quot;OPENSSLDIR: &quot;...&quot;&quot; if available or &quot;OPENSSLDIR: N/A&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}]],"paths":[[3,"Asn1Time"],[4,"RNGProperty"],[3,"BigNum"],[3,"MemBio"],[4,"Type"],[3,"Hasher"],[3,"HMAC"],[3,"KeyIvPair"],[4,"Parts"],[4,"Role"],[4,"EncryptionPadding"],[3,"PKey"],[4,"Mode"],[4,"Type"],[3,"Crypter"],[3,"RSA"],[3,"DH"],[3,"CipherBits"],[4,"Error"],[4,"SslMethod"],[4,"MaybeSslStream"],[4,"SslError"],[4,"NonblockingSslError"],[4,"OpensslError"],[3,"OpenSslError"],[8,"IntoSsl"],[3,"SslContextOptions"],[3,"SslVerifyMode"],[3,"SslContext"],[3,"SslCipher"],[3,"Ssl"],[3,"SslStream"],[3,"NonblockingSslStream"],[4,"X509FileType"],[4,"X509ValidationError"],[4,"ExtensionType"],[4,"Extension"],[4,"KeyUsageOption"],[4,"ExtKeyUsageOption"],[4,"AltNameOption"],[3,"SslString"],[3,"X509StoreContext"],[3,"X509Generator"],[3,"X509"],[3,"X509Name"],[3,"X509Req"],[3,"GeneralNames"],[3,"GeneralNamesIter"],[3,"GeneralName"],[4,"Nid"]]};
searchIndex["serde"] = {"doc":"Serde Serialization Framework","items":[[0,"bytes","serde","Helper module to enable serializing bytes more efficiently",null,null],[3,"ByteBuf","serde::bytes","`ByteBuf` wraps a `Vec&lt;u8&gt;` and serializes as a byte array.",null,null],[3,"ByteBufVisitor","","This type implements the `serde::de::Visitor` trait for a `ByteBuf`.",null,null],[3,"Bytes","","`Bytes` wraps a `&amp;[u8]` in order to serialize into a byte array.",null,null],[11,"clone","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"bytebuf"}}],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"new","","Construct a new, empty `ByteBuf`.",0,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Construct a new, empty `ByteBuf` with the specified capacity.",0,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from","","Wrap existing bytes in a `ByteBuf`.",0,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",0,null],[11,"into","","",0,null],[11,"from","","",0,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"as_ref","","",0,null],[11,"as_ref","","",0,null],[11,"as_mut","","",0,null],[11,"as_mut","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"serialize","","",0,null],[11,"visit_unit","","",1,null],[11,"visit_seq","","",1,null],[11,"visit_bytes","","",1,null],[11,"visit_byte_buf","","",1,null],[11,"deserialize","","",0,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",2,null],[11,"hash","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"cmp","","",2,null],[11,"new","","Wrap an existing `&amp;[u8]`.",2,null],[11,"fmt","","",2,null],[11,"from","","",2,null],[11,"from","","",2,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"into","","",2,null],[11,"deref","","",2,null],[11,"serialize","","",2,null],[0,"de","serde","Generic deserialization framework.",null,null],[4,"Type","serde::de","`Type` represents all the primitive types that can be deserialized. This is used by\n`Error::invalid_type`.",null,null],[13,"Bool","","Represents a `bool` type.",3,null],[13,"Usize","","Represents a `usize` type.",3,null],[13,"U8","","Represents a `u8` type.",3,null],[13,"U16","","Represents a `u16` type.",3,null],[13,"U32","","Represents a `u32` type.",3,null],[13,"U64","","Represents a `u64` type.",3,null],[13,"Isize","","Represents a `isize` type.",3,null],[13,"I8","","Represents a `i8` type.",3,null],[13,"I16","","Represents a `i16` type.",3,null],[13,"I32","","Represents a `i32` type.",3,null],[13,"I64","","Represents a `i64` type.",3,null],[13,"F32","","Represents a `f32` type.",3,null],[13,"F64","","Represents a `f64` type.",3,null],[13,"Char","","Represents a `char` type.",3,null],[13,"Str","","Represents a `&amp;str` type.",3,null],[13,"String","","Represents a `String` type.",3,null],[13,"Unit","","Represents a `()` type.",3,null],[13,"Option","","Represents an `Option&lt;T&gt;` type.",3,null],[13,"Seq","","Represents a sequence type.",3,null],[13,"Map","","Represents a map type.",3,null],[13,"UnitStruct","","Represents a unit struct type.",3,null],[13,"NewtypeStruct","","Represents a newtype type.",3,null],[13,"TupleStruct","","Represents a tuple struct type.",3,null],[13,"Struct","","Represents a struct type.",3,null],[13,"FieldName","","Represents a struct field name.",3,null],[13,"Tuple","","Represents a tuple type.",3,null],[13,"Enum","","Represents an `enum` type.",3,null],[13,"VariantName","","Represents an enum variant name.",3,null],[13,"StructVariant","","Represents a struct variant.",3,null],[13,"TupleVariant","","Represents a tuple variant.",3,null],[13,"UnitVariant","","Represents a unit variant.",3,null],[13,"Bytes","","Represents a `&amp;[u8]` type.",3,null],[0,"impls","","This module contains `Deserialize` and `Visitor` implementations.",null,null],[3,"UnitVisitor","serde::de::impls","A visitor that produces a `()`.",null,null],[3,"BoolVisitor","","A visitor that produces a `bool`.",null,null],[3,"PhantomDataVisitor","","A visitor that produces a `PhantomData`.",null,null],[3,"BinaryHeapVisitor","","A visitor that produces a sequence.",null,null],[3,"BTreeSetVisitor","","A visitor that produces a sequence.",null,null],[3,"LinkedListVisitor","","A visitor that produces a sequence.",null,null],[3,"HashSetVisitor","","A visitor that produces a sequence.",null,null],[3,"VecVisitor","","A visitor that produces a sequence.",null,null],[3,"VecDequeVisitor","","A visitor that produces a sequence.",null,null],[3,"TupleVisitor1","","Construct a tuple visitor.",null,null],[3,"TupleVisitor2","","Construct a tuple visitor.",null,null],[3,"TupleVisitor3","","Construct a tuple visitor.",null,null],[3,"TupleVisitor4","","Construct a tuple visitor.",null,null],[3,"TupleVisitor5","","Construct a tuple visitor.",null,null],[3,"TupleVisitor6","","Construct a tuple visitor.",null,null],[3,"TupleVisitor7","","Construct a tuple visitor.",null,null],[3,"TupleVisitor8","","Construct a tuple visitor.",null,null],[3,"TupleVisitor9","","Construct a tuple visitor.",null,null],[3,"TupleVisitor10","","Construct a tuple visitor.",null,null],[3,"TupleVisitor11","","Construct a tuple visitor.",null,null],[3,"TupleVisitor12","","Construct a tuple visitor.",null,null],[3,"TupleVisitor13","","Construct a tuple visitor.",null,null],[3,"TupleVisitor14","","Construct a tuple visitor.",null,null],[3,"TupleVisitor15","","Construct a tuple visitor.",null,null],[3,"TupleVisitor16","","Construct a tuple visitor.",null,null],[3,"BTreeMapVisitor","","A visitor that produces a map.",null,null],[3,"HashMapVisitor","","A visitor that produces a map.",null,null],[3,"IgnoredAny","","A target for deserializers that want to ignore data. Implements\nDeserialize and silently eats data given to it.",null,null],[11,"visit_unit","","",4,null],[11,"visit_seq","","",4,null],[11,"visit_bool","","",5,null],[11,"visit_str","","",5,null],[11,"visit_unit","","",6,null],[11,"new","","Construct a new sequence visitor.",7,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",7,null],[11,"visit_seq","","",7,null],[11,"new","","Construct a new sequence visitor.",8,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",8,null],[11,"visit_seq","","",8,null],[11,"new","","Construct a new sequence visitor.",9,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",9,null],[11,"visit_seq","","",9,null],[11,"new","","Construct a new sequence visitor.",10,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",10,null],[11,"visit_seq","","",10,null],[11,"new","","Construct a new sequence visitor.",11,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",11,null],[11,"visit_seq","","",11,null],[11,"new","","Construct a new sequence visitor.",12,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",12,null],[11,"visit_seq","","",12,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",13,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",13,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",14,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",14,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",15,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",15,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",16,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",16,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",17,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",17,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",18,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",18,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",19,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",19,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",20,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",20,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",21,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",21,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",22,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",22,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",23,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",23,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",24,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",24,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",25,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",25,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",26,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",26,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",27,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",27,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",28,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",28,null],[11,"new","","Construct a `MapVisitor*&lt;T&gt;`.",29,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",29,null],[11,"visit_map","","",29,null],[11,"new","","Construct a `MapVisitor*&lt;T&gt;`.",30,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",30,null],[11,"visit_map","","",30,null],[11,"deserialize","","",31,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"value","serde::de","This module supports deserializing from primitives with the `ValueDeserializer` trait.",null,null],[3,"UnitDeserializer","serde::de::value","A helper deserializer that deserializes a `()`.",null,null],[3,"BoolDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I8Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I16Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"IsizeDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U8Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U16Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"UsizeDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"F32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"F64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"CharDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"StrDeserializer","","A helper deserializer that deserializes a `&amp;str`.",null,null],[3,"StringDeserializer","","A helper deserializer that deserializes a `String`.",null,null],[3,"CowStrDeserializer","","A helper deserializer that deserializes a `String`.",null,null],[3,"SeqDeserializer","","A helper deserializer that deserializes a sequence.",null,null],[3,"SeqVisitorDeserializer","","A helper deserializer that deserializes a sequence using a `SeqVisitor`.",null,null],[3,"MapDeserializer","","A helper deserializer that deserializes a map.",null,null],[3,"MapVisitorDeserializer","","A helper deserializer that deserializes a map using a `MapVisitor`.",null,null],[3,"BytesDeserializer","","A helper deserializer that deserializes a `&amp;[u8]`.",null,null],[3,"ByteBufDeserializer","","A helper deserializer that deserializes a `Vec&lt;u8&gt;`.",null,null],[4,"Error","","This represents all the possible errors that can occur using the `ValueDeserializer`.",null,null],[13,"Custom","","The value had some custom error.",32,null],[13,"InvalidType","","The value had an incorrect type.",32,null],[13,"InvalidLength","","The value had an invalid length.",32,null],[13,"InvalidValue","","The value is invalid and cannot be deserialized.",32,null],[13,"EndOfStream","","EOF while deserializing a value.",32,null],[13,"UnknownVariant","","Unknown variant in enum.",32,null],[13,"UnknownField","","Unknown field in struct.",32,null],[13,"MissingField","","Struct is missing a field.",32,null],[8,"ValueDeserializer","","This trait converts primitive types into a deserializer.",null,null],[16,"Deserializer","","The actual deserializer type.",33,null],[10,"into_deserializer","","Convert this value into a deserializer.",33,null],[11,"clone","","",32,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"custom","","",32,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"end_of_stream","","",32,{"inputs":[],"output":{"name":"self"}}],[11,"invalid_type","","",32,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"invalid_value","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"invalid_length","","",32,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"unknown_variant","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"unknown_field","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"missing_field","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"fmt","","",32,null],[11,"description","","",32,null],[11,"cause","","",32,null],[11,"deserialize_bool","","",34,null],[11,"deserialize_usize","","",34,null],[11,"deserialize_u8","","",34,null],[11,"deserialize_u16","","",34,null],[11,"deserialize_u32","","",34,null],[11,"deserialize_u64","","",34,null],[11,"deserialize_isize","","",34,null],[11,"deserialize_i8","","",34,null],[11,"deserialize_i16","","",34,null],[11,"deserialize_i32","","",34,null],[11,"deserialize_i64","","",34,null],[11,"deserialize_f32","","",34,null],[11,"deserialize_f64","","",34,null],[11,"deserialize_char","","",34,null],[11,"deserialize_str","","",34,null],[11,"deserialize_string","","",34,null],[11,"deserialize_unit","","",34,null],[11,"deserialize_seq","","",34,null],[11,"deserialize_seq_fixed_size","","",34,null],[11,"deserialize_bytes","","",34,null],[11,"deserialize_map","","",34,null],[11,"deserialize_unit_struct","","",34,null],[11,"deserialize_newtype_struct","","",34,null],[11,"deserialize_tuple_struct","","",34,null],[11,"deserialize_struct","","",34,null],[11,"deserialize_struct_field","","",34,null],[11,"deserialize_tuple","","",34,null],[11,"deserialize_enum","","",34,null],[11,"deserialize_ignored_any","","",34,null],[11,"deserialize","","",34,null],[11,"deserialize_option","","",34,null],[11,"deserialize_bool","","",35,null],[11,"deserialize_usize","","",35,null],[11,"deserialize_u8","","",35,null],[11,"deserialize_u16","","",35,null],[11,"deserialize_u32","","",35,null],[11,"deserialize_u64","","",35,null],[11,"deserialize_isize","","",35,null],[11,"deserialize_i8","","",35,null],[11,"deserialize_i16","","",35,null],[11,"deserialize_i32","","",35,null],[11,"deserialize_i64","","",35,null],[11,"deserialize_f32","","",35,null],[11,"deserialize_f64","","",35,null],[11,"deserialize_char","","",35,null],[11,"deserialize_str","","",35,null],[11,"deserialize_string","","",35,null],[11,"deserialize_unit","","",35,null],[11,"deserialize_option","","",35,null],[11,"deserialize_seq","","",35,null],[11,"deserialize_seq_fixed_size","","",35,null],[11,"deserialize_bytes","","",35,null],[11,"deserialize_map","","",35,null],[11,"deserialize_unit_struct","","",35,null],[11,"deserialize_newtype_struct","","",35,null],[11,"deserialize_tuple_struct","","",35,null],[11,"deserialize_struct","","",35,null],[11,"deserialize_struct_field","","",35,null],[11,"deserialize_tuple","","",35,null],[11,"deserialize_enum","","",35,null],[11,"deserialize_ignored_any","","",35,null],[11,"deserialize","","",35,null],[11,"deserialize_bool","","",36,null],[11,"deserialize_usize","","",36,null],[11,"deserialize_u8","","",36,null],[11,"deserialize_u16","","",36,null],[11,"deserialize_u32","","",36,null],[11,"deserialize_u64","","",36,null],[11,"deserialize_isize","","",36,null],[11,"deserialize_i8","","",36,null],[11,"deserialize_i16","","",36,null],[11,"deserialize_i32","","",36,null],[11,"deserialize_i64","","",36,null],[11,"deserialize_f32","","",36,null],[11,"deserialize_f64","","",36,null],[11,"deserialize_char","","",36,null],[11,"deserialize_str","","",36,null],[11,"deserialize_string","","",36,null],[11,"deserialize_unit","","",36,null],[11,"deserialize_option","","",36,null],[11,"deserialize_seq","","",36,null],[11,"deserialize_seq_fixed_size","","",36,null],[11,"deserialize_bytes","","",36,null],[11,"deserialize_map","","",36,null],[11,"deserialize_unit_struct","","",36,null],[11,"deserialize_newtype_struct","","",36,null],[11,"deserialize_tuple_struct","","",36,null],[11,"deserialize_struct","","",36,null],[11,"deserialize_struct_field","","",36,null],[11,"deserialize_tuple","","",36,null],[11,"deserialize_enum","","",36,null],[11,"deserialize_ignored_any","","",36,null],[11,"deserialize","","",36,null],[11,"deserialize_bool","","",37,null],[11,"deserialize_usize","","",37,null],[11,"deserialize_u8","","",37,null],[11,"deserialize_u16","","",37,null],[11,"deserialize_u32","","",37,null],[11,"deserialize_u64","","",37,null],[11,"deserialize_isize","","",37,null],[11,"deserialize_i8","","",37,null],[11,"deserialize_i16","","",37,null],[11,"deserialize_i32","","",37,null],[11,"deserialize_i64","","",37,null],[11,"deserialize_f32","","",37,null],[11,"deserialize_f64","","",37,null],[11,"deserialize_char","","",37,null],[11,"deserialize_str","","",37,null],[11,"deserialize_string","","",37,null],[11,"deserialize_unit","","",37,null],[11,"deserialize_option","","",37,null],[11,"deserialize_seq","","",37,null],[11,"deserialize_seq_fixed_size","","",37,null],[11,"deserialize_bytes","","",37,null],[11,"deserialize_map","","",37,null],[11,"deserialize_unit_struct","","",37,null],[11,"deserialize_newtype_struct","","",37,null],[11,"deserialize_tuple_struct","","",37,null],[11,"deserialize_struct","","",37,null],[11,"deserialize_struct_field","","",37,null],[11,"deserialize_tuple","","",37,null],[11,"deserialize_enum","","",37,null],[11,"deserialize_ignored_any","","",37,null],[11,"deserialize","","",37,null],[11,"deserialize_bool","","",38,null],[11,"deserialize_usize","","",38,null],[11,"deserialize_u8","","",38,null],[11,"deserialize_u16","","",38,null],[11,"deserialize_u32","","",38,null],[11,"deserialize_u64","","",38,null],[11,"deserialize_isize","","",38,null],[11,"deserialize_i8","","",38,null],[11,"deserialize_i16","","",38,null],[11,"deserialize_i32","","",38,null],[11,"deserialize_i64","","",38,null],[11,"deserialize_f32","","",38,null],[11,"deserialize_f64","","",38,null],[11,"deserialize_char","","",38,null],[11,"deserialize_str","","",38,null],[11,"deserialize_string","","",38,null],[11,"deserialize_unit","","",38,null],[11,"deserialize_option","","",38,null],[11,"deserialize_seq","","",38,null],[11,"deserialize_seq_fixed_size","","",38,null],[11,"deserialize_bytes","","",38,null],[11,"deserialize_map","","",38,null],[11,"deserialize_unit_struct","","",38,null],[11,"deserialize_newtype_struct","","",38,null],[11,"deserialize_tuple_struct","","",38,null],[11,"deserialize_struct","","",38,null],[11,"deserialize_struct_field","","",38,null],[11,"deserialize_tuple","","",38,null],[11,"deserialize_enum","","",38,null],[11,"deserialize_ignored_any","","",38,null],[11,"deserialize","","",38,null],[11,"deserialize_bool","","",39,null],[11,"deserialize_usize","","",39,null],[11,"deserialize_u8","","",39,null],[11,"deserialize_u16","","",39,null],[11,"deserialize_u32","","",39,null],[11,"deserialize_u64","","",39,null],[11,"deserialize_isize","","",39,null],[11,"deserialize_i8","","",39,null],[11,"deserialize_i16","","",39,null],[11,"deserialize_i32","","",39,null],[11,"deserialize_i64","","",39,null],[11,"deserialize_f32","","",39,null],[11,"deserialize_f64","","",39,null],[11,"deserialize_char","","",39,null],[11,"deserialize_str","","",39,null],[11,"deserialize_string","","",39,null],[11,"deserialize_unit","","",39,null],[11,"deserialize_option","","",39,null],[11,"deserialize_seq","","",39,null],[11,"deserialize_seq_fixed_size","","",39,null],[11,"deserialize_bytes","","",39,null],[11,"deserialize_map","","",39,null],[11,"deserialize_unit_struct","","",39,null],[11,"deserialize_newtype_struct","","",39,null],[11,"deserialize_tuple_struct","","",39,null],[11,"deserialize_struct","","",39,null],[11,"deserialize_struct_field","","",39,null],[11,"deserialize_tuple","","",39,null],[11,"deserialize_enum","","",39,null],[11,"deserialize_ignored_any","","",39,null],[11,"deserialize","","",39,null],[11,"deserialize_bool","","",40,null],[11,"deserialize_usize","","",40,null],[11,"deserialize_u8","","",40,null],[11,"deserialize_u16","","",40,null],[11,"deserialize_u32","","",40,null],[11,"deserialize_u64","","",40,null],[11,"deserialize_isize","","",40,null],[11,"deserialize_i8","","",40,null],[11,"deserialize_i16","","",40,null],[11,"deserialize_i32","","",40,null],[11,"deserialize_i64","","",40,null],[11,"deserialize_f32","","",40,null],[11,"deserialize_f64","","",40,null],[11,"deserialize_char","","",40,null],[11,"deserialize_str","","",40,null],[11,"deserialize_string","","",40,null],[11,"deserialize_unit","","",40,null],[11,"deserialize_option","","",40,null],[11,"deserialize_seq","","",40,null],[11,"deserialize_seq_fixed_size","","",40,null],[11,"deserialize_bytes","","",40,null],[11,"deserialize_map","","",40,null],[11,"deserialize_unit_struct","","",40,null],[11,"deserialize_newtype_struct","","",40,null],[11,"deserialize_tuple_struct","","",40,null],[11,"deserialize_struct","","",40,null],[11,"deserialize_struct_field","","",40,null],[11,"deserialize_tuple","","",40,null],[11,"deserialize_enum","","",40,null],[11,"deserialize_ignored_any","","",40,null],[11,"deserialize","","",40,null],[11,"deserialize_bool","","",41,null],[11,"deserialize_usize","","",41,null],[11,"deserialize_u8","","",41,null],[11,"deserialize_u16","","",41,null],[11,"deserialize_u32","","",41,null],[11,"deserialize_u64","","",41,null],[11,"deserialize_isize","","",41,null],[11,"deserialize_i8","","",41,null],[11,"deserialize_i16","","",41,null],[11,"deserialize_i32","","",41,null],[11,"deserialize_i64","","",41,null],[11,"deserialize_f32","","",41,null],[11,"deserialize_f64","","",41,null],[11,"deserialize_char","","",41,null],[11,"deserialize_str","","",41,null],[11,"deserialize_string","","",41,null],[11,"deserialize_unit","","",41,null],[11,"deserialize_option","","",41,null],[11,"deserialize_seq","","",41,null],[11,"deserialize_seq_fixed_size","","",41,null],[11,"deserialize_bytes","","",41,null],[11,"deserialize_map","","",41,null],[11,"deserialize_unit_struct","","",41,null],[11,"deserialize_newtype_struct","","",41,null],[11,"deserialize_tuple_struct","","",41,null],[11,"deserialize_struct","","",41,null],[11,"deserialize_struct_field","","",41,null],[11,"deserialize_tuple","","",41,null],[11,"deserialize_enum","","",41,null],[11,"deserialize_ignored_any","","",41,null],[11,"deserialize","","",41,null],[11,"deserialize_bool","","",42,null],[11,"deserialize_usize","","",42,null],[11,"deserialize_u8","","",42,null],[11,"deserialize_u16","","",42,null],[11,"deserialize_u32","","",42,null],[11,"deserialize_u64","","",42,null],[11,"deserialize_isize","","",42,null],[11,"deserialize_i8","","",42,null],[11,"deserialize_i16","","",42,null],[11,"deserialize_i32","","",42,null],[11,"deserialize_i64","","",42,null],[11,"deserialize_f32","","",42,null],[11,"deserialize_f64","","",42,null],[11,"deserialize_char","","",42,null],[11,"deserialize_str","","",42,null],[11,"deserialize_string","","",42,null],[11,"deserialize_unit","","",42,null],[11,"deserialize_option","","",42,null],[11,"deserialize_seq","","",42,null],[11,"deserialize_seq_fixed_size","","",42,null],[11,"deserialize_bytes","","",42,null],[11,"deserialize_map","","",42,null],[11,"deserialize_unit_struct","","",42,null],[11,"deserialize_newtype_struct","","",42,null],[11,"deserialize_tuple_struct","","",42,null],[11,"deserialize_struct","","",42,null],[11,"deserialize_struct_field","","",42,null],[11,"deserialize_tuple","","",42,null],[11,"deserialize_enum","","",42,null],[11,"deserialize_ignored_any","","",42,null],[11,"deserialize","","",42,null],[11,"deserialize_bool","","",43,null],[11,"deserialize_usize","","",43,null],[11,"deserialize_u8","","",43,null],[11,"deserialize_u16","","",43,null],[11,"deserialize_u32","","",43,null],[11,"deserialize_u64","","",43,null],[11,"deserialize_isize","","",43,null],[11,"deserialize_i8","","",43,null],[11,"deserialize_i16","","",43,null],[11,"deserialize_i32","","",43,null],[11,"deserialize_i64","","",43,null],[11,"deserialize_f32","","",43,null],[11,"deserialize_f64","","",43,null],[11,"deserialize_char","","",43,null],[11,"deserialize_str","","",43,null],[11,"deserialize_string","","",43,null],[11,"deserialize_unit","","",43,null],[11,"deserialize_option","","",43,null],[11,"deserialize_seq","","",43,null],[11,"deserialize_seq_fixed_size","","",43,null],[11,"deserialize_bytes","","",43,null],[11,"deserialize_map","","",43,null],[11,"deserialize_unit_struct","","",43,null],[11,"deserialize_newtype_struct","","",43,null],[11,"deserialize_tuple_struct","","",43,null],[11,"deserialize_struct","","",43,null],[11,"deserialize_struct_field","","",43,null],[11,"deserialize_tuple","","",43,null],[11,"deserialize_enum","","",43,null],[11,"deserialize_ignored_any","","",43,null],[11,"deserialize","","",43,null],[11,"deserialize_bool","","",44,null],[11,"deserialize_usize","","",44,null],[11,"deserialize_u8","","",44,null],[11,"deserialize_u16","","",44,null],[11,"deserialize_u32","","",44,null],[11,"deserialize_u64","","",44,null],[11,"deserialize_isize","","",44,null],[11,"deserialize_i8","","",44,null],[11,"deserialize_i16","","",44,null],[11,"deserialize_i32","","",44,null],[11,"deserialize_i64","","",44,null],[11,"deserialize_f32","","",44,null],[11,"deserialize_f64","","",44,null],[11,"deserialize_char","","",44,null],[11,"deserialize_str","","",44,null],[11,"deserialize_string","","",44,null],[11,"deserialize_unit","","",44,null],[11,"deserialize_option","","",44,null],[11,"deserialize_seq","","",44,null],[11,"deserialize_seq_fixed_size","","",44,null],[11,"deserialize_bytes","","",44,null],[11,"deserialize_map","","",44,null],[11,"deserialize_unit_struct","","",44,null],[11,"deserialize_newtype_struct","","",44,null],[11,"deserialize_tuple_struct","","",44,null],[11,"deserialize_struct","","",44,null],[11,"deserialize_struct_field","","",44,null],[11,"deserialize_tuple","","",44,null],[11,"deserialize_enum","","",44,null],[11,"deserialize_ignored_any","","",44,null],[11,"deserialize","","",44,null],[11,"deserialize_bool","","",45,null],[11,"deserialize_usize","","",45,null],[11,"deserialize_u8","","",45,null],[11,"deserialize_u16","","",45,null],[11,"deserialize_u32","","",45,null],[11,"deserialize_u64","","",45,null],[11,"deserialize_isize","","",45,null],[11,"deserialize_i8","","",45,null],[11,"deserialize_i16","","",45,null],[11,"deserialize_i32","","",45,null],[11,"deserialize_i64","","",45,null],[11,"deserialize_f32","","",45,null],[11,"deserialize_f64","","",45,null],[11,"deserialize_char","","",45,null],[11,"deserialize_str","","",45,null],[11,"deserialize_string","","",45,null],[11,"deserialize_unit","","",45,null],[11,"deserialize_option","","",45,null],[11,"deserialize_seq","","",45,null],[11,"deserialize_seq_fixed_size","","",45,null],[11,"deserialize_bytes","","",45,null],[11,"deserialize_map","","",45,null],[11,"deserialize_unit_struct","","",45,null],[11,"deserialize_newtype_struct","","",45,null],[11,"deserialize_tuple_struct","","",45,null],[11,"deserialize_struct","","",45,null],[11,"deserialize_struct_field","","",45,null],[11,"deserialize_tuple","","",45,null],[11,"deserialize_enum","","",45,null],[11,"deserialize_ignored_any","","",45,null],[11,"deserialize","","",45,null],[11,"deserialize_bool","","",46,null],[11,"deserialize_usize","","",46,null],[11,"deserialize_u8","","",46,null],[11,"deserialize_u16","","",46,null],[11,"deserialize_u32","","",46,null],[11,"deserialize_u64","","",46,null],[11,"deserialize_isize","","",46,null],[11,"deserialize_i8","","",46,null],[11,"deserialize_i16","","",46,null],[11,"deserialize_i32","","",46,null],[11,"deserialize_i64","","",46,null],[11,"deserialize_f32","","",46,null],[11,"deserialize_f64","","",46,null],[11,"deserialize_char","","",46,null],[11,"deserialize_str","","",46,null],[11,"deserialize_string","","",46,null],[11,"deserialize_unit","","",46,null],[11,"deserialize_option","","",46,null],[11,"deserialize_seq","","",46,null],[11,"deserialize_seq_fixed_size","","",46,null],[11,"deserialize_bytes","","",46,null],[11,"deserialize_map","","",46,null],[11,"deserialize_unit_struct","","",46,null],[11,"deserialize_newtype_struct","","",46,null],[11,"deserialize_tuple_struct","","",46,null],[11,"deserialize_struct","","",46,null],[11,"deserialize_struct_field","","",46,null],[11,"deserialize_tuple","","",46,null],[11,"deserialize_enum","","",46,null],[11,"deserialize_ignored_any","","",46,null],[11,"deserialize","","",46,null],[11,"deserialize_bool","","",47,null],[11,"deserialize_usize","","",47,null],[11,"deserialize_u8","","",47,null],[11,"deserialize_u16","","",47,null],[11,"deserialize_u32","","",47,null],[11,"deserialize_u64","","",47,null],[11,"deserialize_isize","","",47,null],[11,"deserialize_i8","","",47,null],[11,"deserialize_i16","","",47,null],[11,"deserialize_i32","","",47,null],[11,"deserialize_i64","","",47,null],[11,"deserialize_f32","","",47,null],[11,"deserialize_f64","","",47,null],[11,"deserialize_char","","",47,null],[11,"deserialize_str","","",47,null],[11,"deserialize_string","","",47,null],[11,"deserialize_unit","","",47,null],[11,"deserialize_option","","",47,null],[11,"deserialize_seq","","",47,null],[11,"deserialize_seq_fixed_size","","",47,null],[11,"deserialize_bytes","","",47,null],[11,"deserialize_map","","",47,null],[11,"deserialize_unit_struct","","",47,null],[11,"deserialize_newtype_struct","","",47,null],[11,"deserialize_tuple_struct","","",47,null],[11,"deserialize_struct","","",47,null],[11,"deserialize_struct_field","","",47,null],[11,"deserialize_tuple","","",47,null],[11,"deserialize_enum","","",47,null],[11,"deserialize_ignored_any","","",47,null],[11,"deserialize","","",47,null],[11,"deserialize_bool","","",48,null],[11,"deserialize_usize","","",48,null],[11,"deserialize_u8","","",48,null],[11,"deserialize_u16","","",48,null],[11,"deserialize_u32","","",48,null],[11,"deserialize_u64","","",48,null],[11,"deserialize_isize","","",48,null],[11,"deserialize_i8","","",48,null],[11,"deserialize_i16","","",48,null],[11,"deserialize_i32","","",48,null],[11,"deserialize_i64","","",48,null],[11,"deserialize_f32","","",48,null],[11,"deserialize_f64","","",48,null],[11,"deserialize_char","","",48,null],[11,"deserialize_str","","",48,null],[11,"deserialize_string","","",48,null],[11,"deserialize_unit","","",48,null],[11,"deserialize_option","","",48,null],[11,"deserialize_seq","","",48,null],[11,"deserialize_seq_fixed_size","","",48,null],[11,"deserialize_bytes","","",48,null],[11,"deserialize_map","","",48,null],[11,"deserialize_unit_struct","","",48,null],[11,"deserialize_newtype_struct","","",48,null],[11,"deserialize_tuple_struct","","",48,null],[11,"deserialize_struct","","",48,null],[11,"deserialize_struct_field","","",48,null],[11,"deserialize_tuple","","",48,null],[11,"deserialize_enum","","",48,null],[11,"deserialize_ignored_any","","",48,null],[11,"deserialize","","",48,null],[11,"deserialize","","",49,null],[11,"deserialize_enum","","",49,null],[11,"deserialize_bool","","",49,null],[11,"deserialize_usize","","",49,null],[11,"deserialize_u8","","",49,null],[11,"deserialize_u16","","",49,null],[11,"deserialize_u32","","",49,null],[11,"deserialize_u64","","",49,null],[11,"deserialize_isize","","",49,null],[11,"deserialize_i8","","",49,null],[11,"deserialize_i16","","",49,null],[11,"deserialize_i32","","",49,null],[11,"deserialize_i64","","",49,null],[11,"deserialize_f32","","",49,null],[11,"deserialize_f64","","",49,null],[11,"deserialize_char","","",49,null],[11,"deserialize_str","","",49,null],[11,"deserialize_string","","",49,null],[11,"deserialize_unit","","",49,null],[11,"deserialize_option","","",49,null],[11,"deserialize_seq","","",49,null],[11,"deserialize_seq_fixed_size","","",49,null],[11,"deserialize_bytes","","",49,null],[11,"deserialize_map","","",49,null],[11,"deserialize_unit_struct","","",49,null],[11,"deserialize_newtype_struct","","",49,null],[11,"deserialize_tuple_struct","","",49,null],[11,"deserialize_struct","","",49,null],[11,"deserialize_struct_field","","",49,null],[11,"deserialize_tuple","","",49,null],[11,"deserialize_ignored_any","","",49,null],[11,"visit_variant","","",49,null],[11,"visit_unit","","",49,null],[11,"visit_newtype","","",49,null],[11,"visit_tuple","","",49,null],[11,"visit_struct","","",49,null],[11,"deserialize","","",50,null],[11,"deserialize_enum","","",50,null],[11,"deserialize_bool","","",50,null],[11,"deserialize_usize","","",50,null],[11,"deserialize_u8","","",50,null],[11,"deserialize_u16","","",50,null],[11,"deserialize_u32","","",50,null],[11,"deserialize_u64","","",50,null],[11,"deserialize_isize","","",50,null],[11,"deserialize_i8","","",50,null],[11,"deserialize_i16","","",50,null],[11,"deserialize_i32","","",50,null],[11,"deserialize_i64","","",50,null],[11,"deserialize_f32","","",50,null],[11,"deserialize_f64","","",50,null],[11,"deserialize_char","","",50,null],[11,"deserialize_str","","",50,null],[11,"deserialize_string","","",50,null],[11,"deserialize_unit","","",50,null],[11,"deserialize_option","","",50,null],[11,"deserialize_seq","","",50,null],[11,"deserialize_seq_fixed_size","","",50,null],[11,"deserialize_bytes","","",50,null],[11,"deserialize_map","","",50,null],[11,"deserialize_unit_struct","","",50,null],[11,"deserialize_newtype_struct","","",50,null],[11,"deserialize_tuple_struct","","",50,null],[11,"deserialize_struct","","",50,null],[11,"deserialize_struct_field","","",50,null],[11,"deserialize_tuple","","",50,null],[11,"deserialize_ignored_any","","",50,null],[11,"visit_variant","","",50,null],[11,"visit_unit","","",50,null],[11,"visit_newtype","","",50,null],[11,"visit_tuple","","",50,null],[11,"visit_struct","","",50,null],[11,"deserialize","","",51,null],[11,"deserialize_enum","","",51,null],[11,"deserialize_bool","","",51,null],[11,"deserialize_usize","","",51,null],[11,"deserialize_u8","","",51,null],[11,"deserialize_u16","","",51,null],[11,"deserialize_u32","","",51,null],[11,"deserialize_u64","","",51,null],[11,"deserialize_isize","","",51,null],[11,"deserialize_i8","","",51,null],[11,"deserialize_i16","","",51,null],[11,"deserialize_i32","","",51,null],[11,"deserialize_i64","","",51,null],[11,"deserialize_f32","","",51,null],[11,"deserialize_f64","","",51,null],[11,"deserialize_char","","",51,null],[11,"deserialize_str","","",51,null],[11,"deserialize_string","","",51,null],[11,"deserialize_unit","","",51,null],[11,"deserialize_option","","",51,null],[11,"deserialize_seq","","",51,null],[11,"deserialize_seq_fixed_size","","",51,null],[11,"deserialize_bytes","","",51,null],[11,"deserialize_map","","",51,null],[11,"deserialize_unit_struct","","",51,null],[11,"deserialize_newtype_struct","","",51,null],[11,"deserialize_tuple_struct","","",51,null],[11,"deserialize_struct","","",51,null],[11,"deserialize_struct_field","","",51,null],[11,"deserialize_tuple","","",51,null],[11,"deserialize_ignored_any","","",51,null],[11,"visit_variant","","",51,null],[11,"visit_unit","","",51,null],[11,"visit_newtype","","",51,null],[11,"visit_tuple","","",51,null],[11,"visit_struct","","",51,null],[11,"new","","Construct a new `SeqDeserializer&lt;I&gt;`.",52,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[11,"deserialize","","",52,null],[11,"deserialize_bool","","",52,null],[11,"deserialize_usize","","",52,null],[11,"deserialize_u8","","",52,null],[11,"deserialize_u16","","",52,null],[11,"deserialize_u32","","",52,null],[11,"deserialize_u64","","",52,null],[11,"deserialize_isize","","",52,null],[11,"deserialize_i8","","",52,null],[11,"deserialize_i16","","",52,null],[11,"deserialize_i32","","",52,null],[11,"deserialize_i64","","",52,null],[11,"deserialize_f32","","",52,null],[11,"deserialize_f64","","",52,null],[11,"deserialize_char","","",52,null],[11,"deserialize_str","","",52,null],[11,"deserialize_string","","",52,null],[11,"deserialize_unit","","",52,null],[11,"deserialize_option","","",52,null],[11,"deserialize_seq","","",52,null],[11,"deserialize_seq_fixed_size","","",52,null],[11,"deserialize_bytes","","",52,null],[11,"deserialize_map","","",52,null],[11,"deserialize_unit_struct","","",52,null],[11,"deserialize_newtype_struct","","",52,null],[11,"deserialize_tuple_struct","","",52,null],[11,"deserialize_struct","","",52,null],[11,"deserialize_struct_field","","",52,null],[11,"deserialize_tuple","","",52,null],[11,"deserialize_enum","","",52,null],[11,"deserialize_ignored_any","","",52,null],[11,"visit","","",52,null],[11,"end","","",52,null],[11,"size_hint","","",52,null],[11,"new","","Construct a new `SeqVisitorDeserializer&lt;V_, E&gt;`.",53,{"inputs":[{"name":"v_"}],"output":{"name":"self"}}],[11,"deserialize","","",53,null],[11,"deserialize_bool","","",53,null],[11,"deserialize_usize","","",53,null],[11,"deserialize_u8","","",53,null],[11,"deserialize_u16","","",53,null],[11,"deserialize_u32","","",53,null],[11,"deserialize_u64","","",53,null],[11,"deserialize_isize","","",53,null],[11,"deserialize_i8","","",53,null],[11,"deserialize_i16","","",53,null],[11,"deserialize_i32","","",53,null],[11,"deserialize_i64","","",53,null],[11,"deserialize_f32","","",53,null],[11,"deserialize_f64","","",53,null],[11,"deserialize_char","","",53,null],[11,"deserialize_str","","",53,null],[11,"deserialize_string","","",53,null],[11,"deserialize_unit","","",53,null],[11,"deserialize_option","","",53,null],[11,"deserialize_seq","","",53,null],[11,"deserialize_seq_fixed_size","","",53,null],[11,"deserialize_bytes","","",53,null],[11,"deserialize_map","","",53,null],[11,"deserialize_unit_struct","","",53,null],[11,"deserialize_newtype_struct","","",53,null],[11,"deserialize_tuple_struct","","",53,null],[11,"deserialize_struct","","",53,null],[11,"deserialize_struct_field","","",53,null],[11,"deserialize_tuple","","",53,null],[11,"deserialize_enum","","",53,null],[11,"deserialize_ignored_any","","",53,null],[11,"new","","Construct a new `MapDeserializer&lt;I, K, V, E&gt;` with a specific length.",54,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[11,"unbounded","","Construct a new `MapDeserializer&lt;I, K, V, E&gt;` that is not bounded\nby a specific length and that delegates to `iter` for its size hint.",54,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deserialize","","",54,null],[11,"deserialize_seq","","",54,null],[11,"deserialize_seq_fixed_size","","",54,null],[11,"deserialize_bool","","",54,null],[11,"deserialize_usize","","",54,null],[11,"deserialize_u8","","",54,null],[11,"deserialize_u16","","",54,null],[11,"deserialize_u32","","",54,null],[11,"deserialize_u64","","",54,null],[11,"deserialize_isize","","",54,null],[11,"deserialize_i8","","",54,null],[11,"deserialize_i16","","",54,null],[11,"deserialize_i32","","",54,null],[11,"deserialize_i64","","",54,null],[11,"deserialize_f32","","",54,null],[11,"deserialize_f64","","",54,null],[11,"deserialize_char","","",54,null],[11,"deserialize_str","","",54,null],[11,"deserialize_string","","",54,null],[11,"deserialize_unit","","",54,null],[11,"deserialize_option","","",54,null],[11,"deserialize_bytes","","",54,null],[11,"deserialize_map","","",54,null],[11,"deserialize_unit_struct","","",54,null],[11,"deserialize_newtype_struct","","",54,null],[11,"deserialize_tuple_struct","","",54,null],[11,"deserialize_struct","","",54,null],[11,"deserialize_struct_field","","",54,null],[11,"deserialize_tuple","","",54,null],[11,"deserialize_enum","","",54,null],[11,"deserialize_ignored_any","","",54,null],[11,"visit_key","","",54,null],[11,"visit_value","","",54,null],[11,"end","","",54,null],[11,"size_hint","","",54,null],[11,"visit","","",54,null],[11,"end","","",54,null],[11,"size_hint","","",54,null],[11,"new","","Construct a new `MapVisitorDeserializer&lt;V_, E&gt;`.",55,{"inputs":[{"name":"v_"}],"output":{"name":"self"}}],[11,"deserialize","","",55,null],[11,"deserialize_bool","","",55,null],[11,"deserialize_usize","","",55,null],[11,"deserialize_u8","","",55,null],[11,"deserialize_u16","","",55,null],[11,"deserialize_u32","","",55,null],[11,"deserialize_u64","","",55,null],[11,"deserialize_isize","","",55,null],[11,"deserialize_i8","","",55,null],[11,"deserialize_i16","","",55,null],[11,"deserialize_i32","","",55,null],[11,"deserialize_i64","","",55,null],[11,"deserialize_f32","","",55,null],[11,"deserialize_f64","","",55,null],[11,"deserialize_char","","",55,null],[11,"deserialize_str","","",55,null],[11,"deserialize_string","","",55,null],[11,"deserialize_unit","","",55,null],[11,"deserialize_option","","",55,null],[11,"deserialize_seq","","",55,null],[11,"deserialize_seq_fixed_size","","",55,null],[11,"deserialize_bytes","","",55,null],[11,"deserialize_map","","",55,null],[11,"deserialize_unit_struct","","",55,null],[11,"deserialize_newtype_struct","","",55,null],[11,"deserialize_tuple_struct","","",55,null],[11,"deserialize_struct","","",55,null],[11,"deserialize_struct_field","","",55,null],[11,"deserialize_tuple","","",55,null],[11,"deserialize_enum","","",55,null],[11,"deserialize_ignored_any","","",55,null],[11,"into_deserializer","serde::bytes","",2,null],[11,"deserialize","serde::de::value","",56,null],[11,"deserialize_bool","","",56,null],[11,"deserialize_usize","","",56,null],[11,"deserialize_u8","","",56,null],[11,"deserialize_u16","","",56,null],[11,"deserialize_u32","","",56,null],[11,"deserialize_u64","","",56,null],[11,"deserialize_isize","","",56,null],[11,"deserialize_i8","","",56,null],[11,"deserialize_i16","","",56,null],[11,"deserialize_i32","","",56,null],[11,"deserialize_i64","","",56,null],[11,"deserialize_f32","","",56,null],[11,"deserialize_f64","","",56,null],[11,"deserialize_char","","",56,null],[11,"deserialize_str","","",56,null],[11,"deserialize_string","","",56,null],[11,"deserialize_unit","","",56,null],[11,"deserialize_option","","",56,null],[11,"deserialize_seq","","",56,null],[11,"deserialize_seq_fixed_size","","",56,null],[11,"deserialize_bytes","","",56,null],[11,"deserialize_map","","",56,null],[11,"deserialize_unit_struct","","",56,null],[11,"deserialize_newtype_struct","","",56,null],[11,"deserialize_tuple_struct","","",56,null],[11,"deserialize_struct","","",56,null],[11,"deserialize_struct_field","","",56,null],[11,"deserialize_tuple","","",56,null],[11,"deserialize_enum","","",56,null],[11,"deserialize_ignored_any","","",56,null],[11,"into_deserializer","serde::bytes","",0,null],[11,"deserialize","serde::de::value","",57,null],[11,"deserialize_bool","","",57,null],[11,"deserialize_usize","","",57,null],[11,"deserialize_u8","","",57,null],[11,"deserialize_u16","","",57,null],[11,"deserialize_u32","","",57,null],[11,"deserialize_u64","","",57,null],[11,"deserialize_isize","","",57,null],[11,"deserialize_i8","","",57,null],[11,"deserialize_i16","","",57,null],[11,"deserialize_i32","","",57,null],[11,"deserialize_i64","","",57,null],[11,"deserialize_f32","","",57,null],[11,"deserialize_f64","","",57,null],[11,"deserialize_char","","",57,null],[11,"deserialize_str","","",57,null],[11,"deserialize_string","","",57,null],[11,"deserialize_unit","","",57,null],[11,"deserialize_option","","",57,null],[11,"deserialize_seq","","",57,null],[11,"deserialize_seq_fixed_size","","",57,null],[11,"deserialize_bytes","","",57,null],[11,"deserialize_map","","",57,null],[11,"deserialize_unit_struct","","",57,null],[11,"deserialize_newtype_struct","","",57,null],[11,"deserialize_tuple_struct","","",57,null],[11,"deserialize_struct","","",57,null],[11,"deserialize_struct_field","","",57,null],[11,"deserialize_tuple","","",57,null],[11,"deserialize_enum","","",57,null],[11,"deserialize_ignored_any","","",57,null],[8,"Error","serde::de","`Error` is a trait that allows a `Deserialize` to generically create a\n`Deserializer` error.",null,null],[10,"custom","","Raised when there is general error when deserializing a type.",58,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[10,"end_of_stream","","Raised when a `Deserialize` type unexpectedly hit the end of the stream.",58,{"inputs":[],"output":{"name":"self"}}],[11,"invalid_type","","Raised when a `Deserialize` was passed an incorrect type.",58,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"invalid_value","","Raised when a `Deserialize` was passed an incorrect value.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"invalid_length","","Raised when a fixed sized sequence or map was passed in the wrong amount of arguments.",58,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"unknown_variant","","Raised when a `Deserialize` enum type received an unexpected variant.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"unknown_field","","Raised when a `Deserialize` struct type received an unexpected struct field.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"missing_field","","raised when a `deserialize` struct type did not receive a field.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than one of the\nsame struct field.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[8,"Deserialize","","`Deserialize` represents a type that can be deserialized.",null,null],[10,"deserialize","","Deserialize this value given this `Deserializer`.",59,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Deserializer","","`Deserializer` is a trait that can deserialize values by threading a `Visitor` trait through a\nvalue. It supports two entry point styles which enables different kinds of deserialization.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",60,null],[10,"deserialize","","This method walks a visitor through a value as it is being deserialized.",60,null],[10,"deserialize_bool","","This method hints that the `Deserialize` type is expecting a `bool` value.",60,null],[10,"deserialize_usize","","This method hints that the `Deserialize` type is expecting an `usize` value.\nA reasonable default is to forward to `deserialize_u64`.",60,null],[10,"deserialize_u8","","This method hints that the `Deserialize` type is expecting an `u8` value.\nA reasonable default is to forward to `deserialize_u64`.",60,null],[10,"deserialize_u16","","This method hints that the `Deserialize` type is expecting an `u16` value.\nA reasonable default is to forward to `deserialize_u64`.",60,null],[10,"deserialize_u32","","This method hints that the `Deserialize` type is expecting an `u32` value.\nA reasonable default is to forward to `deserialize_u64`.",60,null],[10,"deserialize_u64","","This method hints that the `Deserialize` type is expecting an `u64` value.",60,null],[10,"deserialize_isize","","This method hints that the `Deserialize` type is expecting an `isize` value.\nA reasonable default is to forward to `deserialize_i64`.",60,null],[10,"deserialize_i8","","This method hints that the `Deserialize` type is expecting an `i8` value.\nA reasonable default is to forward to `deserialize_i64`.",60,null],[10,"deserialize_i16","","This method hints that the `Deserialize` type is expecting an `i16` value.\nA reasonable default is to forward to `deserialize_i64`.",60,null],[10,"deserialize_i32","","This method hints that the `Deserialize` type is expecting an `i32` value.\nA reasonable default is to forward to `deserialize_i64`.",60,null],[10,"deserialize_i64","","This method hints that the `Deserialize` type is expecting an `i64` value.",60,null],[10,"deserialize_f32","","This method hints that the `Deserialize` type is expecting a `f32` value.\nA reasonable default is to forward to `deserialize_f64`.",60,null],[10,"deserialize_f64","","This method hints that the `Deserialize` type is expecting a `f64` value.",60,null],[10,"deserialize_char","","This method hints that the `Deserialize` type is expecting a `char` value.",60,null],[10,"deserialize_str","","This method hints that the `Deserialize` type is expecting a `&amp;str` value.",60,null],[10,"deserialize_string","","This method hints that the `Deserialize` type is expecting a `String` value.",60,null],[10,"deserialize_unit","","This method hints that the `Deserialize` type is expecting an `unit` value.",60,null],[10,"deserialize_option","","This method hints that the `Deserialize` type is expecting an `Option` value. This allows\ndeserializers that encode an optional value as a nullable value to convert the null value\ninto a `None`, and a regular value as `Some(value)`.",60,null],[10,"deserialize_seq","","This method hints that the `Deserialize` type is expecting a sequence value. This allows\ndeserializers to parse sequences that aren&#39;t tagged as sequences.",60,null],[10,"deserialize_seq_fixed_size","","This method hints that the `Deserialize` type is expecting a fixed size array. This allows\ndeserializers to parse arrays that aren&#39;t tagged as arrays.",60,null],[10,"deserialize_bytes","","This method hints that the `Deserialize` type is expecting a `Vec&lt;u8&gt;`. This allows\ndeserializers that provide a custom byte vector serialization to properly deserialize the\ntype.",60,null],[10,"deserialize_map","","This method hints that the `Deserialize` type is expecting a map of values. This allows\ndeserializers to parse sequences that aren&#39;t tagged as maps.",60,null],[10,"deserialize_unit_struct","","This method hints that the `Deserialize` type is expecting a unit struct. This allows\ndeserializers to a unit struct that aren&#39;t tagged as a unit struct.",60,null],[10,"deserialize_newtype_struct","","This method hints that the `Deserialize` type is expecting a newtype struct. This allows\ndeserializers to a newtype struct that aren&#39;t tagged as a newtype struct.\nA reasonable default is to simply deserialize the expected value directly.",60,null],[10,"deserialize_tuple_struct","","This method hints that the `Deserialize` type is expecting a tuple struct. This allows\ndeserializers to parse sequences that aren&#39;t tagged as sequences.",60,null],[10,"deserialize_struct","","This method hints that the `Deserialize` type is expecting a struct. This allows\ndeserializers to parse sequences that aren&#39;t tagged as maps.",60,null],[10,"deserialize_struct_field","","This method hints that the `Deserialize` type is expecting some sort of struct field\nname.  This allows deserializers to choose between &amp;str, usize, or &amp;[u8] to properly\ndeserialize a struct field.",60,null],[10,"deserialize_tuple","","This method hints that the `Deserialize` type is expecting a tuple value. This allows\ndeserializers that provide a custom tuple serialization to properly deserialize the type.",60,null],[10,"deserialize_enum","","This method hints that the `Deserialize` type is expecting an enum value. This allows\ndeserializers that provide a custom enumeration serialization to properly deserialize the\ntype.",60,null],[10,"deserialize_ignored_any","","This method hints that the `Deserialize` type needs to deserialize a value whose type\ndoesn&#39;t matter because it is ignored.",60,null],[8,"Visitor","","This trait represents a visitor that walks through a deserializer.",null,null],[16,"Value","","The value produced by this visitor.",61,null],[11,"visit_bool","","`visit_bool` deserializes a `bool` into a `Value`.",61,null],[11,"visit_isize","","`visit_isize` deserializes a `isize` into a `Value`.",61,null],[11,"visit_i8","","`visit_i8` deserializes a `i8` into a `Value`.",61,null],[11,"visit_i16","","`visit_i16` deserializes a `i16` into a `Value`.",61,null],[11,"visit_i32","","`visit_i32` deserializes a `i32` into a `Value`.",61,null],[11,"visit_i64","","`visit_i64` deserializes a `i64` into a `Value`.",61,null],[11,"visit_usize","","`visit_usize` deserializes a `usize` into a `Value`.",61,null],[11,"visit_u8","","`visit_u8` deserializes a `u8` into a `Value`.",61,null],[11,"visit_u16","","`visit_u16` deserializes a `u16` into a `Value`.",61,null],[11,"visit_u32","","`visit_u32` deserializes a `u32` into a `Value`.",61,null],[11,"visit_u64","","`visit_u64` deserializes a `u64` into a `Value`.",61,null],[11,"visit_f32","","`visit_f32` deserializes a `f32` into a `Value`.",61,null],[11,"visit_f64","","`visit_f64` deserializes a `f64` into a `Value`.",61,null],[11,"visit_char","","`visit_char` deserializes a `char` into a `Value`.",61,null],[11,"visit_str","","`visit_str` deserializes a `&amp;str` into a `Value`.",61,null],[11,"visit_string","","`visit_string` deserializes a `String` into a `Value`.  This allows a deserializer to avoid\na copy if it is deserializing a string from a `String` type.  By default it passes a `&amp;str`\nto the `visit_str` method.",61,null],[11,"visit_unit","","`visit_unit` deserializes a `()` into a `Value`.",61,null],[11,"visit_unit_struct","","`visit_unit_struct` deserializes a unit struct into a `Value`.",61,null],[11,"visit_none","","`visit_none` deserializes a none value into a `Value`.",61,null],[11,"visit_some","","`visit_some` deserializes a value into a `Value`.",61,null],[11,"visit_newtype_struct","","`visit_newtype_struct` deserializes a value into a `Value`.",61,null],[11,"visit_seq","","`visit_seq` deserializes a `SeqVisitor` into a `Value`.",61,null],[11,"visit_map","","`visit_map` deserializes a `MapVisitor` into a `Value`.",61,null],[11,"visit_bytes","","`visit_bytes` deserializes a `&amp;[u8]` into a `Value`.",61,null],[11,"visit_byte_buf","","`visit_byte_buf` deserializes a `Vec&lt;u8&gt;` into a `Value`.",61,null],[8,"SeqVisitor","","`SeqVisitor` visits each item in a sequence.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",62,null],[10,"visit","","This returns a `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there\nare no more remaining items.",62,null],[10,"end","","This signals to the `SeqVisitor` that the `Visitor` does not expect any more items.",62,null],[11,"size_hint","","Return the lower and upper bound of items remaining in the sequence.",62,null],[8,"MapVisitor","","`MapVisitor` visits each item in a sequence.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",63,null],[11,"visit","","This returns a `Ok(Some((key, value)))` for the next (key-value) pair in the map, or\n`Ok(None)` if there are no more remaining items.",63,null],[10,"visit_key","","This returns a `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no\nmore remaining items.",63,null],[10,"visit_value","","This returns a `Ok(value)` for the next value in the map.",63,null],[10,"end","","This signals to the `MapVisitor` that the `Visitor` does not expect any more items.",63,null],[11,"size_hint","","Return the lower and upper bound of items remaining in the sequence.",63,null],[11,"missing_field","","Report that the struct has a field that wasn&#39;t deserialized",63,null],[8,"EnumVisitor","","`EnumVisitor` is a visitor that is created by the `Deserialize` and passed to the\n`Deserializer` in order to deserialize enums.",null,null],[16,"Value","","The value produced by this visitor.",64,null],[10,"visit","","Visit the specific variant with the `VariantVisitor`.",64,null],[8,"VariantVisitor","","`VariantVisitor` is a visitor that is created by the `Deserializer` and passed to the\n`Deserialize` in order to deserialize a specific enum variant.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",65,null],[10,"visit_variant","","`visit_variant` is called to identify which variant to deserialize.",65,null],[11,"visit_unit","","`visit_unit` is called when deserializing a variant with no values.",65,null],[10,"visit_newtype","","`visit_newtype` is called when deserializing a variant with a single value.\nA good default is often to use the `visit_tuple` method to deserialize a `(value,)`.",65,null],[10,"visit_tuple","","`visit_tuple` is called when deserializing a tuple-like variant.\nIf no tuple variants are expected, yield a\n`Err(serde::de::Error::invalid_type(serde::de::Type::TupleVariant))`",65,null],[10,"visit_struct","","`visit_struct` is called when deserializing a struct-like variant.\nIf no struct variants are expected, yield a\n`Err(serde::de::Error::invalid_type(serde::de::Type::StructVariant))`",65,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[0,"iter","serde","Module that contains helper iterators.",null,null],[3,"LineColIterator","serde::iter","Iterator over a byte stream that tracks the current position&#39;s line and column.",null,null],[11,"new","","Construct a new `LineColIterator&lt;Iter&gt;`.",66,{"inputs":[{"name":"iter"}],"output":{"name":"linecoliterator"}}],[11,"line","","Report the current line inside the iterator.",66,null],[11,"col","","Report the current column inside the iterator.",66,null],[11,"get_ref","","Gets a reference to the underlying iterator.",66,null],[11,"get_mut","","Gets a mutable reference to the underlying iterator.",66,null],[11,"into_inner","","Unwraps this `LineColIterator`, returning the underlying iterator.",66,null],[11,"peek","","peeks at the next value",66,null],[11,"next","","",66,null],[0,"ser","serde","Generic serialization framework.\n# For Developers who want to serialize objects\nImplement the `Serialize` trait for the type of objects you want to serialize. Call methods of\nthe `serializer` object. For which methods to call and how to do so, look at the documentation\nof the `Serializer` trait.",null,null],[0,"impls","serde::ser","Implementations for all of Rust&#39;s builtin types. Tuples implement the `Serialize` trait if they\nhave at most 16 fields. Arrays implement the `Serialize` trait if their length is 32 or less.\nYou can always forward array serialization to slice serialization, which works for any length.\nLong tuples are best replaced by tuple structs, for which you can use `derive(Serialize)`. In\nthat case the number of fields is irrelevant.",null,null],[8,"Error","","`Error` is a trait that allows a `Serialize` to generically create a\n`Serializer` error.",null,null],[10,"custom","","Raised when there is a general error when serializing a type.",67,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"invalid_value","","Raised when a `Serialize` was passed an incorrect value.",67,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[8,"Serialize","","A trait that describes a type that can be serialized by a `Serializer`.",null,null],[10,"serialize","","Serializes this value into this serializer.",68,null],[8,"Serializer","","A trait that describes a type that can serialize a stream of values into the underlying format.",null,null],[16,"Error","","The error type that can be returned if some error occurs during serialization.",69,null],[16,"SeqState","","A state object that is initialized by `serialize_seq`, passed to\n`serialize_seq_elt`, and consumed by `serialize_seq_end`. Use `()` if no\nstate is required.",69,null],[16,"TupleState","","A state object that is initialized by `serialize_tuple`, passed to\n`serialize_tuple_elt`, and consumed by `serialize_tuple_end`. Use `()`\nif no state is required.",69,null],[16,"TupleStructState","","A state object that is initialized by `serialize_tuple_struct`, passed\nto `serialize_tuple_struct_elt`, and consumed by\n`serialize_tuple_struct_end`. Use `()` if no state is required.",69,null],[16,"TupleVariantState","","A state object that is initialized by `serialize_tuple_variant`, passed\nto `serialize_tuple_variant_elt`, and consumed by\n`serialize_tuple_variant_end`. Use `()` if no state is required.",69,null],[16,"MapState","","A state object that is initialized by `serialize_map`, passed to\n`serialize_map_elt`, and consumed by `serialize_map_end`. Use `()` if no\nstate is required.",69,null],[16,"StructState","","A state object that is initialized by `serialize_struct`, passed to\n`serialize_struct_elt`, and consumed by `serialize_struct_end`. Use `()`\nif no state is required.",69,null],[16,"StructVariantState","","A state object that is initialized by `serialize_struct_variant`, passed\nto `serialize_struct_variant_elt`, and consumed by\n`serialize_struct_variant_end`. Use `()` if no state is required.",69,null],[10,"serialize_bool","","Serializes a `bool` value.",69,null],[10,"serialize_isize","","Serializes an `isize` value. If the format does not differentiate\nbetween `isize` and `i64`, a reasonable implementation would be to cast\nthe value to `i64` and forward to `serialize_i64`.",69,null],[10,"serialize_i8","","Serializes an `i8` value. If the format does not differentiate between\n`i8` and `i64`, a reasonable implementation would be to cast the value\nto `i64` and forward to `serialize_i64`.",69,null],[10,"serialize_i16","","Serializes an `i16` value. If the format does not differentiate between\n`i16` and `i64`, a reasonable implementation would be to cast the value\nto `i64` and forward to `serialize_i64`.",69,null],[10,"serialize_i32","","Serializes an `i32` value. If the format does not differentiate between\n`i32` and `i64`, a reasonable implementation would be to cast the value\nto `i64` and forward to `serialize_i64`.",69,null],[10,"serialize_i64","","Serializes an `i64` value.",69,null],[10,"serialize_usize","","Serializes a `usize` value. If the format does not differentiate between\n`usize` and `u64`, a reasonable implementation would be to cast the\nvalue to `u64` and forward to `serialize_u64`.",69,null],[10,"serialize_u8","","Serializes a `u8` value. If the format does not differentiate between\n`u8` and `u64`, a reasonable implementation would be to cast the value\nto `u64` and forward to `serialize_u64`.",69,null],[10,"serialize_u16","","Serializes a `u16` value. If the format does not differentiate between\n`u16` and `u64`, a reasonable implementation would be to cast the value\nto `u64` and forward to `serialize_u64`.",69,null],[10,"serialize_u32","","Serializes a `u32` value. If the format does not differentiate between\n`u32` and `u64`, a reasonable implementation would be to cast the value\nto `u64` and forward to `serialize_u64`.",69,null],[10,"serialize_u64","","`Serializes a `u64` value.",69,null],[10,"serialize_f32","","Serializes an `f32` value. If the format does not differentiate between\n`f32` and `f64`, a reasonable implementation would be to cast the value\nto `f64` and forward to `serialize_f64`.",69,null],[10,"serialize_f64","","Serializes an `f64` value.",69,null],[10,"serialize_char","","Serializes a character. If the format does not support characters,\nit is reasonable to serialize it as a single element `str` or a `u32`.",69,null],[10,"serialize_str","","Serializes a `&amp;str`.",69,null],[10,"serialize_bytes","","Enables serializers to serialize byte slices more compactly or more\nefficiently than other types of slices. If no efficient implementation\nis available, a reasonable implementation would be to forward to\n`serialize_seq`. If forwarded, the implementation looks usually just like this:\n```rust\nlet mut state = try!(self.serialize_seq(value));\nfor b in value {\n    try!(self.serialize_seq_elt(&amp;mut state, b));\n}\nself.serialize_seq_end(state)\n```",69,null],[10,"serialize_unit","","Serializes a `()` value. It&#39;s reasonable to just not serialize anything.",69,null],[10,"serialize_unit_struct","","Serializes a unit struct value. A reasonable implementation would be to\nforward to `serialize_unit`.",69,null],[10,"serialize_unit_variant","","Serializes a unit variant, otherwise known as a variant with no\narguments. A reasonable implementation would be to forward to\n`serialize_unit`.",69,null],[10,"serialize_newtype_struct","","Allows a tuple struct with a single element, also known as a newtype\nstruct, to be more efficiently serialized than a tuple struct with\nmultiple items. A reasonable implementation would be to forward to\n`serialize_tuple_struct` or to just serialize the inner value without wrapping.",69,null],[10,"serialize_newtype_variant","","Allows a variant with a single item to be more efficiently serialized\nthan a variant with multiple items. A reasonable implementation would be\nto forward to `serialize_tuple_variant`.",69,null],[10,"serialize_none","","Serializes a `None` value.",69,null],[10,"serialize_some","","Serializes a `Some(...)` value.",69,null],[10,"serialize_seq","","Begins to serialize a sequence. This call must be followed by zero or\nmore calls to `serialize_seq_elt`, then a call to `serialize_seq_end`.",69,null],[10,"serialize_seq_elt","","Serializes a sequence element. Must have previously called\n`serialize_seq`.",69,null],[10,"serialize_seq_end","","Finishes serializing a sequence.",69,null],[10,"serialize_seq_fixed_size","","Begins to serialize a sequence whose length will be known at\ndeserialization time. This call must be followed by zero or more calls\nto `serialize_seq_elt`, then a call to `serialize_seq_end`. A reasonable\nimplementation would be to forward to `serialize_seq`.",69,null],[10,"serialize_tuple","","Begins to serialize a tuple. This call must be followed by zero or more\ncalls to `serialize_tuple_elt`, then a call to `serialize_tuple_end`. A\nreasonable implementation would be to forward to `serialize_seq`.",69,null],[10,"serialize_tuple_elt","","Serializes a tuple element. Must have previously called\n`serialize_tuple`.",69,null],[10,"serialize_tuple_end","","Finishes serializing a tuple.",69,null],[10,"serialize_tuple_struct","","Begins to serialize a tuple struct. This call must be followed by zero\nor more calls to `serialize_tuple_struct_elt`, then a call to\n`serialize_tuple_struct_end`. A reasonable implementation would be to\nforward to `serialize_tuple`.",69,null],[10,"serialize_tuple_struct_elt","","Serializes a tuple struct element. Must have previously called\n`serialize_tuple_struct`.",69,null],[10,"serialize_tuple_struct_end","","Finishes serializing a tuple struct.",69,null],[10,"serialize_tuple_variant","","Begins to serialize a tuple variant. This call must be followed by zero\nor more calls to `serialize_tuple_variant_elt`, then a call to\n`serialize_tuple_variant_end`. A reasonable implementation would be to\nforward to `serialize_tuple_struct`.",69,null],[10,"serialize_tuple_variant_elt","","Serializes a tuple variant element. Must have previously called\n`serialize_tuple_variant`.",69,null],[10,"serialize_tuple_variant_end","","Finishes serializing a tuple variant.",69,null],[10,"serialize_map","","Begins to serialize a map. This call must be followed by zero or more\ncalls to `serialize_map_key` and `serialize_map_value`, then a call to\n`serialize_map_end`.",69,null],[10,"serialize_map_key","","Serialize a map key. Must have previously called `serialize_map`.",69,null],[10,"serialize_map_value","","Serialize a map value. Must have previously called `serialize_map`.",69,null],[10,"serialize_map_end","","Finishes serializing a map.",69,null],[10,"serialize_struct","","Begins to serialize a struct. This call must be followed by zero or more\ncalls to `serialize_struct_elt`, then a call to `serialize_struct_end`.",69,null],[10,"serialize_struct_elt","","Serializes a struct field. Must have previously called\n`serialize_struct`.",69,null],[10,"serialize_struct_end","","Finishes serializing a struct.",69,null],[10,"serialize_struct_variant","","Begins to serialize a struct variant. This call must be followed by zero\nor more calls to `serialize_struct_variant_elt`, then a call to\n`serialize_struct_variant_end`.",69,null],[10,"serialize_struct_variant_elt","","Serialize a struct variant element. Must have previously called\n`serialize_struct_variant`.",69,null],[10,"serialize_struct_variant_end","","Finishes serializing a struct variant.",69,null],[14,"forward_to_deserialize","serde","Helper to forward `Deserializer` methods to `Deserializer::deserialize`.\nEvery given method ignores all arguments and forwards to `deserialize`.\nNote that `deserialize_enum` simply returns an `Error::invalid_type`; a\nbetter approach is tracked in [serde-rs/serde#521][1].",null,null]],"paths":[[3,"ByteBuf"],[3,"ByteBufVisitor"],[3,"Bytes"],[4,"Type"],[3,"UnitVisitor"],[3,"BoolVisitor"],[3,"PhantomDataVisitor"],[3,"BinaryHeapVisitor"],[3,"BTreeSetVisitor"],[3,"LinkedListVisitor"],[3,"HashSetVisitor"],[3,"VecVisitor"],[3,"VecDequeVisitor"],[3,"TupleVisitor1"],[3,"TupleVisitor2"],[3,"TupleVisitor3"],[3,"TupleVisitor4"],[3,"TupleVisitor5"],[3,"TupleVisitor6"],[3,"TupleVisitor7"],[3,"TupleVisitor8"],[3,"TupleVisitor9"],[3,"TupleVisitor10"],[3,"TupleVisitor11"],[3,"TupleVisitor12"],[3,"TupleVisitor13"],[3,"TupleVisitor14"],[3,"TupleVisitor15"],[3,"TupleVisitor16"],[3,"BTreeMapVisitor"],[3,"HashMapVisitor"],[3,"IgnoredAny"],[4,"Error"],[8,"ValueDeserializer"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U32Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"SeqDeserializer"],[3,"SeqVisitorDeserializer"],[3,"MapDeserializer"],[3,"MapVisitorDeserializer"],[3,"BytesDeserializer"],[3,"ByteBufDeserializer"],[8,"Error"],[8,"Deserialize"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqVisitor"],[8,"MapVisitor"],[8,"EnumVisitor"],[8,"VariantVisitor"],[3,"LineColIterator"],[8,"Error"],[8,"Serialize"],[8,"Serializer"]]};
searchIndex["tempdir"] = {"doc":"Temporary directories of files.","items":[[3,"TempDir","tempdir","A directory in the filesystem that is automatically deleted when\nit goes out of scope.",null,null],[11,"new","","Attempts to make a temporary directory inside of `env::temp_dir()` whose\nname will have the prefix, `prefix`. The directory and\neverything inside it will be automatically deleted once the\nreturned `TempDir` is destroyed.",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_in","","Attempts to make a temporary directory inside of `tmpdir`\nwhose name will have the prefix `prefix`. The directory and\neverything inside it will be automatically deleted once the\nreturned `TempDir` is destroyed.",0,{"inputs":[{"name":"p"},{"name":"str"}],"output":{"name":"result"}}],[11,"path","","Accesses the [`Path`] to the temporary directory.",0,null],[11,"into_path","","Unwraps the [`Path`] contained in the `TempDir` and\nreturns it. This destroys the `TempDir` without deleting the\ndirectory represented by the returned `Path`.",0,null],[11,"close","","Closes and removes the temporary directory, returing a `Result`.",0,null],[11,"as_ref","","",0,null],[11,"fmt","","",0,null],[11,"drop","","",0,null]],"paths":[[3,"TempDir"]]};
searchIndex["url"] = {"doc":"rust-url is an implementation of the [URL Standard](http://url.spec.whatwg.org/)\nfor the [Rust](http://rust-lang.org/) programming language.","items":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",null,null],[3,"HostAndPort","","This mostly exists because coherence rules don’t allow us to implement\n`ToSocketAddrs for (Host&lt;S&gt;, u16)`.",null,null],[12,"host","","",0,null],[12,"port","","",0,null],[3,"SocketAddrs","","Socket addresses for an URL.",null,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is not cannot-be-base.",null,null],[3,"Url","","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically not used directly.",null,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",1,null],[13,"Tuple","","Consists of the URL&#39;s scheme, host and port",1,null],[4,"Host","","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as &#39;.&#39; dot-separated labels.\nNon-ASCII labels are encoded in punycode per IDNA.",2,null],[13,"Ipv4","","An IPv4 address.\n`Url::host_str` returns the serialization of this address,\nas four decimal integers separated by `.` dots.",2,null],[13,"Ipv6","","An IPv6 address.\n`Url::host_str` returns the serialization of that address between `[` and `]` brackets,\nin the format per [RFC 5952 *A Recommendation\nfor IPv6 Address Text Representation*](https://tools.ietf.org/html/rfc5952):\nlowercase hexadecimal with maximal `::` compression.",2,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",3,null],[13,"IdnaError","","",3,null],[13,"InvalidPort","","",3,null],[13,"InvalidIpv4Address","","",3,null],[13,"InvalidIpv6Address","","",3,null],[13,"InvalidDomainCharacter","","",3,null],[13,"RelativeUrlWithoutBase","","",3,null],[13,"RelativeUrlWithCannotBeABaseBase","","",3,null],[13,"SetHostOnCannotBeABaseUrl","","",3,null],[13,"Overflow","","",3,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",4,null],[13,"AfterScheme","","",4,null],[13,"BeforeUsername","","",4,null],[13,"AfterUsername","","",4,null],[13,"BeforePassword","","",4,null],[13,"AfterPassword","","",4,null],[13,"BeforeHost","","",4,null],[13,"AfterHost","","",4,null],[13,"BeforePort","","",4,null],[13,"AfterPort","","",4,null],[13,"BeforePath","","",4,null],[13,"AfterPath","","",4,null],[13,"BeforeQuery","","",4,null],[13,"AfterQuery","","",4,null],[13,"BeforeFragment","","",4,null],[13,"AfterFragment","","",4,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"hash","","",2,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&amp;Url`.",2,null],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",2,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&amp;Url`.",0,null],[11,"to_socket_addrs","","",0,null],[11,"next","","",5,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,{"inputs":[],"output":{"name":"origin"}}],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple\n(as opposed to an opaque origin).",1,null],[11,"ascii_serialization","","https://html.spec.whatwg.org/multipage/#ascii-serialisation-of-an-origin",1,null],[11,"unicode_serialization","","https://html.spec.whatwg.org/multipage/#unicode-serialisation-of-an-origin",1,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"drop","","",7,null],[11,"clear","","Remove all segments in the path, leaving the minimal `url.path() == &quot;/&quot;`.",7,null],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty,\nexcept if these was only one segment to begin with.",7,null],[11,"pop","","Remove the last segment of this URL’s path.",7,null],[11,"push","","Append the given segment at the end of this URL’s path.",7,null],[11,"extend","","Append each segment from the given iterator at the end of this URL’s path.",7,null],[11,"eq","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[11,"from","","",3,{"inputs":[{"name":"errors"}],"output":{"name":"parseerror"}}],[11,"index","","",8,null],[11,"index","","",8,null],[11,"index","","",8,null],[11,"index","","",8,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[0,"form_urlencoded","","Parser and serializer for the [`application/x-www-form-urlencoded` syntax](\nhttp://url.spec.whatwg.org/#application/x-www-form-urlencoded),\nas used by HTML forms.",null,null],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",null,null],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of pairs of `Cow&lt;str&gt;`.",null,null],[3,"ByteSerialize","","Return value of `byte_serialize()`.",null,null],[3,"Serializer","","The [`application/x-www-form-urlencoded` serializer](\nhttps://url.spec.whatwg.org/#concept-urlencoded-serializer).",null,null],[5,"parse","","Convert a byte string in the `application/x-www-form-urlencoded` syntax\ninto a iterator of (name, value) pairs.",null,null],[5,"byte_serialize","","The [`application/x-www-form-urlencoded` byte serializer](\nhttps://url.spec.whatwg.org/#concept-urlencoded-byte-serializer).",null,null],[8,"Target","","",null,null],[10,"as_mut_string","","",9,null],[10,"finish","","",9,null],[16,"Finished","","",9,null],[11,"clone","","",10,null],[11,"next","","",10,null],[11,"into_owned","","Return a new iterator that yields pairs of `String` instead of pairs of `Cow&lt;str&gt;`.",10,null],[11,"next","","",11,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"as_mut_string","url","",13,null],[11,"finish","","",13,null],[11,"new","url::form_urlencoded","Create a new `application/x-www-form-urlencoded` serializer for the given target.",14,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded` serializer\nfor a suffix of the given target.",14,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"self"}}],[11,"clear","","Remove any existing name/value pair.",14,null],[11,"append_pair","","Serialize and append a name/value pair.",14,null],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",14,null],[11,"finish","","If this serializer was constructed with a string, take and return that string.",14,null],[0,"percent_encoding","url","",null,null],[3,"SIMPLE_ENCODE_SET","url::percent_encoding","This encode set is used for the path of cannot-be-a-base URLs.",null,null],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",null,null],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",null,null],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on &#39;/&#39;-separated path segment",null,null],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",null,null],[3,"PercentEncode","","The return type of `percent_encode()` and `utf8_percent_encode()`.",null,null],[3,"PercentDecode","","The return type of `percent_decode()`.",null,null],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",null,{"inputs":[{"name":"u8"}],"output":{"name":"str"}}],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",null,null],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,{"inputs":[{"name":"str"},{"name":"e"}],"output":{"name":"percentencode"}}],[5,"percent_decode","","Percent-decode the given bytes.",null,null],[8,"EncodeSet","","Represents a set of characters / bytes that should be percent-encoded.",null,null],[10,"contains","","Called with UTF-8 bytes rather than code points.\nShould return true for all non-ASCII bytes.",15,null],[11,"clone","","",16,null],[11,"contains","","",16,null],[11,"clone","","",17,null],[11,"contains","","",17,null],[11,"clone","","",18,null],[11,"contains","","",18,null],[11,"clone","","",19,null],[11,"contains","","",19,null],[11,"clone","","",20,null],[11,"contains","","",20,null],[11,"clone","","",21,null],[11,"next","","",21,null],[11,"size_hint","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",22,null],[11,"next","","",22,null],[11,"size_hint","","",22,null],[11,"if_any","","If the percent-decoding is different from the input, return it as a new bytes vector.",22,null],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",22,null],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",22,null],[0,"quirks","url","Getters and setters for URL components implemented per https://url.spec.whatwg.org/#api",null,null],[5,"domain_to_ascii","url::quirks","https://url.spec.whatwg.org/#dom-url-domaintoascii",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"domain_to_unicode","","https://url.spec.whatwg.org/#dom-url-domaintounicode",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"href","","Getter for https://url.spec.whatwg.org/#dom-url-href",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_href","","Setter for https://url.spec.whatwg.org/#dom-url-href",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"origin","","Getter for https://url.spec.whatwg.org/#dom-url-origin",null,{"inputs":[{"name":"url"}],"output":{"name":"string"}}],[5,"protocol","","Getter for https://url.spec.whatwg.org/#dom-url-protocol",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_protocol","","Setter for https://url.spec.whatwg.org/#dom-url-protocol",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"username","","Getter for https://url.spec.whatwg.org/#dom-url-username",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_username","","Setter for https://url.spec.whatwg.org/#dom-url-username",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"password","","Getter for https://url.spec.whatwg.org/#dom-url-password",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_password","","Setter for https://url.spec.whatwg.org/#dom-url-password",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"host","","Getter for https://url.spec.whatwg.org/#dom-url-host",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_host","","Setter for https://url.spec.whatwg.org/#dom-url-host",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"hostname","","Getter for https://url.spec.whatwg.org/#dom-url-hostname",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_hostname","","Setter for https://url.spec.whatwg.org/#dom-url-hostname",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"port","","Getter for https://url.spec.whatwg.org/#dom-url-port",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_port","","Setter for https://url.spec.whatwg.org/#dom-url-port",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"pathname","","Getter for https://url.spec.whatwg.org/#dom-url-pathname",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_pathname","","Setter for https://url.spec.whatwg.org/#dom-url-pathname",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":null}],[5,"search","","Getter for https://url.spec.whatwg.org/#dom-url-search",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_search","","Setter for https://url.spec.whatwg.org/#dom-url-search",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":null}],[5,"hash","","Getter for https://url.spec.whatwg.org/#dom-url-hash",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_hash","","Setter for https://url.spec.whatwg.org/#dom-url-hash",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":null}],[11,"clone","url","",8,null],[11,"clone","","",23,null],[11,"base_url","","Change the base URL",23,null],[11,"log_syntax_violation","","Call the provided function or closure on non-fatal parse errors.",23,null],[11,"parse","","Parse an URL string with the configuration so far.",23,null],[11,"parse","","Parse an absolute URL from a string.",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",8,null],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",8,{"inputs":[],"output":{"name":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",8,null],[11,"into_string","","Return the serialization of this URL.",8,null],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",8,null],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the &#39;:&#39; delimiter.",8,null],[11,"has_authority","","Return whether the URL has an &#39;authority&#39;,\nwhich can contain a username, password, host, and port number.",8,null],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL,\nmeaning that parsing a relative URL string with this URL as the base will return an error.",8,null],[11,"username","","Return the username for this URL (typically the empty string)\nas a percent-encoded ASCII string.",8,null],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",8,null],[11,"has_host","","Equivalent to `url.host().is_some()`.",8,null],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",8,null],[11,"host","","Return the parsed representation of the host for this URL.\nNon-ASCII domain labels are punycode-encoded per IDNA.",8,null],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",8,null],[11,"port","","Return the port number for this URL, if any.",8,null],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",8,null],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",8,null],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string.\nFor cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with &#39;/&#39;.\nFor other URLs, this starts with a &#39;/&#39; slash\nand continues with slash-separated path segments.",8,null],[11,"path_segments","","Unless this URL is cannot-be-a-base,\nreturn an iterator of &#39;/&#39; slash-separated path segments,\neach as a percent-encoded ASCII string.",8,null],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",8,null],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return an iterator of (key, value) pairs.",8,null],[11,"fragment","","Return this URL’s fragment identifier, if any.",8,null],[11,"set_fragment","","Change this URL’s fragment identifier.",8,null],[11,"set_query","","Change this URL’s query string.",8,null],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs\nin `application/x-www-form-urlencoded` syntax.",8,null],[11,"set_path","","Change this URL’s path.",8,null],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",8,null],[11,"set_port","","Change this URL’s port number.",8,null],[11,"set_host","","Change this URL’s host.",8,null],[11,"set_ip_host","","Change this URL’s host to the given IP address.",8,null],[11,"set_password","","Change this URL’s password.",8,null],[11,"set_username","","Change this URL’s username.",8,null],[11,"set_scheme","","Change this URL’s scheme.",8,null],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",8,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",8,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",8,null],[11,"to_socket_addrs","","",8,null],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"eq","","",8,null],[11,"cmp","","",8,null],[11,"partial_cmp","","",8,null],[11,"hash","","",8,null],[11,"as_ref","","",8,null],[11,"drop","","",13,null],[14,"define_encode_set","","Define a new struct\nthat implements the [`EncodeSet`](percent_encoding/trait.EncodeSet.html) trait,\nfor use in [`percent_decode()`](percent_encoding/fn.percent_encode.html)\nand related functions.",null,null]],"paths":[[3,"HostAndPort"],[4,"Origin"],[4,"Host"],[4,"ParseError"],[4,"Position"],[3,"SocketAddrs"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"],[3,"Url"],[8,"Target"],[3,"Parse"],[3,"ParseIntoOwned"],[3,"ByteSerialize"],[3,"UrlQuery"],[3,"Serializer"],[8,"EncodeSet"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"],[3,"PercentDecode"],[3,"ParseOptions"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,null],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,null],[11,"ind_sample","","",4,null],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,null],[11,"ind_sample","","",5,null],[11,"clone","","",6,null],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,null],[11,"ind_sample","","",6,null],[11,"clone","","",7,null],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,null],[11,"ind_sample","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,null],[11,"ind_sample","","",8,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,null],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,null],[11,"ind_sample","","",10,null],[11,"clone","","",11,null],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,null],[11,"ind_sample","","",11,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,null],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,null],[11,"ind_sample","","",13,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,null],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,null],[11,"clone","","",16,null],[11,"sample","","",16,null],[11,"ind_sample","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,null],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,null],[11,"ind_sample","","",17,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,null],[11,"next_u32","","",18,null],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,null],[11,"next_u32","","",19,null],[11,"next_u64","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,null],[11,"next_u32","","",20,null],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,null],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,null],[11,"next_u32","","",21,null],[11,"next_u64","","",21,null],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,null],[11,"reseed","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",24,null],[11,"next_u64","","",24,null],[11,"fill_bytes","","",24,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,null],[11,"next_u64","","",25,null],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,null],[11,"next_u64","","Return the next random u64.",27,null],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",27,null],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,null],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,null],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,null],[11,"choose","","Return a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,null],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",29,null],[11,"next","","",30,null],[11,"clone","","",31,null],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,null],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",32,null],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",32,null],[11,"next_u64","","",32,null],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,null],[11,"next_u32","","",33,null],[11,"next_u64","","",33,null],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["flate2"] = {"doc":"A DEFLATE-based stream compression/decompression library","items":[[3,"GzBuilder","flate2","A builder structure to create a new gzip Encoder.",null,null],[3,"GzHeader","","A structure representing the header of a gzip stream.",null,null],[3,"Compress","","Raw in-memory compression stream for blocks of data.",null,null],[3,"Decompress","","Raw in-memory decompression stream for blocks of data.",null,null],[3,"DataError","","Error returned when a decompression object finds that the input stream of\nbytes was not a valid input stream of bytes.",null,null],[4,"Status","","Possible status results of compressing some data or successfully\ndecompressing a block of data.",null,null],[13,"Ok","","Indicates success.",0,null],[13,"BufError","","Indicates that forward progress is not possible due to input or output\nbuffers being empty.",0,null],[13,"StreamEnd","","Indicates that all input has been consumed and all output bytes have\nbeen written. Decompression/compression should not be called again.",0,null],[4,"Flush","","Values which indicate the form of flushing to be used when compressing or\ndecompressing in-memory data.",null,null],[13,"None","","A typical parameter for passing to compression/decompression functions,\nthis indicates that the underlying stream to decide how much data to\naccumulate before producing output in order to maximize compression.",1,null],[13,"Sync","","All pending output is flushed to the output buffer and the output is\naligned on a byte boundary so that the decompressor can get all input\ndata available so far.",1,null],[13,"Partial","","All pending output is flushed to the output buffer, but the output is\nnot aligned to a byte boundary.",1,null],[13,"Block","","A deflate block is completed and emitted, as for `Flush::Sync`, but the\noutput is not aligned on a byte boundary and up to seven vits of the\ncurrent block are held to be written as the next byte after the next\ndeflate block is completed.",1,null],[13,"Full","","All output is flushed as with `Flush::Sync` and the compression state is\nreset so decompression can restart from this point if previous\ncompressed data has been damaged or if random access is desired.",1,null],[13,"Finish","","Pending input is processed and pending output is flushed.",1,null],[4,"Compression","","When compressing data, the compression level can be specified by a value in\nthis enum.",null,null],[13,"None","","No compression is to be performed, this may actually inflate data\nslightly when encoding.",2,null],[13,"Fast","","Optimize for the best speed of encoding.",2,null],[13,"Best","","Optimize for the size of data being encoded.",2,null],[13,"Default","","Choose the default compression, a balance between speed and size.",2,null],[11,"new","","Create a new blank builder with no header by default.",3,{"inputs":[],"output":{"name":"builder"}}],[11,"mtime","","Configure the `mtime` field in the gzip header.",3,null],[11,"extra","","Configure the `extra` field in the gzip header.",3,null],[11,"filename","","Configure the `filename` field in the gzip header.",3,null],[11,"comment","","Configure the `comment` field in the gzip header.",3,null],[11,"write","","Consume this builder, creating a writer encoder in the process.",3,null],[11,"read","","Consume this builder, creating a reader encoder in the process.",3,null],[11,"buf_read","","Consume this builder, creating a reader encoder in the process.",3,null],[11,"filename","","Returns the `filename` field of this gzip stream&#39;s header, if present.",4,null],[11,"extra","","Returns the `extra` field of this gzip stream&#39;s header, if present.",4,null],[11,"comment","","Returns the `comment` field of this gzip stream&#39;s header, if present.",4,null],[11,"mtime","","Returns the `mtime` field of this gzip stream&#39;s header, if present.",4,null],[11,"fmt","","",5,null],[11,"new","","Creates a new object ready for compressing data that it&#39;s given.",6,{"inputs":[{"name":"compression"},{"name":"bool"}],"output":{"name":"compress"}}],[11,"total_in","","Returns the total number of input bytes which have been processed by\nthis compression object.",6,null],[11,"total_out","","Returns the total number of output bytes which have been produced by\nthis compression object.",6,null],[11,"reset","","Quickly resets this compressor without having to reallocate anything.",6,null],[11,"compress","","Compresses the input data into the output, consuming only as much\ninput as needed and writing as much output as possible.",6,null],[11,"compress_vec","","Compresses the input data into the extra space of the output, consuming\nonly as much input as needed and writing as much output as possible.",6,null],[11,"new","","Creates a new object ready for decompressing data that it&#39;s given.",7,{"inputs":[{"name":"bool"}],"output":{"name":"decompress"}}],[11,"total_in","","Returns the total number of input bytes which have been processed by\nthis decompression object.",7,null],[11,"total_out","","Returns the total number of output bytes which have been produced by\nthis decompression object.",7,null],[11,"decompress","","Decompresses the input data into the output, consuming only as much\ninput as needed and writing as much output as possible.",7,null],[11,"decompress_vec","","Decompresses the input data into the extra space in the output vector\nspecified by `output`.",7,null],[11,"description","","",5,null],[11,"fmt","","",5,null],[0,"read","","Types which operate over `Read` streams, both encoders and decoders for\nvarious formats.",null,null],[3,"DeflateEncoder","flate2::read","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[0,"write","flate2","Types which operate over `Write` streams, both encoders and decoders for\nvarious formats.",null,null],[3,"DeflateEncoder","flate2::write","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[0,"bufread","flate2","Types which operate over `BufRead` streams, both encoders and decoders for\nvarious formats.",null,null],[3,"DeflateEncoder","flate2::bufread","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[8,"FlateReadExt","flate2","A helper trait to create encoder/decoders with method syntax.",null,null],[11,"gz_encode","","Consume this reader to create a compression stream at the specified\ncompression level.",8,null],[11,"gz_decode","","Consume this reader to create a decompression stream of this stream.",8,null],[11,"zlib_encode","","Consume this reader to create a compression stream at the specified\ncompression level.",8,null],[11,"zlib_decode","","Consume this reader to create a decompression stream of this stream.",8,null],[11,"deflate_encode","","Consume this reader to create a compression stream at the specified\ncompression level.",8,null],[11,"deflate_decode","","Consume this reader to create a decompression stream of this stream.",8,null],[8,"FlateWriteExt","","A helper trait to create encoder/decoders with method syntax.",null,null],[11,"gz_encode","","Consume this writer to create a compression stream at the specified\ncompression level.",9,null],[11,"zlib_encode","","Consume this writer to create a compression stream at the specified\ncompression level.",9,null],[11,"zlib_decode","","Consume this writer to create a decompression stream of this stream.",9,null],[11,"deflate_encode","","Consume this writer to create a compression stream at the specified\ncompression level.",9,null],[11,"deflate_decode","","Consume this writer to create a decompression stream of this stream.",9,null],[11,"clone","","",2,null],[11,"new","flate2::write","Creates a new encoder which will write compressed data to the stream\ngiven at the given compression level.",10,{"inputs":[{"name":"w"},{"name":"compression"}],"output":{"name":"encoderwriter"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the output\nstream for another.",10,null],[11,"finish","","Consumes this encoder, flushing the output stream.",10,null],[11,"write","","",10,null],[11,"flush","","",10,null],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data from the given\nstream and emit the compressed stream.",11,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreader"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input\nstream for another.",11,null],[11,"get_ref","","Acquires a reference to the underlying reader",11,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",11,null],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",11,null],[11,"read","","",11,null],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data from the given\nstream and emit the compressed stream.",12,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreaderbuf"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input\nstream for another.",12,null],[11,"get_ref","","Acquires a reference to the underlying reader",12,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",12,null],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",12,null],[11,"read","","",12,null],[11,"new","flate2::read","Creates a new decoder which will decompress data read from the given\nstream.",13,{"inputs":[{"name":"r"}],"output":{"name":"decoderreader"}}],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",13,{"inputs":[{"name":"r"},{"name":"vec"}],"output":{"name":"decoderreader"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input\nstream for another.",13,null],[11,"get_ref","","Acquires a reference to the underlying stream",13,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",13,null],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",13,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",13,null],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",13,null],[11,"read","","",13,null],[11,"new","flate2::bufread","Creates a new decoder which will decompress data read from the given\nstream.",14,{"inputs":[{"name":"r"}],"output":{"name":"decoderreaderbuf"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input\nstream for another.",14,null],[11,"get_ref","","Acquires a reference to the underlying stream",14,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",14,null],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",14,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",14,null],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",14,null],[11,"read","","",14,null],[11,"new","flate2::write","Creates a new decoder which will write uncompressed data to the stream.",15,{"inputs":[{"name":"w"}],"output":{"name":"decoderwriter"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the output\nstream for another.",15,null],[11,"finish","","Consumes this encoder, flushing the output stream.",15,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for\ndecompression.",15,null],[11,"total_out","","Returns the number of bytes that the decompressor has written to its\noutput stream.",15,null],[11,"write","","",15,null],[11,"flush","","",15,null],[11,"new","","Creates a new encoder which will use the given compression level.",16,{"inputs":[{"name":"w"},{"name":"compression"}],"output":{"name":"encoderwriter"}}],[11,"finish","","Finish encoding this stream, returning the underlying writer once the\nencoding is done.",16,null],[11,"write","","",16,null],[11,"flush","","",16,null],[11,"drop","","",16,null],[11,"new","flate2::read","Creates a new encoder which will use the given compression level.",17,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreader"}}],[11,"into_inner","","Returns the underlying stream, consuming this encoder",17,null],[11,"read","","",17,null],[11,"new","flate2::bufread","Creates a new encoder which will use the given compression level.",18,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreaderbuf"}}],[11,"into_inner","","Returns the underlying stream, consuming this encoder",18,null],[11,"read","","",18,null],[11,"new","flate2::read","Creates a new decoder from the given reader, immediately parsing the\ngzip header.",19,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"header","","Returns the header associated with this stream.",19,null],[11,"read","","",19,null],[11,"new","flate2::bufread","Creates a new decoder from the given reader, immediately parsing the\ngzip header.",20,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"header","","Returns the header associated with this stream.",20,null],[11,"read","","",20,null],[11,"new","flate2::write","Creates a new encoder which will write compressed data to the stream\ngiven at the given compression level.",21,{"inputs":[{"name":"w"},{"name":"compression"}],"output":{"name":"encoderwriter"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the output\nstream for another.",21,null],[11,"finish","","Consumes this encoder, flushing the output stream.",21,null],[11,"write","","",21,null],[11,"flush","","",21,null],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data from the given\nstream and emit the compressed stream.",22,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreader"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input\nstream for another.",22,null],[11,"get_ref","","Acquires a reference to the underlying stream",22,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",22,null],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",22,null],[11,"read","","",22,null],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data from the given\nstream and emit the compressed stream.",23,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreaderbuf"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input\nstream for another.",23,null],[11,"get_ref","","Acquires a reference to the underlying stream",23,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",23,null],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",23,null],[11,"read","","",23,null],[11,"new","flate2::read","Creates a new decoder which will decompress data read from the given\nstream.",24,{"inputs":[{"name":"r"}],"output":{"name":"decoderreader"}}],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",24,{"inputs":[{"name":"r"},{"name":"vec"}],"output":{"name":"decoderreader"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input\nstream for another.",24,null],[11,"get_ref","","Acquires a reference to the underlying stream",24,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",24,null],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",24,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",24,null],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",24,null],[11,"read","","",24,null],[11,"new","flate2::bufread","Creates a new decoder which will decompress data read from the given\nstream.",25,{"inputs":[{"name":"r"}],"output":{"name":"decoderreaderbuf"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input\nstream for another.",25,null],[11,"get_ref","","Acquires a reference to the underlying stream",25,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",25,null],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",25,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",25,null],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",25,null],[11,"read","","",25,null],[11,"new","flate2::write","Creates a new decoder which will write uncompressed data to the stream.",26,{"inputs":[{"name":"w"}],"output":{"name":"decoderwriter"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the output\nstream for another.",26,null],[11,"finish","","Consumes this encoder, flushing the output stream.",26,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for\ndecompression.",26,null],[11,"total_out","","Returns the number of bytes that the decompressor has written to its\noutput stream.",26,null],[11,"write","","",26,null],[11,"flush","","",26,null]],"paths":[[4,"Status"],[4,"Flush"],[4,"Compression"],[3,"GzBuilder"],[3,"GzHeader"],[3,"DataError"],[3,"Compress"],[3,"Decompress"],[8,"FlateReadExt"],[8,"FlateWriteExt"],[3,"DeflateEncoder"],[3,"DeflateEncoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateDecoder"],[3,"DeflateDecoder"],[3,"GzEncoder"],[3,"GzEncoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"GzDecoder"],[3,"ZlibEncoder"],[3,"ZlibEncoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibDecoder"],[3,"ZlibDecoder"]]};
searchIndex["aho_corasick"] = {"doc":"An implementation of the\n[Aho-Corasick string search algorithm](https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_string_matching_algorithm).","items":[[3,"Match","aho_corasick","Records a match in the search text.",null,null],[12,"pati","","The pattern index.",0,null],[12,"start","","The starting byte offset of the match in the search text.",0,null],[12,"end","","The ending byte offset of the match in the search text.",0,null],[3,"Matches","","An iterator of non-overlapping matches for in-memory text.",null,null],[3,"MatchesOverlapping","","An iterator of overlapping matches for in-memory text.",null,null],[3,"StreamMatches","","An iterator of non-overlapping matches for streaming text.",null,null],[3,"StreamMatchesOverlapping","","An iterator of overlapping matches for streaming text.",null,null],[3,"FullAcAutomaton","","A complete Aho-Corasick automaton.",null,null],[3,"AcAutomaton","","An Aho-Corasick finite automaton.",null,null],[3,"Dense","","State transitions that can be stored either sparsely or densely.",null,null],[3,"Sparse","","State transitions that are always sparse.",null,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",1,null],[11,"next","","",1,null],[11,"fmt","","",2,null],[11,"next","","",2,null],[11,"fmt","","",3,null],[11,"next","","",3,null],[11,"fmt","","",4,null],[11,"next","","",4,null],[11,"clone","","",5,null],[11,"new","","Build a new expanded Aho-Corasick automaton from an existing\nAho-Corasick automaton.",5,{"inputs":[{"name":"acautomaton"}],"output":{"name":"fullacautomaton"}}],[11,"next_state","","",5,null],[11,"get_match","","",5,null],[11,"has_match","","",5,null],[11,"start_bytes","","",5,null],[11,"patterns","","",5,null],[11,"pattern","","",5,null],[11,"fmt","","",5,null],[6,"StateIdx","","The integer type used for the state index.",null,null],[8,"Automaton","","An abstraction over automatons and their corresponding iterators.\nThe type parameter `P` is the type of the pattern that was used to\nconstruct this Automaton.",null,null],[10,"next_state","","Return the next state given the current state and next character.",6,null],[10,"has_match","","Return true if and only if the given state and current pattern index\nindicate a match.",6,null],[10,"get_match","","Build a match given the current state, pattern index and input index.",6,null],[10,"start_bytes","","Return the set of bytes that have transitions in the root state.",6,null],[10,"patterns","","Returns all of the patterns matched by this automaton.",6,null],[10,"pattern","","Returns the pattern indexed at `i`.",6,null],[11,"len","","Return the number of patterns in the automaton.",6,null],[11,"is_empty","","Returns true if the automaton has no patterns.",6,null],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,null],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,null],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,null],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,null],[8,"Transitions","","An abstraction over state transition strategies.",null,null],[10,"new","","Return a new state at the given depth.",7,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[10,"goto","","Return the next state index given the next character.",7,null],[10,"set_goto","","Set the next state index for the character given.",7,null],[10,"heap_bytes","","The memory use in bytes (on the heap) of this set of transitions.",7,null],[11,"clone","","",8,null],[11,"new","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"with_transitions","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"into_full","","Build out the entire automaton into a single matrix.",8,null],[11,"next_state","","",8,null],[11,"get_match","","",8,null],[11,"has_match","","",8,null],[11,"start_bytes","","",8,null],[11,"patterns","","",8,null],[11,"pattern","","",8,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"new","","",9,{"inputs":[{"name":"u32"}],"output":{"name":"dense"}}],[11,"goto","","",9,null],[11,"set_goto","","",9,null],[11,"heap_bytes","","",9,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"new","","",10,{"inputs":[{"name":"u32"}],"output":{"name":"sparse"}}],[11,"goto","","",10,null],[11,"set_goto","","",10,null],[11,"heap_bytes","","",10,null],[11,"from_iter","","Create an automaton from an iterator of strings.",8,{"inputs":[{"name":"t"}],"output":{"name":"acautomaton"}}],[11,"fmt","","",8,null],[11,"len","","Return the number of patterns in the automaton.",6,null],[11,"is_empty","","Returns true if the automaton has no patterns.",6,null],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,null],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,null],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,null],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,null]],"paths":[[3,"Match"],[3,"Matches"],[3,"StreamMatches"],[3,"MatchesOverlapping"],[3,"StreamMatchesOverlapping"],[3,"FullAcAutomaton"],[8,"Automaton"],[8,"Transitions"],[3,"AcAutomaton"],[3,"Dense"],[3,"Sparse"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library\nimplementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"cmp","","",4,null],[11,"fmt","","",4,null],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,null],[11,"num_days","","Returns the total number of whole days in the duration.",4,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"sub","","",4,null],[11,"mul","","",4,null],[11,"div","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"clone","","",6,null],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",6,null],[11,"clone","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"cmp","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"add","","",7,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,null],[11,"sub","","The resulting Tm is in UTC.",1,null],[11,"sub","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,null],[11,"to_local","","Convert time to the local timezone",1,null],[11,"to_utc","","Convert time to the UTC",1,null],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,null],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,null],[11,"strftime","","Formats the time according to the format string.",1,null],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,null],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,null],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"fmt","","",3,null]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["openssl_sys_extras"] = {"doc":"","items":[[5,"SSL_CTX_set_options","openssl_sys_extras","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"HMAC_Init_ex","","",null,null],[5,"HMAC_Final","","",null,null],[5,"HMAC_Update","","",null,null],[5,"HMAC_CTX_copy","","",null,null],[5,"BIO_eof","","",null,null],[5,"BIO_set_nbio","","",null,null],[5,"BIO_set_mem_eof_return","","",null,null],[5,"BIO_clear_retry_flags","","",null,null],[5,"BIO_set_retry_read","","",null,null],[5,"BIO_set_retry_write","","",null,null],[5,"BIO_flush","","",null,null],[5,"SSL_CTX_set_options_shim","","",null,null],[5,"SSL_CTX_get_options_shim","","",null,null],[5,"SSL_CTX_clear_options_shim","","",null,null],[5,"SSL_CTX_set_mode","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"SSL_set_tlsext_host_name","","",null,null],[5,"SSL_CTX_set_tmp_dh","","",null,null],[5,"X509_get_extensions","","",null,null],[5,"SSL_CTX_set_tlsext_servername_callback","","",null,null],[5,"SSL_CTX_set_tlsext_servername_arg","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_DTLSv1","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"SSL_OP_NO_DTLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1_1","","",null,null],[17,"SSL_OP_NETSCAPE_CA_DN_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",null,null],[17,"SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG","","",null,null],[17,"SSL_OP_MSIE_SSLV2_RSA_PADDING","","",null,null],[17,"SSL_OP_PKCS1_CHECK_1","","",null,null],[17,"SSL_OP_PKCS1_CHECK_2","","",null,null],[17,"SSL_OP_EPHEMERAL_RSA","","",null,null]],"paths":[]};
searchIndex["thread_local"] = {"doc":"Per-object thread-local storage","items":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a single thread.",null,null],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"drop","","",0,null],[11,"new","","Creates a new empty `ThreadLocal`.",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",0,null],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn&#39;t\nexist.",0,null],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn&#39;t\nexist. If `create` fails, that error is returned and no element is\nadded.",0,null],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",0,null],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.",0,null],[11,"into_iter","","",0,null],[11,"get_default","","Returns the element for the current thread, or creates a default one if\nit doesn&#39;t exist.",0,null],[11,"fmt","","",0,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next","","",2,null],[11,"size_hint","","",2,null],[11,"default","","",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"new","","Creates a new empty `CachedThreadLocal`.",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",3,null],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn&#39;t\nexist.",3,null],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn&#39;t\nexist. If `create` fails, that error is returned and no element is\nadded.",3,null],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",3,null],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.",3,null],[11,"into_iter","","",3,null],[11,"get_default","","Returns the element for the current thread, or creates a default one if\nit doesn&#39;t exist.",3,null],[11,"fmt","","",3,null]],"paths":[[3,"ThreadLocal"],[3,"IterMut"],[3,"IntoIter"],[3,"CachedThreadLocal"]]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",4,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",5,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",7,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",8,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"description","","",6,null],[11,"fmt","","",6,null],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,null],[11,"clone","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"fmt","","",12,null],[11,"fmt","","",13,null],[11,"eq","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",10,null],[11,"description","","",12,null],[11,"cause","","",12,null],[11,"fmt","","",12,null],[11,"from","","",12,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",11,null],[11,"fmt","","",11,null],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",13,null],[11,"fmt","","",13,null],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",17,null],[11,"emit_nil","","",17,null],[11,"emit_usize","","",17,null],[11,"emit_u64","","",17,null],[11,"emit_u32","","",17,null],[11,"emit_u16","","",17,null],[11,"emit_u8","","",17,null],[11,"emit_isize","","",17,null],[11,"emit_i64","","",17,null],[11,"emit_i32","","",17,null],[11,"emit_i16","","",17,null],[11,"emit_i8","","",17,null],[11,"emit_bool","","",17,null],[11,"emit_f64","","",17,null],[11,"emit_f32","","",17,null],[11,"emit_char","","",17,null],[11,"emit_str","","",17,null],[11,"emit_enum","","",17,null],[11,"emit_enum_variant","","",17,null],[11,"emit_enum_variant_arg","","",17,null],[11,"emit_enum_struct_variant","","",17,null],[11,"emit_enum_struct_variant_field","","",17,null],[11,"emit_struct","","",17,null],[11,"emit_struct_field","","",17,null],[11,"emit_tuple","","",17,null],[11,"emit_tuple_arg","","",17,null],[11,"emit_tuple_struct","","",17,null],[11,"emit_tuple_struct_arg","","",17,null],[11,"emit_option","","",17,null],[11,"emit_option_none","","",17,null],[11,"emit_option_some","","",17,null],[11,"emit_seq","","",17,null],[11,"emit_seq_elt","","",17,null],[11,"emit_map","","",17,null],[11,"emit_map_elt_key","","",17,null],[11,"emit_map_elt_val","","",17,null],[11,"encode","","",9,null],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",9,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",9,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",9,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",9,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,null],[11,"as_object","","If the Json value is an Object, returns a reference to the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"as_object_mut","","If the Json value is an Object, returns a mutable reference to the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"into_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,null],[11,"as_array","","If the Json value is an Array, returns a reference to the associated vector.\nReturns None otherwise.",9,null],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference to the associated vector.\nReturns None otherwise.",9,null],[11,"into_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",9,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",9,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",9,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",9,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",9,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",9,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",9,null],[11,"index","","",9,null],[11,"index","","",9,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",14,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"new","","",18,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,null],[11,"is_empty","","Returns true if the stack is empty.",18,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",18,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,null],[11,"next","","",19,null],[11,"new","","Creates the JSON parser.",19,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",19,null],[11,"new","","Create a JSON Builder.",20,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",20,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",21,null],[11,"read_usize","","",21,null],[11,"read_u8","","",21,null],[11,"read_u16","","",21,null],[11,"read_u32","","",21,null],[11,"read_u64","","",21,null],[11,"read_isize","","",21,null],[11,"read_i8","","",21,null],[11,"read_i16","","",21,null],[11,"read_i32","","",21,null],[11,"read_i64","","",21,null],[11,"read_f32","","",21,null],[11,"read_f64","","",21,null],[11,"read_bool","","",21,null],[11,"read_char","","",21,null],[11,"read_str","","",21,null],[11,"read_enum","","",21,null],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,null],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,null],[11,"read_struct","","",21,null],[11,"read_struct_field","","",21,null],[11,"read_tuple","","",21,null],[11,"read_tuple_arg","","",21,null],[11,"read_tuple_struct","","",21,null],[11,"read_tuple_struct_arg","","",21,null],[11,"read_option","","",21,null],[11,"read_seq","","",21,null],[11,"read_seq_elt","","",21,null],[11,"read_map","","",21,null],[11,"read_map_elt_key","","",21,null],[11,"read_map_elt_val","","",21,null],[11,"error","","",21,null],[11,"to_json","","",9,null],[11,"fmt","","Encodes a json value into a string",9,null],[11,"fmt","","Encodes a json value into a string",22,null],[11,"fmt","","Encodes a json value into a string",23,null],[11,"indent","","Set the indentation level for the emitted JSON",24,null],[11,"fmt","","Encodes a json value into a string",24,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",null,null],[16,"Error","","The error type for method results.",25,null],[10,"read_nil","","Read a nil value.",25,null],[10,"read_usize","","Read a usize value.",25,null],[10,"read_u64","","Read a u64 value.",25,null],[10,"read_u32","","Read a u32 value.",25,null],[10,"read_u16","","Read a u16 value.",25,null],[10,"read_u8","","Read a u8 value.",25,null],[10,"read_isize","","Read a isize value.",25,null],[10,"read_i64","","Read a i64 value.",25,null],[10,"read_i32","","Read a i32 value.",25,null],[10,"read_i16","","Read a i16 value.",25,null],[10,"read_i8","","Read a i8 value.",25,null],[10,"read_bool","","Read a bool value.",25,null],[10,"read_f64","","Read a f64 value.",25,null],[10,"read_f32","","Read a f32 value.",25,null],[10,"read_char","","Read a char value.",25,null],[10,"read_str","","Read a string value.",25,null],[10,"read_enum","","Read an enumeration value.",25,null],[10,"read_enum_variant","","Read an enumeration value.",25,null],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",25,null],[10,"read_enum_struct_variant","","Read an enumeration value.",25,null],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",25,null],[10,"read_struct","","Read an struct value.",25,null],[10,"read_struct_field","","Read a field for a struct value.",25,null],[10,"read_tuple","","Read a tuple value.",25,null],[10,"read_tuple_arg","","Read a data item for a tuple.",25,null],[10,"read_tuple_struct","","Read a tuple struct value.",25,null],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",25,null],[10,"read_option","","Read an optional value.",25,null],[10,"read_seq","","Read a sequence of values.",25,null],[10,"read_seq_elt","","Read an element in the sequence.",25,null],[10,"read_map","","Read an associative container (map).",25,null],[10,"read_map_elt_key","","Read the key for an entry in a map.",25,null],[10,"read_map_elt_val","","Read the value for an entry in a map.",25,null],[10,"error","","Record a decoding error.",25,null],[8,"Encoder","","Trait for writing out an encoding when serializing.",null,null],[16,"Error","","The error type for method results.",26,null],[10,"emit_nil","","Emit a nil value.",26,null],[10,"emit_usize","","Emit a usize value.",26,null],[10,"emit_u64","","Emit a u64 value.",26,null],[10,"emit_u32","","Emit a u32 value.",26,null],[10,"emit_u16","","Emit a u16 value.",26,null],[10,"emit_u8","","Emit a u8 value.",26,null],[10,"emit_isize","","Emit a isize value.",26,null],[10,"emit_i64","","Emit a i64 value.",26,null],[10,"emit_i32","","Emit a i32 value.",26,null],[10,"emit_i16","","Emit a i16 value.",26,null],[10,"emit_i8","","Emit a i8 value.",26,null],[10,"emit_bool","","Emit a bool value.",26,null],[10,"emit_f64","","Emit a f64 value.",26,null],[10,"emit_f32","","Emit a f32 value.",26,null],[10,"emit_char","","Emit a char value.",26,null],[10,"emit_str","","Emit a string value.",26,null],[10,"emit_enum","","Emit an enumeration value.",26,null],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",26,null],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",26,null],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",26,null],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",26,null],[10,"emit_struct","","Emit a struct value.",26,null],[10,"emit_struct_field","","Emit a field item for a struct.",26,null],[10,"emit_tuple","","Emit a tuple value.",26,null],[10,"emit_tuple_arg","","Emit a data item for a tuple.",26,null],[10,"emit_tuple_struct","","Emit a tuple struct value.",26,null],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",26,null],[10,"emit_option","","Emit an optional value.",26,null],[10,"emit_option_none","","Emit the `None` optional value.",26,null],[10,"emit_option_some","","Emit the `Some(x)` optional value.",26,null],[10,"emit_seq","","Emit a sequence of values.",26,null],[10,"emit_seq_elt","","Emit an element in a sequence.",26,null],[10,"emit_map","","Emit an associative container (map).",26,null],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",26,null],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",26,null],[8,"Decodable","","Trait for deserializing a type.",null,null],[10,"decode","","Deserialize a value using a `Decoder`.",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","Trait for serializing a type.",null,null],[10,"encode","","Serialize a value using an `Encoder`.",28,null],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",null,null],[10,"read_to_vec","","Read a sequence into a vector.",29,null],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",null,null],[10,"emit_from_vec","","Emit a vector as a sequence.",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["phf"] = {"doc":"Compile time optimized maps and sets.","items":[[8,"PhfHash","phf","A trait implemented by types which can be used in PHF data structures.",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher as necessary.",0,null],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,null],[3,"Map","","An immutable map constructed at compile time.",null,null],[3,"Set","","An immutable set constructed at compile time.",null,null],[3,"OrderedMap","","An order-preserving immutable map constructed at compile time.",null,null],[3,"OrderedSet","","An order-preserving immutable set constructed at compile time.",null,null],[0,"map","","An immutable map constructed at compile time.",null,null],[3,"Map","phf::map","An immutable map constructed at compile time.",null,null],[3,"Entries","","An iterator over the key/value pairs in a `Map`.",null,null],[3,"Keys","","An iterator over the keys in a `Map`.",null,null],[3,"Values","","An iterator over the values in a `Map`.",null,null],[11,"fmt","","",1,null],[11,"index","","",1,null],[11,"is_empty","","Returns true if the `Map` is empty.",1,null],[11,"len","","Returns the number of entries in the `Map`.",1,null],[11,"contains_key","","Determines if `key` is in the `Map`.",1,null],[11,"get","","Returns a reference to the value that `key` maps to.",1,null],[11,"get_key","","Returns a reference to the map&#39;s internal static instance of the given\nkey.",1,null],[11,"get_entry","","Like `get`, but returns both the key and the value.",1,null],[11,"entries","","Returns an iterator over the key/value pairs in the map.",1,null],[11,"keys","","Returns an iterator over the keys in the map.",1,null],[11,"values","","Returns an iterator over the values in the map.",1,null],[11,"next","","",2,null],[11,"size_hint","","",2,null],[11,"next_back","","",2,null],[11,"next","","",3,null],[11,"size_hint","","",3,null],[11,"next_back","","",3,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"next_back","","",4,null],[0,"set","phf","An immutable set constructed at compile time.",null,null],[3,"Set","phf::set","An immutable set constructed at compile time.",null,null],[3,"Iter","","An iterator over the values in a `Set`.",null,null],[11,"fmt","","",5,null],[11,"len","","Returns the number of elements in the `Set`.",5,null],[11,"is_empty","","Returns true if the `Set` contains no elements.",5,null],[11,"get_key","","Returns a reference to the set&#39;s internal static instance of the given\nkey.",5,null],[11,"contains","","Returns true if `value` is in the `Set`.",5,null],[11,"iter","","Returns an iterator over the values in the set.",5,null],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",5,null],[11,"is_subset","","Returns true if `other` contains all values in `self`.",5,null],[11,"is_superset","","Returns true if `self` contains all values in `other`.",5,null],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"next_back","","",6,null],[0,"ordered_map","phf","An order-preserving immutable map constructed at compile time.",null,null],[3,"OrderedMap","phf::ordered_map","An order-preserving immutable map constructed at compile time.",null,null],[3,"Entries","","An iterator over the entries in a `OrderedMap`.",null,null],[3,"Keys","","An iterator over the keys in a `OrderedMap`.",null,null],[3,"Values","","An iterator over the values in a `OrderedMap`.",null,null],[11,"fmt","","",7,null],[11,"index","","",7,null],[11,"len","","Returns the number of entries in the `Map`.",7,null],[11,"is_empty","","Returns true if the `Map` is empty.",7,null],[11,"get","","Returns a reference to the value that `key` maps to.",7,null],[11,"get_key","","Returns a reference to the map&#39;s internal static instance of the given\nkey.",7,null],[11,"contains_key","","Determines if `key` is in the `Map`.",7,null],[11,"get_index","","Returns the index of the key within the list used to initialize\nthe ordered map.",7,null],[11,"index","","Returns references to both the key and values at an index\nwithin the list used to initialize the ordered map. See `.get_index(key)`.",7,null],[11,"get_entry","","Like `get`, but returns both the key and the value.",7,null],[11,"entries","","Returns an iterator over the key/value pairs in the map.",7,null],[11,"keys","","Returns an iterator over the keys in the map.",7,null],[11,"values","","Returns an iterator over the values in the map.",7,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"next_back","","",8,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next_back","","",9,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"next_back","","",10,null],[0,"ordered_set","phf","An order-preserving immutable set constructed at compile time.",null,null],[3,"OrderedSet","phf::ordered_set","An order-preserving immutable set constructed at compile time.",null,null],[3,"Iter","","An iterator over the values in a `OrderedSet`.",null,null],[11,"fmt","","",11,null],[11,"len","","Returns the number of elements in the `OrderedSet`.",11,null],[11,"is_empty","","Returns true if the `OrderedSet` contains no elements.",11,null],[11,"get_key","","Returns a reference to the set&#39;s internal static instance of the given\nkey.",11,null],[11,"get_index","","Returns the index of the key within the list used to initialize\nthe ordered set.",11,null],[11,"index","","Returns a reference to the key at an index\nwithin the list used to initialize the ordered set. See `.get_index(key)`.",11,null],[11,"contains","","Returns true if `value` is in the `Set`.",11,null],[11,"iter","","Returns an iterator over the values in the set.",11,null],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",11,null],[11,"is_subset","","Returns true if `other` contains all values in `self`.",11,null],[11,"is_superset","","Returns true if `self` contains all values in `other`.",11,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"next_back","","",12,null]],"paths":[[8,"PhfHash"],[3,"Map"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"Set"],[3,"Iter"],[3,"OrderedMap"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"OrderedSet"],[3,"Iter"]]};
searchIndex["net2"] = {"doc":"Extensions to `std::net` networking types.","items":[[3,"TcpBuilder","net2","An &quot;in progress&quot; TCP socket which has not yet been connected or listened.",null,null],[3,"UdpBuilder","","An &quot;in progress&quot; UDP socket which has not yet been connected.",null,null],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the `SOCK_STREAM`\ntype, and with a protocol argument of 0.",0,{"inputs":[],"output":{"name":"result"}}],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain, the `SOCK_STREAM`\ntype, and with a protocol argument of 0.",0,{"inputs":[],"output":{"name":"result"}}],[11,"bind","","Binds this socket to the specified address.",0,null],[11,"listen","","Mark a socket as ready to accept incoming connection requests using\naccept()",0,null],[11,"connect","","Initiate a connection on this socket to the specified address.",0,null],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,null],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,null],[11,"fmt","","",0,null],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the `SOCK_DGRAM`\ntype, and with a protocol argument of 0.",1,{"inputs":[],"output":{"name":"result"}}],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain, the `SOCK_DGRAM`\ntype, and with a protocol argument of 0.",1,{"inputs":[],"output":{"name":"result"}}],[11,"bind","","Binds this socket to the specified address.",1,null],[11,"fmt","","",1,null],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",0,null],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,null],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,null],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",0,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,null],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,null],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,null],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,null],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,null],[11,"from_raw_fd","","",0,{"inputs":[{"name":"c_int"}],"output":{"name":"tcpbuilder"}}],[11,"as_raw_fd","","",0,null],[11,"from_raw_fd","","",1,{"inputs":[{"name":"c_int"}],"output":{"name":"udpbuilder"}}],[11,"as_raw_fd","","",1,null],[0,"unix","","Unix-specific extensions to the `std::net` types.",null,null],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",2,null],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",2,null],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",3,null],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",3,null],[11,"reuse_port","net2","",0,null],[11,"get_reuse_port","","",0,null],[11,"reuse_port","","",1,null],[11,"get_reuse_port","","",1,null],[8,"TcpStreamExt","","Extension methods for the standard [`TcpStream` type][link] in `std::net`.",null,null],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",4,null],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",4,null],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",4,null],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",4,null],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",4,null],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",4,null],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on this socket.",4,null],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this socket, and if so\nthe amount of milliseconds between them.",4,null],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",4,null],[10,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so\nthe duration of time between them.",4,null],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",4,null],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",4,null],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,null],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,null],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",4,null],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",4,null],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,null],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",4,null],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",4,null],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",4,null],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",4,null],[10,"connect","","Executes a `connect` operation on this socket, establishing a connection\nto the host specified by `addr`.",4,null],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",4,null],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",4,null],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",4,null],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",4,null],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener` type][link] in `std::net`.",null,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,null],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,null],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,null],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,null],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",5,null],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",5,null],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",5,null],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",5,null],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket` type][link] in `std::net`.",null,null],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",6,null],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",6,null],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",6,null],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",6,null],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",6,null],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",6,null],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,null],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,null],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",6,null],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",6,null],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,null],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,null],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,null],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",6,null],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",6,null],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,null],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,null],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,null],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,null],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",6,null],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",6,null],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,null],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,null],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",6,null],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",6,null],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,null],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,null],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",6,null],[10,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",6,null],[10,"send","","Sends data on the socket to the remote address to which it is connected.",6,null],[10,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",6,null],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",6,null]],"paths":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["memchr"] = {"doc":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe interface\nto the corresponding functions in `libc`.","items":[[5,"memchr","memchr","A safe interface to `memchr`.",null,null],[5,"memrchr","","A safe interface to `memrchr`.",null,null],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",null,null],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",null,null]],"paths":[]};
searchIndex["openssl_sys"] = {"doc":"","items":[[3,"PKCS12","openssl_sys","",null,null],[3,"stack_st_X509","","",null,null],[12,"stack","","",0,null],[3,"stack_st_X509_EXTENSION","","",null,null],[12,"stack","","",1,null],[3,"stack_st_GENERAL_NAME","","",null,null],[12,"stack","","",2,null],[3,"stack_st_void","","",null,null],[12,"stack","","",3,null],[3,"BIO_METHOD","","",null,null],[12,"type_","","",4,null],[12,"name","","",4,null],[12,"bwrite","","",4,null],[12,"bread","","",4,null],[12,"bputs","","",4,null],[12,"bgets","","",4,null],[12,"ctrl","","",4,null],[12,"create","","",4,null],[12,"destroy","","",4,null],[12,"callback_ctrl","","",4,null],[3,"_STACK","","",null,null],[12,"num","","",5,null],[12,"data","","",5,null],[12,"sorted","","",5,null],[12,"num_alloc","","",5,null],[12,"comp","","",5,null],[3,"RSA","","",null,null],[12,"pad","","",6,null],[12,"version","","",6,null],[12,"meth","","",6,null],[12,"engine","","",6,null],[12,"n","","",6,null],[12,"e","","",6,null],[12,"d","","",6,null],[12,"p","","",6,null],[12,"q","","",6,null],[12,"dmp1","","",6,null],[12,"dmq1","","",6,null],[12,"iqmp","","",6,null],[12,"ex_data","","",6,null],[12,"references","","",6,null],[12,"flags","","",6,null],[12,"_method_mod_n","","",6,null],[12,"_method_mod_p","","",6,null],[12,"_method_mod_q","","",6,null],[12,"bignum_data","","",6,null],[12,"blinding","","",6,null],[12,"mt_blinding","","",6,null],[3,"DSA","","",null,null],[12,"pad","","",7,null],[12,"version","","",7,null],[12,"write_params","","",7,null],[12,"p","","",7,null],[12,"q","","",7,null],[12,"g","","",7,null],[12,"pub_key","","",7,null],[12,"priv_key","","",7,null],[12,"kinv","","",7,null],[12,"r","","",7,null],[12,"flags","","",7,null],[12,"_method_mont_p","","",7,null],[12,"references","","",7,null],[12,"ex_data","","",7,null],[12,"meth","","",7,null],[12,"engine","","",7,null],[3,"EVP_PKEY","","",null,null],[12,"type_","","",8,null],[12,"save_type","","",8,null],[12,"references","","",8,null],[12,"ameth","","",8,null],[12,"engine","","",8,null],[12,"pkey","","",8,null],[12,"save_parameters","","",8,null],[12,"attributes","","",8,null],[3,"BIO","","",null,null],[12,"method","","",9,null],[12,"callback","","",9,null],[12,"cb_arg","","",9,null],[12,"init","","",9,null],[12,"shutdown","","",9,null],[12,"flags","","",9,null],[12,"retry_reason","","",9,null],[12,"num","","",9,null],[12,"ptr","","",9,null],[12,"next_bio","","",9,null],[12,"prev_bio","","",9,null],[12,"references","","",9,null],[12,"num_read","","",9,null],[12,"num_write","","",9,null],[12,"ex_data","","",9,null],[3,"CRYPTO_EX_DATA","","",null,null],[12,"sk","","",10,null],[12,"dummy","","",10,null],[3,"EVP_MD_CTX","","",null,null],[3,"EVP_CIPHER","","",null,null],[12,"nid","","",11,null],[12,"block_size","","",11,null],[12,"key_len","","",11,null],[12,"iv_len","","",11,null],[12,"flags","","",11,null],[12,"init","","",11,null],[12,"do_cipher","","",11,null],[12,"cleanup","","",11,null],[12,"ctx_size","","",11,null],[12,"set_asn1_parameters","","",11,null],[12,"get_asn1_parameters","","",11,null],[12,"ctrl","","",11,null],[12,"app_data","","",11,null],[3,"HMAC_CTX","","",null,null],[3,"X509V3_CTX","","",null,null],[3,"GENERAL_NAME","","",null,null],[12,"type_","","",12,null],[12,"d","","",12,null],[3,"BIGNUM","","",null,null],[12,"d","","",13,null],[12,"top","","",13,null],[12,"dmax","","",13,null],[12,"neg","","",13,null],[12,"flags","","",13,null],[5,"init","","",null,{"inputs":[],"output":null}],[5,"BIO_get_mem_data","","",null,null],[5,"BIO_clear_retry_flags","","",null,null],[5,"BIO_set_retry_read","","",null,null],[5,"BIO_set_retry_write","","",null,null],[5,"SSL_CTX_set_mode","","",null,null],[5,"SSL_CTX_set_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"SSL_CTX_set_tmp_dh","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_tlsext_servername_callback","","",null,null],[5,"SSL_set_tlsext_host_name","","",null,null],[5,"EVP_CIPHER_block_size","","",null,null],[5,"EVP_CIPHER_key_length","","",null,null],[5,"EVP_CIPHER_iv_length","","",null,null],[5,"ASN1_INTEGER_set","","",null,null],[5,"ASN1_STRING_type_new","","",null,null],[5,"ASN1_TIME_free","","",null,null],[5,"ASN1_TIME_print","","",null,null],[5,"BIO_ctrl","","",null,null],[5,"BIO_free_all","","",null,null],[5,"BIO_new","","",null,null],[5,"BIO_new_fp","","",null,null],[5,"BIO_new_socket","","",null,null],[5,"BIO_read","","",null,null],[5,"BIO_write","","",null,null],[5,"BIO_s_file","","",null,null],[5,"BIO_s_mem","","",null,null],[5,"BIO_new_mem_buf","","",null,null],[5,"BIO_set_flags","","",null,null],[5,"BIO_clear_flags","","",null,null],[5,"BN_new","","",null,null],[5,"BN_dup","","",null,null],[5,"BN_clear_free","","",null,null],[5,"BN_CTX_new","","",null,null],[5,"BN_CTX_free","","",null,null],[5,"BN_num_bits","","",null,null],[5,"BN_set_negative","","",null,null],[5,"BN_set_word","","",null,null],[5,"BN_add","","",null,null],[5,"BN_div","","",null,null],[5,"BN_exp","","",null,null],[5,"BN_gcd","","",null,null],[5,"BN_mod_add","","",null,null],[5,"BN_mod_exp","","",null,null],[5,"BN_mod_inverse","","",null,null],[5,"BN_mod_mul","","",null,null],[5,"BN_mod_sqr","","",null,null],[5,"BN_mod_sub","","",null,null],[5,"BN_mul","","",null,null],[5,"BN_nnmod","","",null,null],[5,"BN_add_word","","",null,null],[5,"BN_sub_word","","",null,null],[5,"BN_mul_word","","",null,null],[5,"BN_div_word","","",null,null],[5,"BN_mod_word","","",null,null],[5,"BN_sqr","","",null,null],[5,"BN_sub","","",null,null],[5,"BN_clear_bit","","",null,null],[5,"BN_is_bit_set","","",null,null],[5,"BN_lshift","","",null,null],[5,"BN_lshift1","","",null,null],[5,"BN_mask_bits","","",null,null],[5,"BN_rshift","","",null,null],[5,"BN_set_bit","","",null,null],[5,"BN_rshift1","","",null,null],[5,"BN_cmp","","",null,null],[5,"BN_ucmp","","",null,null],[5,"BN_generate_prime_ex","","",null,null],[5,"BN_is_prime_ex","","",null,null],[5,"BN_is_prime_fasttest_ex","","",null,null],[5,"BN_rand","","",null,null],[5,"BN_pseudo_rand","","",null,null],[5,"BN_rand_range","","",null,null],[5,"BN_pseudo_rand_range","","",null,null],[5,"BN_bin2bn","","",null,null],[5,"BN_bn2bin","","",null,null],[5,"BN_dec2bn","","",null,null],[5,"BN_bn2dec","","",null,null],[5,"BN_hex2bn","","",null,null],[5,"BN_bn2hex","","",null,null],[5,"CRYPTO_num_locks","","",null,null],[5,"CRYPTO_set_locking_callback","","",null,null],[5,"CRYPTO_set_id_callback","","",null,null],[5,"CRYPTO_free","","",null,null],[5,"CRYPTO_memcmp","","",null,null],[5,"DH_free","","",null,null],[5,"DH_new_from_params","","",null,null],[5,"ERR_get_error","","",null,null],[5,"ERR_lib_error_string","","",null,null],[5,"ERR_func_error_string","","",null,null],[5,"ERR_reason_error_string","","",null,null],[5,"ERR_load_crypto_strings","","",null,null],[5,"EVP_md5","","",null,null],[5,"EVP_ripemd160","","",null,null],[5,"EVP_sha1","","",null,null],[5,"EVP_sha224","","",null,null],[5,"EVP_sha256","","",null,null],[5,"EVP_sha384","","",null,null],[5,"EVP_sha512","","",null,null],[5,"EVP_aes_128_cbc","","",null,null],[5,"EVP_aes_128_ecb","","",null,null],[5,"EVP_aes_128_cfb1","","",null,null],[5,"EVP_aes_128_cfb128","","",null,null],[5,"EVP_aes_128_cfb8","","",null,null],[5,"EVP_aes_256_cbc","","",null,null],[5,"EVP_aes_256_ecb","","",null,null],[5,"EVP_aes_256_cfb1","","",null,null],[5,"EVP_aes_256_cfb128","","",null,null],[5,"EVP_aes_256_cfb8","","",null,null],[5,"EVP_rc4","","",null,null],[5,"EVP_des_cbc","","",null,null],[5,"EVP_des_ecb","","",null,null],[5,"EVP_BytesToKey","","",null,null],[5,"EVP_CIPHER_CTX_new","","",null,null],[5,"EVP_CIPHER_CTX_set_padding","","",null,null],[5,"EVP_CIPHER_CTX_set_key_length","","",null,null],[5,"EVP_CIPHER_CTX_free","","",null,null],[5,"EVP_CipherInit","","",null,null],[5,"EVP_CipherInit_ex","","",null,null],[5,"EVP_CipherUpdate","","",null,null],[5,"EVP_CipherFinal","","",null,null],[5,"EVP_DigestInit","","",null,null],[5,"EVP_DigestInit_ex","","",null,null],[5,"EVP_DigestUpdate","","",null,null],[5,"EVP_DigestFinal","","",null,null],[5,"EVP_DigestFinal_ex","","",null,null],[5,"EVP_MD_CTX_create","","",null,null],[5,"EVP_MD_CTX_copy_ex","","",null,null],[5,"EVP_MD_CTX_destroy","","",null,null],[5,"EVP_PKEY_new","","",null,null],[5,"EVP_PKEY_free","","",null,null],[5,"EVP_PKEY_assign","","",null,null],[5,"EVP_PKEY_copy_parameters","","",null,null],[5,"EVP_PKEY_get1_RSA","","",null,null],[5,"EVP_PKEY_set1_RSA","","",null,null],[5,"EVP_PKEY_cmp","","",null,null],[5,"HMAC_CTX_init","","",null,null],[5,"HMAC_CTX_cleanup","","",null,null],[5,"PEM_read_bio_DHparams","","",null,null],[5,"PEM_read_bio_X509","","",null,null],[5,"PEM_read_bio_X509_REQ","","",null,null],[5,"PEM_read_bio_PrivateKey","","",null,null],[5,"PEM_read_bio_PUBKEY","","",null,null],[5,"PEM_read_bio_RSAPrivateKey","","",null,null],[5,"PEM_read_bio_RSA_PUBKEY","","",null,null],[5,"PEM_write_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PUBKEY","","",null,null],[5,"PEM_write_bio_RSAPrivateKey","","",null,null],[5,"PEM_write_bio_RSAPublicKey","","",null,null],[5,"PEM_write_bio_RSA_PUBKEY","","",null,null],[5,"PEM_read_bio_DSAPrivateKey","","",null,null],[5,"PEM_read_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_DSAPrivateKey","","",null,null],[5,"PEM_write_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_X509","","",null,null],[5,"PEM_write_bio_X509_REQ","","",null,null],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",null,null],[5,"RAND_bytes","","",null,null],[5,"RSA_new","","",null,null],[5,"RSA_free","","",null,null],[5,"RSA_generate_key","","",null,null],[5,"RSA_generate_key_ex","","",null,null],[5,"RSA_private_decrypt","","",null,null],[5,"RSA_public_decrypt","","",null,null],[5,"RSA_private_encrypt","","",null,null],[5,"RSA_public_encrypt","","",null,null],[5,"RSA_sign","","",null,null],[5,"RSA_size","","",null,null],[5,"RSA_verify","","",null,null],[5,"DSA_new","","",null,null],[5,"DSA_free","","",null,null],[5,"DSA_size","","",null,null],[5,"DSA_generate_parameters_ex","","",null,null],[5,"DSA_generate_key","","",null,null],[5,"DSA_sign","","",null,null],[5,"DSA_verify","","",null,null],[5,"SSL_library_init","","",null,null],[5,"SSL_load_error_strings","","",null,null],[5,"OPENSSL_add_all_algorithms_noconf","","",null,null],[5,"SSLv3_method","","",null,null],[5,"TLSv1_method","","",null,null],[5,"SSLv23_method","","",null,null],[5,"SSL_new","","",null,null],[5,"SSL_pending","","",null,null],[5,"SSL_free","","",null,null],[5,"SSL_set_bio","","",null,null],[5,"SSL_get_rbio","","",null,null],[5,"SSL_get_wbio","","",null,null],[5,"SSL_accept","","",null,null],[5,"SSL_connect","","",null,null],[5,"SSL_do_handshake","","",null,null],[5,"SSL_ctrl","","",null,null],[5,"SSL_get_error","","",null,null],[5,"SSL_read","","",null,null],[5,"SSL_write","","",null,null],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",null,null],[5,"SSL_get_SSL_CTX","","",null,null],[5,"SSL_set_SSL_CTX","","",null,null],[5,"SSL_get_current_compression","","",null,null],[5,"SSL_get_peer_certificate","","",null,null],[5,"SSL_get_ssl_method","","",null,null],[5,"SSL_get_version","","",null,null],[5,"SSL_state_string","","",null,null],[5,"SSL_state_string_long","","",null,null],[5,"SSL_set_verify","","",null,null],[5,"SSL_get_ex_new_index","","",null,null],[5,"SSL_set_ex_data","","",null,null],[5,"SSL_get_ex_data","","",null,null],[5,"SSL_get_servername","","",null,null],[5,"SSL_COMP_get_name","","",null,null],[5,"SSL_get_current_cipher","","",null,null],[5,"SSL_CIPHER_get_name","","",null,null],[5,"SSL_CIPHER_get_bits","","",null,null],[5,"SSL_CIPHER_get_version","","",null,null],[5,"SSL_CIPHER_description","","",null,null],[5,"SSL_CTX_new","","",null,null],[5,"SSL_CTX_free","","",null,null],[5,"SSL_CTX_ctrl","","",null,null],[5,"SSL_CTX_callback_ctrl","","",null,null],[5,"SSL_CTX_set_verify","","",null,null],[5,"SSL_CTX_set_verify_depth","","",null,null],[5,"SSL_CTX_load_verify_locations","","",null,null],[5,"SSL_CTX_set_default_verify_paths","","",null,null],[5,"SSL_CTX_get_ex_new_index","","",null,null],[5,"SSL_CTX_set_ex_data","","",null,null],[5,"SSL_CTX_get_ex_data","","",null,null],[5,"SSL_CTX_set_session_id_context","","",null,null],[5,"SSL_CTX_use_certificate_file","","",null,null],[5,"SSL_CTX_use_certificate_chain_file","","",null,null],[5,"SSL_CTX_use_certificate","","",null,null],[5,"SSL_CTX_use_PrivateKey_file","","",null,null],[5,"SSL_CTX_use_PrivateKey","","",null,null],[5,"SSL_CTX_check_private_key","","",null,null],[5,"SSL_CTX_set_cipher_list","","",null,null],[5,"X509_add_ext","","",null,null],[5,"X509_digest","","",null,null],[5,"X509_free","","",null,null],[5,"X509_REQ_free","","",null,null],[5,"X509_get_serialNumber","","",null,null],[5,"X509_get_subject_name","","",null,null],[5,"X509_gmtime_adj","","",null,null],[5,"X509_new","","",null,null],[5,"X509_set_issuer_name","","",null,null],[5,"X509_set_notAfter","","",null,null],[5,"X509_set_notBefore","","",null,null],[5,"X509_set_version","","",null,null],[5,"X509_set_pubkey","","",null,null],[5,"X509_sign","","",null,null],[5,"X509_get_pubkey","","",null,null],[5,"X509_to_X509_REQ","","",null,null],[5,"X509_get_ext_d2i","","",null,null],[5,"X509_EXTENSION_free","","",null,null],[5,"X509_NAME_add_entry_by_txt","","",null,null],[5,"X509_NAME_get_index_by_NID","","",null,null],[5,"X509_NAME_get_entry","","",null,null],[5,"X509_NAME_ENTRY_get_data","","",null,null],[5,"ASN1_STRING_to_UTF8","","",null,null],[5,"ASN1_STRING_length","","",null,null],[5,"ASN1_STRING_data","","",null,null],[5,"X509_STORE_CTX_get_current_cert","","",null,null],[5,"X509_STORE_CTX_get_error","","",null,null],[5,"X509_STORE_CTX_get_ex_data","","",null,null],[5,"X509_STORE_CTX_get_error_depth","","",null,null],[5,"X509V3_EXT_conf_nid","","",null,null],[5,"X509V3_EXT_conf","","",null,null],[5,"X509V3_set_ctx","","",null,null],[5,"X509_REQ_add_extensions","","",null,null],[5,"X509_REQ_sign","","",null,null],[5,"d2i_X509","","",null,null],[5,"i2d_X509_bio","","",null,null],[5,"i2d_X509_REQ_bio","","",null,null],[5,"i2d_RSA_PUBKEY","","",null,null],[5,"d2i_RSA_PUBKEY","","",null,null],[5,"i2d_RSAPrivateKey","","",null,null],[5,"d2i_RSAPrivateKey","","",null,null],[5,"d2i_PKCS12","","",null,null],[5,"PKCS12_parse","","",null,null],[5,"PKCS12_free","","",null,null],[5,"sk_free","","",null,null],[5,"sk_pop_free","","",null,null],[5,"sk_pop","","",null,null],[5,"GENERAL_NAME_free","","",null,null],[5,"SSLeay","","",null,null],[5,"SSLeay_version","","",null,null],[0,"probe","","",null,null],[3,"ProbeResult","openssl_sys::probe","",null,null],[12,"cert_file","","",14,null],[12,"cert_dir","","",14,null],[5,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound.",null,{"inputs":[],"output":{"name":"vec"}}],[5,"init_ssl_cert_env_vars","","",null,{"inputs":[],"output":null}],[5,"probe","","",null,{"inputs":[],"output":{"name":"proberesult"}}],[6,"ASN1_INTEGER","openssl_sys","",null,null],[6,"ASN1_STRING","","",null,null],[6,"ASN1_TIME","","",null,null],[6,"ASN1_TYPE","","",null,null],[6,"BN_CTX","","",null,null],[6,"BN_GENCB","","",null,null],[6,"COMP_METHOD","","",null,null],[6,"DH","","",null,null],[6,"ENGINE","","",null,null],[6,"EVP_CIPHER_CTX","","",null,null],[6,"EVP_MD","","",null,null],[6,"EVP_PKEY_CTX","","",null,null],[6,"SSL","","",null,null],[6,"SSL_CIPHER","","",null,null],[6,"SSL_CTX","","",null,null],[6,"SSL_METHOD","","",null,null],[6,"X509","","",null,null],[6,"X509_CRL","","",null,null],[6,"X509_EXTENSION","","",null,null],[6,"X509_NAME","","",null,null],[6,"X509_NAME_ENTRY","","",null,null],[6,"X509_REQ","","",null,null],[6,"X509_STORE_CTX","","",null,null],[6,"bio_st","","",null,null],[6,"bio_info_cb","","",null,null],[6,"CRYPTO_EX_new","","",null,null],[6,"CRYPTO_EX_dup","","",null,null],[6,"CRYPTO_EX_free","","",null,null],[6,"PasswordCallback","","",null,null],[17,"BIO_TYPE_NONE","","",null,null],[17,"BIO_CTRL_EOF","","",null,null],[17,"BIO_CTRL_INFO","","",null,null],[17,"BIO_CTRL_FLUSH","","",null,null],[17,"BIO_C_SET_BUF_MEM_EOF_RETURN","","",null,null],[17,"BIO_FLAGS_READ","","",null,null],[17,"BIO_FLAGS_WRITE","","",null,null],[17,"BIO_FLAGS_IO_SPECIAL","","",null,null],[17,"BIO_FLAGS_RWS","","",null,null],[17,"BIO_FLAGS_SHOULD_RETRY","","",null,null],[17,"CRYPTO_LOCK","","",null,null],[17,"EVP_MAX_MD_SIZE","","",null,null],[17,"EVP_PKEY_RSA","","",null,null],[17,"MBSTRING_ASC","","",null,null],[17,"MBSTRING_BMP","","",null,null],[17,"MBSTRING_FLAG","","",null,null],[17,"MBSTRING_UNIV","","",null,null],[17,"MBSTRING_UTF8","","",null,null],[17,"NID_rsaEncryption","","",null,null],[17,"NID_ext_key_usage","","",null,null],[17,"NID_key_usage","","",null,null],[17,"PKCS5_SALT_LEN","","",null,null],[17,"RSA_F4","","",null,null],[17,"SSL_CTRL_SET_TMP_DH","","",null,null],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",null,null],[17,"SSL_CTRL_OPTIONS","","",null,null],[17,"SSL_CTRL_MODE","","",null,null],[17,"SSL_CTRL_SET_READ_AHEAD","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_CB","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",null,null],[17,"SSL_CTRL_CLEAR_OPTIONS","","",null,null],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",null,null],[17,"SSL_MODE_AUTO_RETRY","","",null,null],[17,"SSL_ERROR_NONE","","",null,null],[17,"SSL_ERROR_SSL","","",null,null],[17,"SSL_ERROR_SYSCALL","","",null,null],[17,"SSL_ERROR_WANT_ACCEPT","","",null,null],[17,"SSL_ERROR_WANT_CONNECT","","",null,null],[17,"SSL_ERROR_WANT_READ","","",null,null],[17,"SSL_ERROR_WANT_WRITE","","",null,null],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",null,null],[17,"SSL_ERROR_ZERO_RETURN","","",null,null],[17,"SSL_VERIFY_NONE","","",null,null],[17,"SSL_VERIFY_PEER","","",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"TLSEXT_NAMETYPE_host_name","","",null,null],[17,"SSL_TLSEXT_ERR_OK","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",null,null],[17,"SSL_TLSEXT_ERR_NOACK","","",null,null],[17,"SSLEAY_VERSION","","",null,null],[17,"SSLEAY_CFLAGS","","",null,null],[17,"SSLEAY_BUILT_ON","","",null,null],[17,"SSLEAY_PLATFORM","","",null,null],[17,"SSLEAY_DIR","","",null,null],[17,"V_ASN1_GENERALIZEDTIME","","",null,null],[17,"V_ASN1_UTCTIME","","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[17,"X509_FILETYPE_PEM","","",null,null],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",null,null],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",null,null],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",null,null],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CERT_REJECTED","","",null,null],[17,"X509_V_ERR_CERT_REVOKED","","",null,null],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CERT_UNTRUSTED","","",null,null],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",null,null],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",null,null],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",null,null],[17,"X509_V_ERR_INVALID_CA","","",null,null],[17,"X509_V_ERR_INVALID_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_NON_CA","","",null,null],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_PURPOSE","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",null,null],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",null,null],[17,"X509_V_ERR_OUT_OF_MEM","","",null,null],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",null,null],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",null,null],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",null,null],[17,"X509_V_ERR_SUBTREE_MINMAX","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"X509_V_OK","","",null,null],[17,"GEN_OTHERNAME","","",null,null],[17,"GEN_EMAIL","","",null,null],[17,"GEN_DNS","","",null,null],[17,"GEN_X400","","",null,null],[17,"GEN_DIRNAME","","",null,null],[17,"GEN_EDIPARTY","","",null,null],[17,"GEN_URI","","",null,null],[17,"GEN_IPADD","","",null,null],[17,"GEN_RID","","",null,null],[11,"clone","","",4,null],[11,"clone","","",15,null],[11,"clone","","",11,null],[11,"clone","","",16,null],[11,"clone","","",12,null],[11,"clone","","",17,null],[11,"clone","","",13,null]],"paths":[[3,"stack_st_X509"],[3,"stack_st_X509_EXTENSION"],[3,"stack_st_GENERAL_NAME"],[3,"stack_st_void"],[3,"BIO_METHOD"],[3,"_STACK"],[3,"RSA"],[3,"DSA"],[3,"EVP_PKEY"],[3,"BIO"],[3,"CRYPTO_EX_DATA"],[3,"EVP_CIPHER"],[3,"GENERAL_NAME"],[3,"BIGNUM"],[3,"ProbeResult"],[3,"EVP_MD_CTX"],[3,"HMAC_CTX"],[3,"X509V3_CTX"]]};
searchIndex["term_size"] = {"doc":"System calls for getting the terminal size.","items":[[5,"dimensions","term_size","Query the current processes&#39;s output, returning its width and height as a\nnumber of characters. Returns `None` if the output isn&#39;t to a terminal.",null,{"inputs":[],"output":{"name":"option"}}],[5,"ioctl","","",null,null]],"paths":[]};
searchIndex["miniz_sys"] = {"doc":"","items":[[3,"mz_stream","miniz_sys","",null,null],[12,"next_in","","",0,null],[12,"avail_in","","",0,null],[12,"total_in","","",0,null],[12,"next_out","","",0,null],[12,"avail_out","","",0,null],[12,"total_out","","",0,null],[12,"msg","","",0,null],[12,"state","","",0,null],[12,"zalloc","","",0,null],[12,"zfree","","",0,null],[12,"opaque","","",0,null],[12,"data_type","","",0,null],[12,"adler","","",0,null],[12,"reserved","","",0,null],[4,"mz_internal_state","","",null,null],[5,"mz_deflateInit2","","",null,null],[5,"mz_deflate","","",null,null],[5,"mz_deflateEnd","","",null,null],[5,"mz_deflateReset","","",null,null],[5,"mz_inflateInit2","","",null,null],[5,"mz_inflate","","",null,null],[5,"mz_inflateEnd","","",null,null],[5,"mz_crc32","","",null,null],[6,"mz_alloc_func","","",null,null],[6,"mz_free_func","","",null,null],[17,"MZ_NO_FLUSH","","",null,null],[17,"MZ_PARTIAL_FLUSH","","",null,null],[17,"MZ_SYNC_FLUSH","","",null,null],[17,"MZ_FULL_FLUSH","","",null,null],[17,"MZ_FINISH","","",null,null],[17,"MZ_BLOCK","","",null,null],[17,"MZ_OK","","",null,null],[17,"MZ_STREAM_END","","",null,null],[17,"MZ_NEED_DICT","","",null,null],[17,"MZ_ERRNO","","",null,null],[17,"MZ_STREAM_ERROR","","",null,null],[17,"MZ_DATA_ERROR","","",null,null],[17,"MZ_MEM_ERROR","","",null,null],[17,"MZ_BUF_ERROR","","",null,null],[17,"MZ_VERSION_ERROR","","",null,null],[17,"MZ_PARAM_ERROR","","",null,null],[17,"MZ_DEFLATED","","",null,null],[17,"MZ_DEFAULT_WINDOW_BITS","","",null,null],[17,"MZ_DEFAULT_STRATEGY","","",null,null]],"paths":[[3,"mz_stream"]]};
searchIndex["thread_id"] = {"doc":"Thread-ID: get a unique ID for the current thread.","items":[[5,"get","thread_id","Returns a number that is unique to the calling thread.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex["solicit"] = {"doc":"","items":[[0,"http","solicit","The module implements the framing layer of HTTP/2 and exposes an API for using it.",null,null],[3,"Response","solicit::http","A struct representing the full raw response received on an HTTP/2 connection.",null,null],[12,"stream_id","","The ID of the stream to which the response is associated. HTTP/1.1 does\nnot really have an equivalent to this.",0,null],[12,"headers","","Exposes *all* the raw response headers, including the meta-headers.\n(For now the only meta header allowed in HTTP/2 responses is the\n`:status`.)",0,null],[12,"body","","The full body of the response as an uninterpreted sequence of bytes.",0,null],[3,"Request","","A struct representing a full HTTP/2 request, along with the full body, as a\nsequence of bytes.",null,null],[12,"stream_id","","",1,null],[12,"headers","","",1,null],[12,"body","","",1,null],[4,"HttpError","","An enum representing errors that can arise when performing operations\ninvolving an HTTP/2 connection.",null,null],[13,"IoError","","",2,null],[13,"InvalidFrame","","",2,null],[13,"CompressionError","","",2,null],[13,"UnknownStreamId","","",2,null],[13,"UnableToConnect","","",2,null],[13,"MalformedResponse","","",2,null],[13,"Other","","",2,null],[4,"HttpScheme","","An enum representing the two possible HTTP schemes.",null,null],[13,"Http","","The variant corresponding to `http://`",3,null],[13,"Https","","The variant corresponding to `https://`",3,null],[0,"frame","","The module contains the implementation of HTTP/2 frames.",null,null],[3,"RawFrame","solicit::http::frame","A struct that defines the format of the raw HTTP/2 frame, i.e. the frame\nas it is read from the wire.",null,null],[5,"unpack_header","","Deconstructs a `FrameHeader` into its corresponding 4 components,\nrepresented as a 4-tuple: `(length, frame_type, flags, stream_id)`.",null,{"inputs":[{"name":"frameheaderbuffer"}],"output":{"name":"frameheader"}}],[5,"pack_header","","Constructs a buffer of 9 bytes that represents the given `FrameHeader`.",null,{"inputs":[{"name":"frameheader"}],"output":{"name":"frameheaderbuffer"}}],[0,"data","","The module contains the implementation of the `DATA` frame and associated flags.",null,null],[3,"DataFrame","solicit::http::frame::data","A struct representing the DATA frames of HTTP/2, as defined in the HTTP/2\nspec, section 6.1.",null,null],[12,"data","","The data found in the frame as an opaque byte sequence. It never\nincludes padding bytes.",4,null],[4,"DataFlag","","An enum representing the flags that a `DataFrame` can have.\nThe integer representation associated to each variant is that flag&#39;s\nbitmask.",null,null],[13,"EndStream","","",5,null],[13,"Padded","","",5,null],[11,"fmt","","",5,null],[11,"eq","","",5,null],[11,"clone","","",5,null],[11,"bitmask","","",5,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"new","","Creates a new empty `DataFrame`, associated to the stream with the\ngiven ID.",4,{"inputs":[{"name":"streamid"}],"output":{"name":"dataframe"}}],[11,"is_padded","","Returns `true` if the DATA frame is padded, otherwise false.",4,null],[11,"is_end_of_stream","","Returns whther this frame ends the stream it is associated with.",4,null],[11,"set_padding","","Sets the number of bytes that should be used as padding for this\nframe.",4,null],[11,"from_raw","","Creates a new `DataFrame` from the given `RawFrame` (i.e. header and\npayload), if possible.  Returns `None` if a valid `DataFrame` cannot be\nconstructed from the given `RawFrame`.",4,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[11,"is_set","","Tests if the given flag is set for the frame.",4,null],[11,"set_flag","","Sets the given flag for the frame.",4,null],[11,"get_stream_id","","Returns the `StreamId` of the stream to which the frame is associated.",4,null],[11,"get_header","","Returns a `FrameHeader` based on the current state of the frame.",4,null],[11,"serialize","","Returns a `Vec` with the serialized representation of the frame.",4,null],[0,"headers","solicit::http::frame","The module contains the implementation of the `HEADERS` frame and associated flags.",null,null],[3,"StreamDependency","solicit::http::frame::headers","The struct represents the dependency information that can be attached to\na stream and sent within a HEADERS frame (one with the Priority flag set).",null,null],[12,"stream_id","","The ID of the stream that a particular stream depends on",6,null],[12,"weight","","The weight for the stream. The value exposed (and set) here is always\nin the range [0, 255], instead of [1, 256] \\(as defined in section 5.3.2.)\nso that the value fits into a `u8`.",6,null],[12,"is_exclusive","","A flag indicating whether the stream dependency is exclusive.",6,null],[3,"HeadersFrame","","A struct representing the HEADERS frames of HTTP/2, as defined in the\nHTTP/2 spec, section 6.2.",null,null],[12,"header_fragment","","The header fragment bytes stored within the frame.",7,null],[12,"stream_id","","The ID of the stream with which this frame is associated",7,null],[12,"stream_dep","","The stream dependency information, if any.",7,null],[12,"padding_len","","The length of the padding, if any.",7,null],[4,"HeadersFlag","","An enum representing the flags that a `HeadersFrame` can have.\nThe integer representation associated to each variant is that flag&#39;s\nbitmask.",null,null],[13,"EndStream","","",8,null],[13,"EndHeaders","","",8,null],[13,"Padded","","",8,null],[13,"Priority","","",8,null],[11,"fmt","","",8,null],[11,"eq","","",8,null],[11,"clone","","",8,null],[11,"bitmask","","",8,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"new","","Creates a new `StreamDependency` with the given stream ID, weight, and\nexclusivity.",6,{"inputs":[{"name":"streamid"},{"name":"u8"},{"name":"bool"}],"output":{"name":"streamdependency"}}],[11,"parse","","Parses the first 5 bytes in the buffer as a `StreamDependency`.\n(Each 5-byte sequence is always decodable into a stream dependency\nstructure).",6,null],[11,"serialize","","Serializes the `StreamDependency` into a 5-byte buffer representing the\ndependency description, as described in section 6.2. of the HTTP/2\nspec:",6,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"new","","Creates a new `HeadersFrame` with the given header fragment and stream\nID. No padding, no stream dependency, and no flags are set.",7,{"inputs":[{"name":"vec"},{"name":"streamid"}],"output":{"name":"headersframe"}}],[11,"with_dependency","","Creates a new `HeadersFrame` with the given header fragment, stream ID\nand stream dependency information. No padding and no flags are set.",7,{"inputs":[{"name":"vec"},{"name":"streamid"},{"name":"streamdependency"}],"output":{"name":"headersframe"}}],[11,"is_headers_end","","Returns whether this frame ends the headers. If not, there MUST be a\nnumber of follow up CONTINUATION frames that send the rest of the\nheader data.",7,null],[11,"is_end_of_stream","","Returns whther this frame ends the stream it is associated with.",7,null],[11,"set_padding","","Sets the padding length for the frame, as well as the corresponding\nPadded flag.",7,null],[11,"from_raw","","Creates a new `HeadersFrame` with the given `RawFrame` (i.e. header and\npayload), if possible.",7,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[11,"is_set","","Tests if the given flag is set for the frame.",7,null],[11,"get_stream_id","","Returns the `StreamId` of the stream to which the frame is associated.",7,null],[11,"get_header","","Returns a `FrameHeader` based on the current state of the `Frame`.",7,null],[11,"set_flag","","Sets the given flag for the frame.",7,null],[11,"serialize","","Returns a `Vec` with the serialized representation of the frame.",7,null],[0,"settings","solicit::http::frame","The module contains the implementation of the `SETTINGS` frame and associated flags.",null,null],[3,"SettingsFrame","solicit::http::frame::settings","A struct representing the SETTINGS frames of HTTP/2, as defined in the\nHTTP/2 spec, section 6.5.",null,null],[12,"settings","","Contains all the settings that are currently set in the frame. It is\nsafe to access this field (to read, add, or remove settings), even\nthough a helper method `add_setting` exists.",9,null],[4,"HttpSetting","","An enum that lists all valid settings that can be sent in a SETTINGS\nframe.",null,null],[13,"HeaderTableSize","","",10,null],[13,"EnablePush","","",10,null],[13,"MaxConcurrentStreams","","",10,null],[13,"InitialWindowSize","","",10,null],[13,"MaxFrameSize","","",10,null],[13,"MaxHeaderListSize","","",10,null],[4,"SettingsFlag","","An enum representing the flags that a `SettingsFrame` can have.\nThe integer representation associated to each variant is that flag&#39;s\nbitmask.",null,null],[13,"Ack","","",11,null],[11,"fmt","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"from_id","","Creates a new `HttpSetting` with the correct variant corresponding to\nthe given setting id, based on the settings IDs defined in section\n6.5.2.",10,{"inputs":[{"name":"u16"},{"name":"u32"}],"output":{"name":"option"}}],[11,"get_id","","Returns the setting ID as an unsigned 16 bit integer, as defined in\nsection 6.5.2.",10,null],[11,"get_val","","Gets the setting value by unpacking it from the wrapped `u32`.",10,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"clone","","",11,null],[11,"bitmask","","",11,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"new","","Creates a new `SettingsFrame`",9,{"inputs":[],"output":{"name":"settingsframe"}}],[11,"new_ack","","A convenience constructor that returns a `SettingsFrame` with the ACK\nflag already set and no settings.",9,{"inputs":[],"output":{"name":"settingsframe"}}],[11,"add_setting","","Adds the given setting to the frame.",9,null],[11,"set_ack","","Sets the ACK flag for the frame. This method is just a convenience\nmethod for calling `frame.set_flag(SettingsFlag::Ack)`.",9,null],[11,"is_ack","","Checks whether the `SettingsFrame` has an ACK attached to it.",9,null],[11,"from_raw","","Creates a new `SettingsFrame` with the given `RawFrame` (i.e. header and\npayload), if possible.",9,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[11,"is_set","","Tests if the given flag is set for the frame.",9,null],[11,"get_stream_id","","Returns the `StreamId` of the stream to which the frame is associated.",9,null],[11,"get_header","","Returns a `FrameHeader` based on the current state of the `Frame`.",9,null],[11,"set_flag","","Sets the given flag for the frame.",9,null],[11,"serialize","","Returns a `Vec` with the serialized representation of the frame.",9,null],[6,"FrameHeaderBuffer","solicit::http::frame","An alias for the 9-byte buffer that each HTTP/2 frame header must be stored\nin.",null,null],[6,"FrameHeader","","An alias for the 4-tuple representing the components of each HTTP/2 frame\nheader.",null,null],[8,"Flag","","A trait that all HTTP/2 frame header flags need to implement.",null,null],[10,"bitmask","","Returns a bit mask that represents the flag.",12,null],[8,"Frame","","A trait that all HTTP/2 frame structs need to implement.",null,null],[16,"FlagType","","The type that represents the flags that the particular `Frame` can take.\nThis makes sure that only valid `Flag`s are used with each `Frame`.",13,null],[10,"from_raw","","Creates a new `Frame` from the given `RawFrame` (i.e. header and\npayload), if possible.",13,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[10,"is_set","","Tests if the given flag is set for the frame.",13,null],[10,"get_stream_id","","Returns the `StreamId` of the stream to which the frame is associated",13,null],[10,"get_header","","Returns a `FrameHeader` based on the current state of the `Frame`.",13,null],[10,"set_flag","","Sets the given flag for the frame.",13,null],[10,"serialize","","Returns a `Vec` with the serialized representation of the frame.",13,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"new","","Creates a new `RawFrame` with the given `FrameHeader`. The payload is\nleft empty.",14,{"inputs":[{"name":"frameheader"}],"output":{"name":"rawframe"}}],[11,"with_payload","","Creates a new `RawFrame` with the given header and payload.\nDoes not do any validation to determine whether the frame is in a correct\nstate as constructed.",14,{"inputs":[{"name":"frameheader"},{"name":"vec"}],"output":{"name":"rawframe"}}],[11,"from_buf","","Creates a new `RawFrame` by parsing the given buffer.",14,null],[11,"serialize","","Returns a `Vec` of bytes representing the serialized (on-the-wire)\nrepresentation of this raw frame.",14,null],[11,"header","","Returns a `FrameHeader` instance corresponding to the headers of the\n`RawFrame`.",14,null],[11,"payload","","Returns a slice representing the payload of the `RawFrame`.",14,null],[11,"into","","",14,null],[11,"from","","",14,{"inputs":[{"name":"vec"}],"output":{"name":"rawframe"}}],[0,"transport","solicit::http","The module contains implementations of the transport layer functionality\nthat HTTP/2 requires. It exposes APIs that allow the HTTP/2 connection to\nuse the transport layer without requiring it to know which exact\nimplementation they are using (e.g. a clear-text TCP connection, a TLS\nprotected connection, or even a mock implementation).",null,null],[8,"TransportStream","solicit::http::transport","A trait that any struct that wants to provide the transport layer for\nHTTP/2 needs to implement.",null,null],[11,"read_exact","","A convenience method that performs as many `read` calls on the\nunderlying `Read` implementation as it takes to fill the given buffer.",15,null],[10,"try_split","","Attempts to split the `TransportStream` instance into a new independently\nowned handle to the same underlying stream.",15,null],[10,"close","","Attempts to shutdown both ends of the transport stream.",15,null],[0,"connection","solicit::http","The module contains the implementation of an HTTP/2 connection.",null,null],[3,"HttpConnection","solicit::http::connection","The struct implements the HTTP/2 connection level logic.",null,null],[12,"receiver","","The instance handling the reading of frames.",16,null],[12,"sender","","The instance handling the writing of frames.",16,null],[12,"scheme","","The scheme of the connection",16,null],[3,"DataChunk","","The struct represents a chunk of data that should be sent to the peer on a particular stream.",null,null],[12,"data","","The data that should be sent.",17,null],[12,"stream_id","","The ID of the stream on which the data should be sent.",17,null],[12,"end_stream","","Whether the data chunk will also end the stream.",17,null],[4,"HttpFrame","","An enum representing all frame variants that can be returned by an\n`HttpConnection`.",null,null],[13,"DataFrame","","",18,null],[13,"HeadersFrame","","",18,null],[13,"SettingsFrame","","",18,null],[13,"UnknownFrame","","",18,null],[4,"SendStatus","","The enum represents the success status of the operation of sending a next data chunk on an\nHTTP/2 connection.",null,null],[13,"Sent","","Indicates that a DATA frame was successfully sent",19,null],[13,"Nothing","","Indicates that nothing was sent, but that no errors occurred.",19,null],[4,"EndStream","","An enum indicating whether the `HttpConnection` send operation should end the stream.",null,null],[13,"Yes","","The stream should be closed",20,null],[13,"No","","The stream should still be kept open",20,null],[8,"SendFrame","","A trait that should be implemented by types that can provide the functionality\nof sending HTTP/2 frames.",null,null],[10,"send_raw_frame","","Sends the given raw frame.",21,null],[11,"send_frame","","Sends the given concrete frame.",21,null],[8,"ReceiveFrame","","A trait that should be implemented by types that can provide the functionality\nof receiving HTTP/2 frames.",null,null],[10,"recv_frame","","Return a new `HttpFrame` instance. Unknown frames can be wrapped in the\n`HttpFrame::UnknownFrame` variant (i.e. their `RawFrame` representation).",22,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"from_raw","","",18,{"inputs":[{"name":"rawframe"}],"output":{"name":"httpresult"}}],[11,"clone","","",19,null],[11,"eq","","",19,null],[11,"fmt","","",19,null],[11,"new","","Creates a new `DataChunk`.",17,{"inputs":[{"name":"cow"},{"name":"streamid"},{"name":"endstream"}],"output":{"name":"datachunk"}}],[11,"new_borrowed","","Creates a new `DataChunk` from a borrowed slice. This method should become obsolete if we\ncan take an `Into&lt;Cow&lt;_, _&gt;&gt;` without using unstable features.",17,{"inputs":[{"name":"d"},{"name":"streamid"},{"name":"endstream"}],"output":{"name":"datachunk"}}],[11,"clone","","",20,null],[11,"eq","","",20,null],[11,"fmt","","",20,null],[11,"new","","Creates a new `HttpConnection` that will use the given sender and receiver instances\nfor writing and reading frames, respectively.",16,{"inputs":[{"name":"s"},{"name":"r"},{"name":"httpscheme"}],"output":{"name":"httpconnection"}}],[11,"with_stream","","Creates a new `HttpConnection` that will use the given stream as its\nunderlying transport layer.",16,{"inputs":[{"name":"ts"},{"name":"httpscheme"}],"output":{"name":"httpconnection"}}],[11,"send_headers","","A helper function that inserts the frames required to send the given headers onto the\n`SendFrame` stream.",16,null],[11,"send_data","","A helper function that inserts a frame representing the given data into the `SendFrame`\nstream.",16,null],[11,"send_next_data","","Sends the chunk of data provided by the given `DataPrioritizer`.",16,null],[11,"expect_settings","","The method processes the next incoming frame, expecting it to be a SETTINGS frame.\nAdditionally, the frame cannot be an ACK settings frame, but rather it should contain the\npeer&#39;s settings.",16,null],[11,"handle_next_frame","","Handles the next frame incoming on the `ReceiveFrame` instance.",16,null],[0,"session","solicit::http","Defines the interface for the session-level management of HTTP/2\ncommunication. This is effectively an API that allows hooking into an\nHTTP/2 connection in order to handle events arising on the connection.",null,null],[3,"StreamIter","solicit::http::session","A newtype for an iterator over `Stream`s saved in a `SessionState`.",null,null],[3,"DefaultSessionState","","An implementation of the `SessionState` trait that tracks the active streams in a `HashMap`,\nmapping the stream ID to the concrete `Stream` instance.",null,null],[3,"DefaultStream","","An implementation of the `Stream` trait that saves all headers and data\nin memory.",null,null],[12,"stream_id","","The ID of the stream",23,null],[12,"headers","","The headers associated with the stream (i.e. the response headers)",23,null],[12,"body","","The body of the stream (i.e. the response body)",23,null],[12,"state","","The current stream state.",23,null],[4,"StreamState","","The enum represents all the states that an HTTP/2 stream can be found in.",null,null],[13,"Idle","","",24,null],[13,"ReservedLocal","","",24,null],[13,"ReservedRemote","","",24,null],[13,"Open","","",24,null],[13,"HalfClosedRemote","","",24,null],[13,"HalfClosedLocal","","",24,null],[13,"Closed","","",24,null],[4,"StreamDataError","","The enum represents errors that can be returned from the `Stream::get_data_chunk` method.",null,null],[13,"Closed","","Indicates that the stream cannot provide any data, since it is closed for further writes\nfrom the peer&#39;s side.",25,null],[13,"Other","","A different error while trying to obtain the data chunk. Wraps a boxed `Error` impl.",25,null],[4,"StreamDataChunk","","The enum represents the successful completion of the `Stream::get_data_chunk` method.",null,null],[13,"Chunk","","A data chunk of the given size, after which more chunks can follow.",26,null],[13,"Last","","The chunk was the last one that the stream will ever write.",26,null],[13,"Unavailable","","No data currently available, but the stream isn&#39;t closed yet",26,null],[8,"Session","","A trait that defines the interface between an `HttpConnection` and the higher-levels that use\nit. Essentially, it allows the `HttpConnection` to pass information onto those higher levels\nthrough a well-defined interface.",null,null],[10,"new_data_chunk","","Notifies the `Session` that a new data chunk has arrived on the\nconnection for a particular stream. Only the raw data is passed\nto the callback (all padding is already discarded by the connection).",27,null],[10,"new_headers","","Notifies the `Session` that headers have arrived for a particular\nstream. The given list of headers is already decoded by the connection.",27,null],[10,"end_of_stream","","Notifies the `Session` that a particular stream got closed by the peer.",27,null],[8,"SessionState","","A trait defining a set of methods for accessing and influencing an HTTP/2 session&#39;s state.",null,null],[16,"Stream","","The type of the `Stream` that the `SessionState` manages.",28,null],[10,"insert_stream","","Inserts the given `Stream` into the session&#39;s state, starting to track it.",28,null],[10,"get_stream_ref","","Returns a reference to a `Stream` with the given `StreamId`, if it is found in the current\nsession.",28,null],[10,"get_stream_mut","","Returns a mutable reference to a `Stream` with the given `StreamId`, if it is found in the\ncurrent session.",28,null],[10,"remove_stream","","Removes the stream with the given `StreamId` from the session. If the stream was found in\nthe session, it is returned in the result.",28,null],[10,"iter","","Returns an iterator over the streams currently found in the session.",28,null],[11,"get_closed","","Returns all streams that are closed and tracked by the session state.",28,null],[8,"Stream","","A trait representing a single HTTP/2 stream. An HTTP/2 connection multiplexes a number of\nstreams.",null,null],[10,"new","","Create a new stream with the given ID",29,{"inputs":[{"name":"streamid"}],"output":{"name":"self"}}],[10,"new_data_chunk","","Handle a new data chunk that has arrived for the stream.",29,null],[10,"set_headers","","Set headers for a stream. A stream is only allowed to have one set of\nheaders.",29,null],[10,"set_state","","Sets the stream state to the newly provided state.",29,null],[10,"get_data_chunk","","Places the next data chunk that should be written onto the stream into the given buffer.",29,null],[10,"id","","Returns the ID of the stream.",29,null],[10,"state","","Returns the current state of the stream.",29,null],[11,"close","","Transitions the stream state to closed. After this, the stream is considered to be closed\nfor any further reads or writes.",29,null],[11,"close_local","","Updates the `Stream` status to indicate that it is closed locally.",29,null],[11,"close_remote","","Updates the `Stream` status to indicate that it is closed on the remote peer&#39;s side.",29,null],[11,"is_closed","","Returns whether the stream is closed.",29,null],[11,"is_closed_local","","Returns whether the stream is closed locally.",29,null],[11,"is_closed_remote","","Returns whether the remote peer has closed the stream. This includes a fully closed stream.",29,null],[11,"next","","",30,null],[11,"new","","Creates a new `DefaultSessionState` with no known streams.",31,{"inputs":[],"output":{"name":"defaultsessionstate"}}],[11,"insert_stream","","",31,null],[11,"get_stream_ref","","",31,null],[11,"get_stream_mut","","",31,null],[11,"remove_stream","","",31,null],[11,"iter","","",31,null],[11,"clone","","",24,null],[11,"eq","","",24,null],[11,"fmt","","",24,null],[11,"fmt","","",25,null],[11,"from","","",25,{"inputs":[{"name":"e"}],"output":{"name":"streamdataerror"}}],[11,"clone","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"fmt","","",26,null],[11,"clone","","",23,null],[11,"new","","Create a new `DefaultStream` with the given ID.",23,{"inputs":[{"name":"streamid"}],"output":{"name":"defaultstream"}}],[11,"set_full_data","","Sets the outgoing data of the stream to the given `Vec`.",23,null],[11,"new","","",23,{"inputs":[{"name":"streamid"}],"output":{"name":"defaultstream"}}],[11,"new_data_chunk","","",23,null],[11,"set_headers","","",23,null],[11,"set_state","","",23,null],[11,"id","","",23,null],[11,"state","","",23,null],[11,"get_data_chunk","","",23,null],[0,"priority","solicit::http","The module exposes an API for defining data prioritization strategies.",null,null],[3,"SimplePrioritizer","solicit::http::priority","An implementation of the `DataPrioritizer` trait that is based on finding the first stream from\nthe given `SessionState` instance that can send data and returning this chunk.",null,null],[8,"DataPrioritizer","","A trait that types that want to provide data to an HTTP/2 connection need to implement.",null,null],[10,"get_next_chunk","","Returns the next `DataChunk` that should be sent on the HTTP/2 connection. `None` indicates\nthat currently there was no data that could be sent at that point.",32,null],[11,"new","","Creates a new `SimplePrioritizer` that will use the given state to find stream data that\nshould be sent and use the given buffer to hold the data of the returned chunk.",33,null],[11,"get_next_chunk","","",33,null],[0,"client","solicit::http","The module contains a number of reusable components for implementing the client side of an\nHTTP/2 connection.",null,null],[3,"ClientStream","solicit::http::client","A convenience wrapper type that represents an established client network transport stream.\nIt wraps the stream itself, the scheme of the protocol to be used, and the remote\nhost name.",null,null],[12,"0","","",34,null],[12,"1","","",34,null],[12,"2","","",34,null],[3,"CleartextConnector","","A struct that establishes a cleartext TCP connection that can be used by an HTTP/2\nconnection. Defaults to using port 80.",null,null],[12,"host","","The host to which the connection should be established",35,null],[12,"port","","The port on which the connection should be established",35,null],[3,"CleartextConnectError","","A newtype wrapping the `io::Error`, as it occurs when attempting to\nestablish an HTTP/2 connection over cleartext TCP (with prior knowledge).",null,null],[3,"RequestStream","","A struct representing a request stream. It provides the headers that are to be sent when\ninitiating the request, as well as a `Stream` instance that handles the received response and\nprovides the request body.",null,null],[12,"headers","","The list of headers that will be sent with the request.",36,null],[12,"stream","","The underlying `Stream` instance, which will handle the response, as well as optionally\nprovide the body of the request.",36,null],[3,"ClientConnection","","The struct extends the `HttpConnection` API with client-specific methods (such as\n`start_request`) and wires the `HttpConnection` to the client `Session` callbacks.",null,null],[12,"state","","The state of the session associated to this client connection. Maintains the status of the\nconnection streams.",37,null],[3,"ClientSession","","An implementation of the `Session` trait specific to handling client HTTP/2 connections.",null,null],[5,"write_preface","","Writes the client preface to the underlying HTTP/2 connection.",null,{"inputs":[{"name":"w"}],"output":{"name":"result"}}],[8,"HttpConnectError","","A marker trait for errors raised by attempting to establish an HTTP/2\nconnection.",null,null],[8,"HttpConnect","","A trait that can be implemented by structs that want to provide the\nfunctionality of establishing network connections for use by HTTP/2 connections.",null,null],[16,"Stream","","The type of the underlying transport stream that the `HttpConnection`s\nproduced by this `HttpConnect` implementation will be based on.",38,null],[16,"Err","","The type of the error that can be produced by trying to establish the\nconnection (i.e. calling the `connect` method).",38,null],[10,"connect","","Establishes a network connection that can be used by HTTP/2 connections.",38,null],[11,"from","solicit::http","",2,{"inputs":[{"name":"e"}],"output":{"name":"httperror"}}],[11,"new","solicit::http::client","Creates a new `CleartextConnector` that will attempt to establish a connection to the given\nhost on port 80.",35,{"inputs":[{"name":"str"}],"output":{"name":"cleartextconnector"}}],[11,"with_port","","Creates a new `CleartextConnector` that will attempt to establish a connection to the given\nhost on the given port.",35,{"inputs":[{"name":"str"},{"name":"u16"}],"output":{"name":"cleartextconnector"}}],[11,"fmt","","",39,null],[11,"fmt","","",39,null],[11,"description","","",39,null],[11,"cause","","",39,null],[11,"from","","",39,{"inputs":[{"name":"error"}],"output":{"name":"cleartextconnecterror"}}],[11,"connect","","Establishes a cleartext TCP connection based on the host and port.\nIf it is not possible, returns an `HttpError`.",35,null],[11,"with_connection","","Creates a new `ClientConnection` that will use the given `HttpConnection`\nfor all its underlying HTTP/2 communication.",37,{"inputs":[{"name":"httpconnection"},{"name":"state"}],"output":{"name":"clientconnection"}}],[11,"scheme","","Returns the scheme of the underlying `HttpConnection`.",37,null],[11,"init","","Performs the initialization of the `ClientConnection`.",37,null],[11,"start_request","","Starts a new request based on the given `RequestStream`.",37,null],[11,"handle_next_frame","","Fully handles the next incoming frame. Events are passed on to the internal `session`\ninstance.",37,null],[11,"send_next_data","","Queues a new DATA frame onto the underlying `SendFrame`.",37,null],[11,"new","","Returns a new `ClientSession` associated to the given state.",40,{"inputs":[{"name":"state"}],"output":{"name":"clientsession"}}],[11,"new_data_chunk","","",40,null],[11,"new_headers","","",40,null],[11,"end_of_stream","","",40,null],[0,"server","solicit::http","The module contains a number of reusable components for implementing the server side of an\nHTTP/2 connection.",null,null],[3,"ServerSession","solicit::http::server","An implementation of the `Session` trait for a server-side HTTP/2 connection.",null,null],[3,"ServerConnection","","The struct provides a more convenient API for server-related functionality of an HTTP/2\nconnection, such as sending a response back to the client.",null,null],[12,"state","","The state of the session associated to this client connection. Maintains the status of the\nconnection streams.",41,null],[11,"new","","",42,{"inputs":[{"name":"state"}],"output":{"name":"serversession"}}],[11,"new_data_chunk","","",42,null],[11,"new_headers","","",42,null],[11,"end_of_stream","","",42,null],[11,"with_connection","","Creates a new `ServerConnection` that will use the given `HttpConnection` for its\nunderlying HTTP/2 communication.",41,{"inputs":[{"name":"httpconnection"},{"name":"state"}],"output":{"name":"serverconnection"}}],[11,"scheme","","Returns the scheme of the underlying `HttpConnection`.",41,null],[11,"init","","Initializes the `ServerConnection` by sending the server&#39;s settings and processing the\nclient&#39;s.\nIf the client does not provide a settings frame, returns an error.",41,null],[11,"handle_next_frame","","Fully handles the next incoming frame. Events are passed on to the internal `session`\ninstance.",41,null],[11,"start_response","","Starts a response on the stream with the given ID by sending the given headers.",41,null],[11,"send_next_data","","Queues a new DATA frame onto the underlying `SendFrame`.",41,null],[6,"StreamId","solicit::http","An alias for the type that represents the ID of an HTTP/2 stream",null,null],[6,"Header","","An alias for the type that represents HTTP/2 headers. For now we only alias\nthe tuple of byte vectors instead of going with a full struct representation.",null,null],[6,"HttpResult","","A convenience `Result` type that has the `HttpError` type as the error\ntype and a generic Ok result type.",null,null],[17,"ALPN_PROTOCOLS","","A set of protocol names that the library should use to indicate that HTTP/2\nis supported during protocol negotiation (NPN or ALPN).\nWe include some of the drafts&#39; protocol names, since there is basically no\ndifference for all intents and purposes (and some servers out there still\nonly officially advertise draft support).\nTODO: Eventually only use &quot;h2&quot;.",null,null],[11,"fmt","","",2,null],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"httperror"}}],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"cause","","",2,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"as_bytes","","Returns a byte string representing the scheme.",3,null],[11,"clone","","",0,null],[11,"new","","Creates a new `Response` with all the components already provided.",0,{"inputs":[{"name":"streamid"},{"name":"vec"},{"name":"vec"}],"output":{"name":"response"}}],[11,"status_code","","Gets the response status code from the pseudo-header. If the response\ndoes not contain the response as the first pseuo-header, an error is\nreturned as such a response is malformed.",0,null],[11,"clone","","",1,null],[0,"client","solicit","The module contains implementations of HTTP/2 clients that could be\ndirectly used to access HTTP/2 servers, i.e. send requests and read\nresponses.",null,null],[3,"SimpleClient","solicit::client","A struct implementing a simple HTTP/2 client.",null,null],[3,"Client","","A struct representing an HTTP/2 client that receives responses to its\nrequests asynchronously. Additionally, this client can be cloned and all\nclones can issue (concurrently) requests to the server, using the same\nunderlying HTTP/2 connection.",null,null],[11,"with_connection","","Create a new `SimpleClient` instance that will use the given `HttpConnection`\nto communicate to the server.",43,{"inputs":[{"name":"httpconnection"},{"name":"string"}],"output":{"name":"httpresult"}}],[11,"with_connector","","A convenience constructor that first tries to establish an HTTP/2\nconnection by using the given connector instance (an implementation of\nthe `HttpConnect` trait).",43,{"inputs":[{"name":"c"}],"output":{"name":"httpresult"}}],[11,"request","","Send a request to the server. Blocks until the entire request has been\nsent.",43,null],[11,"get_response","","Gets the response for the stream with the given ID. If a valid stream ID\nis given, it blocks until a response is received.",43,null],[11,"get","","Performs a GET request on the given path. This is a shortcut method for\ncalling `request` followed by `get_response` for the returned stream ID.",43,null],[11,"post","","Performs a POST request on the given path.",43,null],[11,"clone","","",44,null],[11,"drop","","",44,null],[11,"with_connector","","Creates a brand new HTTP/2 client. This means that a new HTTP/2\nconnection will be established behind the scenes. A thread is spawned\nto handle the connection in the background, so that the thread that\ncreates the client can use it asynchronously.",44,{"inputs":[{"name":"c"}],"output":{"name":"option"}}],[11,"request","","Issues a new request to the server.",44,null],[11,"get","","Issues a GET request to the server.",44,null],[11,"post","","Issues a POST request to the server.",44,null],[0,"server","solicit","The module contains a simple HTTP/2 server implementation.",null,null],[3,"ServerRequest","solicit::server","The struct represents a fully received request.",null,null],[12,"stream_id","","",45,null],[12,"headers","","",45,null],[12,"body","","",45,null],[3,"SimpleServer","","The struct implements a simple HTTP/2 server that allows users to register a request handler (a\ncallback taking a `ServerRequest` and returning a `Response`) which is run on all received\nrequests.",null,null],[11,"new","","Creates a new `SimpleServer` that will use the given `TransportStream` to communicate to\nthe client. Assumes that the stream is fully uninitialized -- no preface sent or read yet.",46,{"inputs":[{"name":"ts"},{"name":"h"}],"output":{"name":"httpresult"}}],[11,"handle_next","","Handles the next incoming frame, blocking to receive it if nothing is available on the\nunderlying stream.",46,null]],"paths":[[3,"Response"],[3,"Request"],[4,"HttpError"],[4,"HttpScheme"],[3,"DataFrame"],[4,"DataFlag"],[3,"StreamDependency"],[3,"HeadersFrame"],[4,"HeadersFlag"],[3,"SettingsFrame"],[4,"HttpSetting"],[4,"SettingsFlag"],[8,"Flag"],[8,"Frame"],[3,"RawFrame"],[8,"TransportStream"],[3,"HttpConnection"],[3,"DataChunk"],[4,"HttpFrame"],[4,"SendStatus"],[4,"EndStream"],[8,"SendFrame"],[8,"ReceiveFrame"],[3,"DefaultStream"],[4,"StreamState"],[4,"StreamDataError"],[4,"StreamDataChunk"],[8,"Session"],[8,"SessionState"],[8,"Stream"],[3,"StreamIter"],[3,"DefaultSessionState"],[8,"DataPrioritizer"],[3,"SimplePrioritizer"],[3,"ClientStream"],[3,"CleartextConnector"],[3,"RequestStream"],[3,"ClientConnection"],[8,"HttpConnect"],[3,"CleartextConnectError"],[3,"ClientSession"],[3,"ServerConnection"],[3,"ServerSession"],[3,"SimpleClient"],[3,"Client"],[3,"ServerRequest"],[3,"SimpleServer"]]};
searchIndex["num_cpus"] = {"doc":"Replaces the deprecated functionality of std::os::num_cpus.","items":[[5,"get","num_cpus","Returns the number of CPUs of the current machine.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"get_physical","","Returns the number of physical cores of the current machine.\nIf not possible on the particular architecture returns same as get() which\nis the logical CPUs.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","items":[[8,"Integer","num","",null,null],[10,"div_floor","","Floored integer division.",0,null],[10,"mod_floor","","Floored integer modulo, satisfying:",0,null],[10,"gcd","","Greatest Common Divisor (GCD).",0,null],[10,"lcm","","Lowest Common Multiple (LCM).",0,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,null],[10,"is_even","","Returns `true` if the number is even.",0,null],[10,"is_odd","","Returns `true` if the number is odd.",0,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",1,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",1,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,null],[10,"abs_sub","","The positive difference of two numbers.",4,null],[10,"signum","","Returns the sign of the number.",4,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",5,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",5,{"inputs":[],"output":{"name":"self"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",6,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",6,null],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",7,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",8,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",9,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",10,null],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",11,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",11,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",11,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",11,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",11,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",11,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",11,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",11,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",11,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",11,null],[10,"swap_bytes","","Reverses the byte order of the integer.",11,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",11,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",11,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",11,null],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",12,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",12,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",12,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",12,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",12,null],[10,"floor","","Returns the largest integer less than or equal to a number.",12,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",12,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",12,null],[10,"trunc","","Return the integer part of a number.",12,null],[10,"fract","","Returns the fractional part of a number.",12,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",12,null],[10,"signum","","Returns a number that represents the sign of `self`.",12,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",12,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",12,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",12,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",12,null],[10,"powi","","Raise a number to an integer power.",12,null],[10,"powf","","Raise a number to a floating point power.",12,null],[10,"sqrt","","Take the square root of a number.",12,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",12,null],[10,"exp2","","Returns `2^(self)`.",12,null],[10,"ln","","Returns the natural logarithm of the number.",12,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",12,null],[10,"log2","","Returns the base 2 logarithm of the number.",12,null],[10,"log10","","Returns the base 10 logarithm of the number.",12,null],[11,"to_degrees","","Converts radians to degrees.",12,null],[11,"to_radians","","Converts degrees to radians.",12,null],[10,"max","","Returns the maximum of the two numbers.",12,null],[10,"min","","Returns the minimum of the two numbers.",12,null],[10,"abs_sub","","The positive difference of two numbers.",12,null],[10,"cbrt","","Take the cubic root of a number.",12,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",12,null],[10,"sin","","Computes the sine of a number (in radians).",12,null],[10,"cos","","Computes the cosine of a number (in radians).",12,null],[10,"tan","","Computes the tangent of a number (in radians).",12,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",12,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",12,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",12,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",12,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",12,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",12,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",12,null],[10,"sinh","","Hyperbolic sine function.",12,null],[10,"cosh","","Hyperbolic cosine function.",12,null],[10,"tanh","","Hyperbolic tangent function.",12,null],[10,"asinh","","Inverse hyperbolic sine function.",12,null],[10,"acosh","","Inverse hyperbolic cosine function.",12,null],[10,"atanh","","Inverse hyperbolic tangent function.",12,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",12,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"pow","num","",null,null],[5,"pow","num::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"checked_pow","num","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[0,"integer","","",null,null],[0,"iter","","",null,null],[0,"traits","","",null,null]],"paths":[[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"]]};
searchIndex["phf_shared"] = {"doc":"","items":[[5,"displace","phf_shared","",null,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"u32"}}],[5,"split","","",null,null],[5,"hash","","`key` is from `phf_generator::HashState::key`.",null,{"inputs":[{"name":"t"},{"name":"u64"}],"output":{"name":"u64"}}],[5,"get_index","","Return an index into `phf_generator::HashState::map`.",null,null],[8,"PhfHash","","A trait implemented by types which can be used in PHF data structures.",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher as necessary.",0,null],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,null]],"paths":[[8,"PhfHash"]]};
searchIndex["idna"] = {"doc":"This Rust crate implements IDNA\n[per the WHATWG URL Standard](https://url.spec.whatwg.org/#idna).","items":[[5,"domain_to_ascii","idna","The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"domain_to_unicode","","The [domain to Unicode](https://url.spec.whatwg.org/#concept-domain-to-unicode) algorithm.",null,null],[0,"punycode","","Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation.",null,null],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"decode","","Convert Punycode to Unicode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode","","Convert Unicode to Punycode.",null,null],[0,"uts46","idna","[*Unicode IDNA Compatibility Processing*\n(Unicode Technical Standard #46)](http://www.unicode.org/reports/tr46/)",null,null],[3,"Flags","idna::uts46","",null,null],[12,"use_std3_ascii_rules","","",0,null],[12,"transitional_processing","","",0,null],[12,"verify_dns_length","","",0,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",null,{"inputs":[{"name":"str"},{"name":"flags"}],"output":{"name":"result"}}],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",null,null],[11,"clone","","",0,null],[11,"fmt","","",1,null]],"paths":[[3,"Flags"],[3,"Errors"]]};
searchIndex["num_iter"] = {"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"next_back","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next_back","","",1,null],[11,"clone","","",2,null],[11,"next","","",2,null],[11,"clone","","",3,null],[11,"next","","",3,null]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","items":[[5,"div_rem","num_integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",0,null],[10,"mod_floor","","Floored integer modulo, satisfying:",0,null],[10,"gcd","","Greatest Common Divisor (GCD).",0,null],[10,"lcm","","Lowest Common Multiple (LCM).",0,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,null],[10,"is_even","","Returns `true` if the number is even.",0,null],[10,"is_odd","","Returns `true` if the number is odd.",0,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",0,null]],"paths":[[8,"Integer"]]};
searchIndex["unicase"] = {"doc":"# Case","items":[[3,"UniCase","unicase","Case Insensitive wrapper of strings.",null,null],[12,"0","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"as_ref","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"into","","",0,null],[11,"into","","",0,null]],"paths":[[3,"UniCase"]]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a regular expression parser and an abstract syntax for\nregular expressions. The abstract syntax is defined by the `Expr` type. The\nconcrete syntax is enumerated in the\n[`regex`](../regex/index.html#syntax)\ncrate documentation.","items":[[3,"Literals","regex_syntax","A set of literal byte strings extracted from a regular expression.",null,null],[3,"Lit","","A single member of a set of literals extracted from a regular expression.",null,null],[3,"CharClass","","A character class.",null,null],[3,"ClassRange","","A single inclusive range in a character class.",null,null],[12,"start","","The start character of the range.",0,null],[12,"end","","The end character of the range.",0,null],[3,"ByteClass","","A byte class for byte ranges only.",null,null],[3,"ByteRange","","A single inclusive range in a byte class.",null,null],[12,"start","","The start byte of the range.",1,null],[12,"end","","The end byte of the range.",1,null],[3,"ExprBuilder","","A builder for configuring regular expression parsing.",null,null],[3,"Error","","A parse error.",null,null],[4,"Expr","","A regular expression abstract syntax tree.",null,null],[13,"Empty","","An empty regex (which never matches any text).",2,null],[13,"Literal","","A sequence of one or more literal characters to be matched.",2,null],[12,"chars","regex_syntax::Expr","The characters.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"LiteralBytes","regex_syntax","A sequence of one or more literal bytes to be matched.",2,null],[12,"bytes","regex_syntax::Expr","The bytes.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"AnyChar","regex_syntax","Match any character.",2,null],[13,"AnyCharNoNL","","Match any character, excluding new line (`0xA`).",2,null],[13,"AnyByte","","Match any byte.",2,null],[13,"AnyByteNoNL","","Match any byte, excluding new line (`0xA`).",2,null],[13,"Class","","A character class.",2,null],[13,"ClassBytes","","A character class with byte ranges only.",2,null],[13,"StartLine","","Match the start of a line or beginning of input.",2,null],[13,"EndLine","","Match the end of a line or end of input.",2,null],[13,"StartText","","Match the beginning of input.",2,null],[13,"EndText","","Match the end of input.",2,null],[13,"WordBoundary","","Match a word boundary (word character on one side and a non-word\ncharacter on the other).",2,null],[13,"NotWordBoundary","","Match a position that is not a word boundary (word or non-word\ncharacters on both sides).",2,null],[13,"WordBoundaryAscii","","Match an ASCII word boundary.",2,null],[13,"NotWordBoundaryAscii","","Match a position that is not an ASCII word boundary.",2,null],[13,"Group","","A group, possibly non-capturing.",2,null],[12,"e","regex_syntax::Expr","The expression inside the group.",2,null],[12,"i","","The capture index (starting at `1`) only for capturing groups.",2,null],[12,"name","","The capture name, only for capturing named groups.",2,null],[13,"Repeat","regex_syntax","A repeat operator (`?`, `*`, `+` or `{m,n}`).",2,null],[12,"e","regex_syntax::Expr","The expression to be repeated. Limited to literals, `.`, classes\nor grouped expressions.",2,null],[12,"r","","The type of repeat operator used.",2,null],[12,"greedy","","Whether the repeat is greedy (match the most) or not (match the\nleast).",2,null],[13,"Concat","regex_syntax","A concatenation of expressions. Must be matched one after the other.",2,null],[13,"Alternate","","An alternation of expressions. Only one must match.",2,null],[4,"Repeater","","The type of a repeat operator expression.",null,null],[13,"ZeroOrOne","","Match zero or one (`?`).",3,null],[13,"ZeroOrMore","","Match zero or more (`*`).",3,null],[13,"OneOrMore","","Match one or more (`+`).",3,null],[13,"Range","","Match for at least `min` and at most `max` (`{m,n}`).",3,null],[12,"min","regex_syntax::Repeater","Lower bound on the number of matches.",3,null],[12,"max","","Optional upper bound on the number of matches.",3,null],[4,"ErrorKind","regex_syntax","The specific type of parse error that can occur.",null,null],[13,"DoubleFlagNegation","","A negation symbol is used twice in flag settings.\ne.g., `(?-i-s)`.",4,null],[13,"DuplicateCaptureName","","The same capture name was used more than once.\ne.g., `(?P&lt;a&gt;.)(?P&lt;a&gt;.)`.",4,null],[13,"EmptyAlternate","","An alternate is empty. e.g., `(|a)`.",4,null],[13,"EmptyCaptureName","","A capture group name is empty. e.g., `(?P&lt;&gt;a)`.",4,null],[13,"EmptyFlagNegation","","A negation symbol was not proceded by any flags. e.g., `(?i-)`.",4,null],[13,"EmptyGroup","","A group is empty. e.g., `()`.",4,null],[13,"InvalidBase10","","An invalid number was used in a counted repetition. e.g., `a{b}`.",4,null],[13,"InvalidBase16","","An invalid hexadecimal number was used in an escape sequence.\ne.g., `\\xAG`.",4,null],[13,"InvalidCaptureName","","An invalid capture name was used. e.g., `(?P&lt;0a&gt;b)`.",4,null],[13,"InvalidClassRange","","An invalid class range was givien. Specifically, when the start of the\nrange is greater than the end. e.g., `[z-a]`.",4,null],[12,"start","regex_syntax::ErrorKind","The first character specified in the range.",4,null],[12,"end","","The second character specified in the range.",4,null],[13,"InvalidClassEscape","regex_syntax","An escape sequence was used in a character class where it is not\nallowed. e.g., `[a-\\pN]` or `[\\A]`.",4,null],[13,"InvalidRepeatRange","","An invalid counted repetition min/max was given. e.g., `a{2,1}`.",4,null],[12,"min","regex_syntax::ErrorKind","The first number specified in the repetition.",4,null],[12,"max","","The second number specified in the repetition.",4,null],[13,"InvalidScalarValue","regex_syntax","An invalid Unicode scalar value was used in a long hexadecimal\nsequence. e.g., `\\x{D800}`.",4,null],[13,"MissingBase10","","An empty counted repetition operator. e.g., `a{}`.",4,null],[13,"RepeaterExpectsExpr","","A repetition operator was not applied to an expression. e.g., `*`.",4,null],[13,"RepeaterUnexpectedExpr","","A repetition operator was applied to an expression that cannot be\nrepeated. e.g., `a+*` or `a|*`.",4,null],[13,"UnclosedCaptureName","","A capture group name that is never closed. e.g., `(?P&lt;a`.",4,null],[13,"UnclosedHex","","An unclosed hexadecimal literal. e.g., `\\x{a`.",4,null],[13,"UnclosedParen","","An unclosed parenthesis. e.g., `(a`.",4,null],[13,"UnclosedRepeat","","An unclosed counted repetition operator. e.g., `a{2`.",4,null],[13,"UnclosedUnicodeName","","An unclosed named Unicode class. e.g., `\\p{Yi`.",4,null],[13,"UnexpectedClassEof","","Saw end of regex before class was closed. e.g., `[a`.",4,null],[13,"UnexpectedEscapeEof","","Saw end of regex before escape sequence was closed. e.g., `\\`.",4,null],[13,"UnexpectedFlagEof","","Saw end of regex before flags were closed. e.g., `(?i`.",4,null],[13,"UnexpectedTwoDigitHexEof","","Saw end of regex before two hexadecimal digits were seen. e.g., `\\xA`.",4,null],[13,"UnopenedParen","","Unopened parenthesis. e.g., `)`.",4,null],[13,"UnrecognizedEscape","","Unrecognized escape sequence. e.g., `\\q`.",4,null],[13,"UnrecognizedFlag","","Unrecognized flag. e.g., `(?a)`.",4,null],[13,"UnrecognizedUnicodeClass","","Unrecognized named Unicode class. e.g., `\\p{Foo}`.",4,null],[13,"StackExhausted","","Indicates that the regex uses too much nesting.",4,null],[13,"FlagNotAllowed","","A disallowed flag was found (e.g., `u`).",4,null],[13,"UnicodeNotAllowed","","A Unicode class was used when the Unicode (`u`) flag was disabled.",4,null],[13,"InvalidUtf8","","InvalidUtf8 indicates that the expression may match non-UTF-8 bytes.\nThis never returned if the parser is permitted to allow expressions\nthat match arbitrary bytes.",4,null],[13,"EmptyClass","","A character class was constructed such that it is empty.\ne.g., `[^\\d\\D]`.",4,null],[5,"quote","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",6,null],[11,"cmp","","",6,null],[11,"empty","","Returns a new empty set of literals using default limits.",5,{"inputs":[],"output":{"name":"literals"}}],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",5,null],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",5,null],[11,"limit_class","","Get the character class size limit for this set.",5,null],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",5,null],[11,"literals","","Returns the set of literals as a slice. Its order is unspecified.",5,null],[11,"min_len","","Returns the length of the smallest literal.",5,null],[11,"all_complete","","Returns true if all members in this set are complete.",5,null],[11,"any_complete","","Returns true if any member in this set is complete.",5,null],[11,"contains_empty","","Returns true if this set contains an empty literal.",5,null],[11,"is_empty","","Returns true if this set is empty or if all of its members is empty.",5,null],[11,"to_empty","","Returns a new empty set of literals using this set&#39;s limits.",5,null],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this set.",5,null],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this set.",5,null],[11,"trim_suffix","","Returns a new set of literals with the given number of bytes trimmed\nfrom the suffix of each literal.",5,null],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that are\nguaranteed to be unambiguous.",5,null],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that are\nguaranteed to be unambiguous.",5,null],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",5,null],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",5,null],[11,"union","","Unions this set with another set.",5,null],[11,"cross_product","","Extends this set with another set.",5,null],[11,"cross_add","","Extends each literal in this set with the bytes given.",5,null],[11,"add","","Adds the given literal to this set.",5,null],[11,"add_char_class","","Extends each literal in this set with the character class given.",5,null],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",5,null],[11,"cut","","Cuts every member of this set. When a member is cut, it can never\nbe extended.",5,null],[11,"reverse","","Reverses all members in place.",5,null],[11,"clear","","Clears this set of all members.",5,null],[11,"fmt","","",5,null],[11,"new","","Returns a new complete literal with the bytes given.",6,{"inputs":[{"name":"vec"}],"output":{"name":"lit"}}],[11,"empty","","Returns a new complete empty literal.",6,{"inputs":[],"output":{"name":"lit"}}],[11,"is_cut","","Returns true if this literal was &quot;cut.&quot;",6,null],[11,"cut","","Cuts this literal.",6,null],[11,"eq","","",6,null],[11,"partial_cmp","","",6,null],[11,"fmt","","",6,null],[11,"as_ref","","",6,null],[11,"deref","","",6,null],[11,"deref_mut","","",6,null],[6,"Result","","An alias for computations that can return a `Error`.",null,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"cmp","","",1,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"new","","Create a new builder for configuring expression parsing.",9,{"inputs":[],"output":{"name":"exprbuilder"}}],[11,"case_insensitive","","Set the default value for the case insensitive (`i`) flag.",9,null],[11,"multi_line","","Set the default value for the multi-line matching (`m`) flag.",9,null],[11,"dot_matches_new_line","","Set the default value for the any character (`s`) flag.",9,null],[11,"swap_greed","","Set the default value for the greedy swap (`U`) flag.",9,null],[11,"ignore_whitespace","","Set the default value for the ignore whitespace (`x`) flag.",9,null],[11,"unicode","","Set the default value for the Unicode (`u`) flag.",9,null],[11,"allow_bytes","","Whether the parser allows matching arbitrary bytes or not.",9,null],[11,"nest_limit","","Set the nesting limit for regular expression parsing.",9,null],[11,"parse","","Parse a string as a regular expression using the current configuraiton.",9,null],[11,"parse","","Parses a string in a regular expression syntax tree.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"prefixes","","Returns a set of literal prefixes extracted from this expression.",2,null],[11,"suffixes","","Returns a set of literal suffixes extracted from this expression.",2,null],[11,"is_anchored_start","","Returns true if and only if the expression is required to match from\nthe beginning of text.",2,null],[11,"has_anchored_start","","Returns true if and only if the expression has at least one matchable\nsub-expression that must match the beginning of text.",2,null],[11,"is_anchored_end","","Returns true if and only if the expression is required to match at the\nend of the text.",2,null],[11,"has_anchored_end","","Returns true if and only if the expression has at least one matchable\nsub-expression that must match the beginning of text.",2,null],[11,"has_bytes","","Returns true if and only if the expression contains sub-expressions\nthat can match arbitrary bytes.",2,null],[11,"deref","","",7,null],[11,"into_iter","","",7,null],[11,"new","","Create a new class from an existing set of ranges.",7,{"inputs":[{"name":"vec"}],"output":{"name":"charclass"}}],[11,"matches","","Returns true if `c` is matched by this character class.",7,null],[11,"remove","","Removes the given character from the class if it exists.",7,null],[11,"negate","","Negates the character class.",7,null],[11,"case_fold","","Apply case folding to this character class.",7,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"new","","Create a new class from an existing set of ranges.",8,{"inputs":[{"name":"vec"}],"output":{"name":"byteclass"}}],[11,"matches","","Returns true if `b` is matched by this byte class.",8,null],[11,"remove","","Removes the given byte from the class if it exists.",8,null],[11,"negate","","Negates the byte class.",8,null],[11,"case_fold","","Apply case folding to this byte class.",8,null],[11,"deref","","",8,null],[11,"into_iter","","",8,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"fmt","","",2,null],[11,"fmt","","",3,null],[11,"fmt","","",7,null],[11,"fmt","","",0,null],[11,"fmt","","",8,null],[11,"fmt","","",1,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"position","","Returns an approximate *character* offset at which the error occurred.",10,null],[11,"kind","","Returns the type of the regex parse error.",10,null],[11,"description","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",4,null]],"paths":[[3,"ClassRange"],[3,"ByteRange"],[4,"Expr"],[4,"Repeater"],[4,"ErrorKind"],[3,"Literals"],[3,"Lit"],[3,"CharClass"],[3,"ByteClass"],[3,"ExprBuilder"],[3,"Error"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",15,null],[12,"sa_data","","",15,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",16,null],[12,"sin_port","","",16,null],[12,"sin_addr","","",16,null],[12,"sin_zero","","",16,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",17,null],[12,"sin6_port","","",17,null],[12,"sin6_flowinfo","","",17,null],[12,"sin6_addr","","",17,null],[12,"sin6_scope_id","","",17,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",18,null],[12,"sun_path","","",18,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",19,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",20,null],[12,"ai_family","","",20,null],[12,"ai_socktype","","",20,null],[12,"ai_protocol","","",20,null],[12,"ai_addrlen","","",20,null],[12,"ai_addr","","",20,null],[12,"ai_canonname","","",20,null],[12,"ai_next","","",20,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",21,null],[12,"nl_pid","","",21,null],[12,"nl_groups","","",21,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",22,null],[12,"sll_protocol","","",22,null],[12,"sll_ifindex","","",22,null],[12,"sll_hatype","","",22,null],[12,"sll_pkttype","","",22,null],[12,"sll_halen","","",22,null],[12,"sll_addr","","",22,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",23,null],[12,"tm_min","","",23,null],[12,"tm_hour","","",23,null],[12,"tm_mday","","",23,null],[12,"tm_mon","","",23,null],[12,"tm_year","","",23,null],[12,"tm_wday","","",23,null],[12,"tm_yday","","",23,null],[12,"tm_isdst","","",23,null],[12,"tm_gmtoff","","",23,null],[12,"tm_zone","","",23,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",24,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",25,null],[12,"dli_fbase","","",25,null],[12,"dli_sname","","",25,null],[12,"dli_saddr","","",25,null],[3,"epoll_event","","",null,null],[12,"events","","",26,null],[12,"u64","","",26,null],[3,"utsname","","",null,null],[12,"sysname","","",27,null],[12,"nodename","","",27,null],[12,"release","","",27,null],[12,"version","","",27,null],[12,"machine","","",27,null],[12,"domainname","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"dirent","","",null,null],[12,"d_ino","","",29,null],[12,"d_off","","",29,null],[12,"d_reclen","","",29,null],[12,"d_type","","",29,null],[12,"d_name","","",29,null],[3,"dirent64","","",null,null],[12,"d_ino","","",30,null],[12,"d_off","","",30,null],[12,"d_reclen","","",30,null],[12,"d_type","","",30,null],[12,"d_name","","",30,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",31,null],[12,"rlim_max","","",31,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",32,null],[12,"gl_pathv","","",32,null],[12,"gl_offs","","",32,null],[12,"gl_flags","","",32,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",33,null],[12,"ifa_name","","",33,null],[12,"ifa_flags","","",33,null],[12,"ifa_addr","","",33,null],[12,"ifa_netmask","","",33,null],[12,"ifa_ifu","","",33,null],[12,"ifa_data","","",33,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",34,null],[12,"pw_passwd","","",34,null],[12,"pw_uid","","",34,null],[12,"pw_gid","","",34,null],[12,"pw_gecos","","",34,null],[12,"pw_dir","","",34,null],[12,"pw_shell","","",34,null],[3,"spwd","","",null,null],[12,"sp_namp","","",35,null],[12,"sp_pwdp","","",35,null],[12,"sp_lstchg","","",35,null],[12,"sp_min","","",35,null],[12,"sp_max","","",35,null],[12,"sp_warn","","",35,null],[12,"sp_inact","","",35,null],[12,"sp_expire","","",35,null],[12,"sp_flag","","",35,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",36,null],[12,"f_frsize","","",36,null],[12,"f_blocks","","",36,null],[12,"f_bfree","","",36,null],[12,"f_bavail","","",36,null],[12,"f_files","","",36,null],[12,"f_ffree","","",36,null],[12,"f_favail","","",36,null],[12,"f_fsid","","",36,null],[12,"f_flag","","",36,null],[12,"f_namemax","","",36,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",37,null],[12,"dqb_bsoftlimit","","",37,null],[12,"dqb_curspace","","",37,null],[12,"dqb_ihardlimit","","",37,null],[12,"dqb_isoftlimit","","",37,null],[12,"dqb_curinodes","","",37,null],[12,"dqb_btime","","",37,null],[12,"dqb_itime","","",37,null],[12,"dqb_valid","","",37,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",38,null],[12,"ssi_errno","","",38,null],[12,"ssi_code","","",38,null],[12,"ssi_pid","","",38,null],[12,"ssi_uid","","",38,null],[12,"ssi_fd","","",38,null],[12,"ssi_tid","","",38,null],[12,"ssi_band","","",38,null],[12,"ssi_overrun","","",38,null],[12,"ssi_trapno","","",38,null],[12,"ssi_status","","",38,null],[12,"ssi_int","","",38,null],[12,"ssi_ptr","","",38,null],[12,"ssi_utime","","",38,null],[12,"ssi_stime","","",38,null],[12,"ssi_addr","","",38,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",39,null],[12,"mq_maxmsg","","",39,null],[12,"mq_msgsize","","",39,null],[12,"mq_curmsgs","","",39,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",40,null],[12,"if_name","","",40,null],[3,"msginfo","","",null,null],[12,"msgpool","","",41,null],[12,"msgmap","","",41,null],[12,"msgmax","","",41,null],[12,"msgmnb","","",41,null],[12,"msgmni","","",41,null],[12,"msgssz","","",41,null],[12,"msgtql","","",41,null],[12,"msgseg","","",41,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",42,null],[12,"e_exit","","",42,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",43,null],[12,"tv_usec","","",43,null],[3,"utmpx","","",null,null],[12,"ut_type","","",44,null],[12,"ut_pid","","",44,null],[12,"ut_line","","",44,null],[12,"ut_id","","",44,null],[12,"ut_user","","",44,null],[12,"ut_host","","",44,null],[12,"ut_exit","","",44,null],[12,"ut_session","","",44,null],[12,"ut_tv","","",44,null],[12,"ut_addr_v6","","",44,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",45,null],[12,"sa_mask","","",45,null],[12,"sa_flags","","",45,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",46,null],[12,"ss_flags","","",46,null],[12,"ss_size","","",46,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",47,null],[12,"si_errno","","",47,null],[12,"si_code","","",47,null],[12,"_pad","","",47,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",48,null],[12,"gl_pathv","","",48,null],[12,"gl_offs","","",48,null],[12,"gl_flags","","",48,null],[3,"ucred","","",null,null],[12,"pid","","",49,null],[12,"uid","","",49,null],[12,"gid","","",49,null],[3,"statfs","","",null,null],[12,"f_type","","",50,null],[12,"f_bsize","","",50,null],[12,"f_blocks","","",50,null],[12,"f_bfree","","",50,null],[12,"f_bavail","","",50,null],[12,"f_files","","",50,null],[12,"f_ffree","","",50,null],[12,"f_fsid","","",50,null],[12,"f_namelen","","",50,null],[12,"f_frsize","","",50,null],[3,"msghdr","","",null,null],[12,"msg_name","","",51,null],[12,"msg_namelen","","",51,null],[12,"msg_iov","","",51,null],[12,"msg_iovlen","","",51,null],[12,"msg_control","","",51,null],[12,"msg_controllen","","",51,null],[12,"msg_flags","","",51,null],[3,"termios","","",null,null],[12,"c_iflag","","",52,null],[12,"c_oflag","","",52,null],[12,"c_cflag","","",52,null],[12,"c_lflag","","",52,null],[12,"c_line","","",52,null],[12,"c_cc","","",52,null],[12,"c_ispeed","","",52,null],[12,"c_ospeed","","",52,null],[3,"flock","","",null,null],[12,"l_type","","",53,null],[12,"l_whence","","",53,null],[12,"l_start","","",53,null],[12,"l_len","","",53,null],[12,"l_pid","","",53,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",54,null],[12,"loads","","",54,null],[12,"totalram","","",54,null],[12,"freeram","","",54,null],[12,"sharedram","","",54,null],[12,"bufferram","","",54,null],[12,"totalswap","","",54,null],[12,"freeswap","","",54,null],[12,"procs","","",54,null],[12,"pad","","",54,null],[12,"totalhigh","","",54,null],[12,"freehigh","","",54,null],[12,"mem_unit","","",54,null],[12,"_f","","",54,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",55,null],[12,"msg_stime","","",55,null],[12,"msg_rtime","","",55,null],[12,"msg_ctime","","",55,null],[12,"msg_qnum","","",55,null],[12,"msg_qbytes","","",55,null],[12,"msg_lspid","","",55,null],[12,"msg_lrpid","","",55,null],[3,"stat","","",null,null],[12,"st_dev","","",56,null],[12,"st_ino","","",56,null],[12,"st_nlink","","",56,null],[12,"st_mode","","",56,null],[12,"st_uid","","",56,null],[12,"st_gid","","",56,null],[12,"st_rdev","","",56,null],[12,"st_size","","",56,null],[12,"st_blksize","","",56,null],[12,"st_blocks","","",56,null],[12,"st_atime","","",56,null],[12,"st_atime_nsec","","",56,null],[12,"st_mtime","","",56,null],[12,"st_mtime_nsec","","",56,null],[12,"st_ctime","","",56,null],[12,"st_ctime_nsec","","",56,null],[3,"stat64","","",null,null],[12,"st_dev","","",57,null],[12,"st_ino","","",57,null],[12,"st_nlink","","",57,null],[12,"st_mode","","",57,null],[12,"st_uid","","",57,null],[12,"st_gid","","",57,null],[12,"st_rdev","","",57,null],[12,"st_size","","",57,null],[12,"st_blksize","","",57,null],[12,"st_blocks","","",57,null],[12,"st_atime","","",57,null],[12,"st_atime_nsec","","",57,null],[12,"st_mtime","","",57,null],[12,"st_mtime_nsec","","",57,null],[12,"st_ctime","","",57,null],[12,"st_ctime_nsec","","",57,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",58,null],[12,"exponent","","",58,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",59,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",60,null],[12,"swd","","",60,null],[12,"ftw","","",60,null],[12,"fop","","",60,null],[12,"rip","","",60,null],[12,"rdp","","",60,null],[12,"mxcsr","","",60,null],[12,"mxcr_mask","","",60,null],[12,"_st","","",60,null],[12,"_xmm","","",60,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",61,null],[12,"fpregs","","",61,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",62,null],[12,"uc_link","","",62,null],[12,"uc_stack","","",62,null],[12,"uc_mcontext","","",62,null],[12,"uc_sigmask","","",62,null],[3,"ipc_perm","","",null,null],[12,"__key","","",63,null],[12,"uid","","",63,null],[12,"gid","","",63,null],[12,"cuid","","",63,null],[12,"cgid","","",63,null],[12,"mode","","",63,null],[12,"__seq","","",63,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",64,null],[12,"shm_segsz","","",64,null],[12,"shm_atime","","",64,null],[12,"shm_dtime","","",64,null],[12,"shm_ctime","","",64,null],[12,"shm_cpid","","",64,null],[12,"shm_lpid","","",64,null],[12,"shm_nattch","","",64,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"sethostname","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",56,null],[11,"clone","","",57,null],[11,"clone","","",65,null],[11,"clone","","",58,null],[11,"clone","","",59,null],[11,"clone","","",60,null],[11,"clone","","",61,null],[11,"clone","","",62,null],[11,"clone","","",63,null],[11,"clone","","",64,null],[11,"clone","","",66,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",67,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",68,null],[11,"clone","","",69,null],[11,"clone","","",70,null],[11,"clone","","",71,null],[11,"clone","","",72,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",73,null],[11,"clone","","",39,null],[11,"clone","","",74,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",75,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,null],[10,"abs_sub","","The positive difference of two numbers.",4,null],[10,"signum","","Returns the sign of the number.",4,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",5,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",5,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",6,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",7,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",8,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",9,null],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",11,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",11,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",11,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",11,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",11,null],[10,"floor","","Returns the largest integer less than or equal to a number.",11,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",11,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",11,null],[10,"trunc","","Return the integer part of a number.",11,null],[10,"fract","","Returns the fractional part of a number.",11,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",11,null],[10,"signum","","Returns a number that represents the sign of `self`.",11,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",11,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",11,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",11,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",11,null],[10,"powi","","Raise a number to an integer power.",11,null],[10,"powf","","Raise a number to a floating point power.",11,null],[10,"sqrt","","Take the square root of a number.",11,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",11,null],[10,"exp2","","Returns `2^(self)`.",11,null],[10,"ln","","Returns the natural logarithm of the number.",11,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",11,null],[10,"log2","","Returns the base 2 logarithm of the number.",11,null],[10,"log10","","Returns the base 10 logarithm of the number.",11,null],[11,"to_degrees","","Converts radians to degrees.",11,null],[11,"to_radians","","Converts degrees to radians.",11,null],[10,"max","","Returns the maximum of the two numbers.",11,null],[10,"min","","Returns the minimum of the two numbers.",11,null],[10,"abs_sub","","The positive difference of two numbers.",11,null],[10,"cbrt","","Take the cubic root of a number.",11,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",11,null],[10,"sin","","Computes the sine of a number (in radians).",11,null],[10,"cos","","Computes the cosine of a number (in radians).",11,null],[10,"tan","","Computes the tangent of a number (in radians).",11,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",11,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",11,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",11,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",11,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",11,null],[10,"sinh","","Hyperbolic sine function.",11,null],[10,"cosh","","Hyperbolic cosine function.",11,null],[10,"tanh","","Hyperbolic tangent function.",11,null],[10,"asinh","","Inverse hyperbolic sine function.",11,null],[10,"acosh","","Inverse hyperbolic cosine function.",11,null],[10,"atanh","","Inverse hyperbolic tangent function.",11,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",11,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedes’ constant.",12,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",16,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",16,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",16,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",16,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",16,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",16,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",16,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",16,null],[10,"swap_bytes","","Reverses the byte order of the integer.",16,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",16,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",16,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",16,null],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","num_traits","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",17,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",17,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"fmt","","",0,null]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["hpack"] = {"doc":"A module implementing HPACK functionality. Exposes a simple API for\nperforming the encoding and decoding of header sets, according to the\nHPACK spec.","items":[[0,"encoder","hpack","Implements all functionality related to encoding header blocks using\nHPACK.",null,null],[3,"Encoder","hpack::encoder","Represents an HPACK encoder. Allows clients to encode arbitrary header sets\nand tracks the encoding context. That is, encoding subsequent header sets\nwill use the context built by previous encode calls.",null,null],[5,"encode_integer","","Encode an integer to the representation defined by HPACK.",null,{"inputs":[{"name":"usize"},{"name":"u8"}],"output":{"name":"vec"}}],[11,"new","","Creates a new `Encoder` with a default static table, as defined by the\nHPACK spec (Appendix A).",0,{"inputs":[],"output":{"name":"encoder"}}],[11,"encode","","Encodes the given headers using the HPACK rules and returns a newly\nallocated `Vec` containing the bytes representing the encoded header\nset.",0,null],[0,"decoder","hpack","Exposes the struct `Decoder` that allows for HPACK-encoded header blocks to\nbe decoded into a header list.",null,null],[3,"Decoder","hpack::decoder","Decodes headers encoded using HPACK.",null,null],[4,"IntegerDecodingError","","Represents all errors that can be encountered while decoding an\ninteger.",null,null],[13,"TooManyOctets","","5.1. specifies that &quot;excessively large integer decodings&quot; MUST be\nconsidered an error (whether the size is the number of octets or\nvalue). This variant corresponds to the encoding containing too many\noctets.",1,null],[13,"ValueTooLarge","","The variant corresponds to the case where the value of the integer\nbeing decoded exceeds a certain threshold.",1,null],[13,"NotEnoughOctets","","When a buffer from which an integer was supposed to be encoded does\nnot contain enough octets to complete the decoding.",1,null],[13,"InvalidPrefix","","Only valid prefixes are [1, 8]",1,null],[4,"StringDecodingError","","Represents all errors that can be encountered while decoding an octet\nstring.",null,null],[13,"NotEnoughOctets","","",2,null],[13,"HuffmanDecoderError","","",2,null],[4,"DecoderError","","Represents all errors that can be encountered while performing the decoding\nof an HPACK header set.",null,null],[13,"HeaderIndexOutOfBounds","","",3,null],[13,"IntegerDecodingError","","",3,null],[13,"StringDecodingError","","",3,null],[13,"InvalidMaxDynamicSize","","The size of the dynamic table can never be allowed to exceed the max\nsize mandated to the decoder by the protocol. (by perfroming changes\nmade by SizeUpdate blocks).",3,null],[6,"DecoderResult","","The result returned by the `decode` method of the `Decoder`.",null,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"new","","Creates a new `Decoder` with all settings set to default values.",4,{"inputs":[],"output":{"name":"decoder"}}],[11,"set_max_table_size","","Sets a new maximum dynamic table size for the decoder.",4,null],[11,"decode","","Decode the header block found in the given buffer.",4,null],[0,"huffman","hpack","A module exposing utilities for encoding and decoding Huffman-coded octet\nstrings, under the Huffman code defined by HPACK.\n(HPACK-draft-10, Appendix B)",null,null],[3,"HuffmanDecoder","hpack::huffman","A simple implementation of a Huffman code decoder.",null,null],[4,"HuffmanDecoderError","","Represents the error variants that the `HuffmanDecoder` can return.",null,null],[13,"PaddingTooLarge","","Any padding strictly larger than 7 bits MUST be interpreted as an error",5,null],[13,"InvalidPadding","","Any padding that does not correspond to the most significant bits of\nEOS MUST be interpreted as an error.",5,null],[13,"EOSInString","","If EOS is ever found in the string, it causes an error.",5,null],[6,"HuffmanDecoderResult","","The type that represents the result of the `decode` method of the\n`HuffmanDecoder`.",null,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"new","","Constructs a new HuffmanDecoder with the default Huffman code table, as\ndefined in the HPACK-draft-10, Appendix B.",6,{"inputs":[],"output":{"name":"huffmandecoder"}}],[11,"decode","","Decodes the buffer `buf` into a newly allocated `Vec`.",6,null]],"paths":[[3,"Encoder"],[4,"IntegerDecodingError"],[4,"StringDecodingError"],[4,"DecoderError"],[3,"Decoder"],[4,"HuffmanDecoderError"],[3,"HuffmanDecoder"]]};
searchIndex["json"] = {"doc":"![](http://terhix.com/doc/json-rust-logo-small.png)","items":[[4,"Error","json","Error type of this crate.",null,null],[13,"UnexpectedCharacter","","",0,null],[12,"ch","json::Error","",0,null],[12,"line","","",0,null],[12,"column","","",0,null],[13,"UnexpectedEndOfJson","json","",0,null],[13,"ExceededDepthLimit","","",0,null],[13,"FailedUtf8Parsing","","",0,null],[13,"WrongType","","",0,null],[4,"JsonValue","","",null,null],[13,"Null","","",1,null],[13,"Short","","",1,null],[13,"String","","",1,null],[13,"Number","","",1,null],[13,"Boolean","","",1,null],[13,"Object","","",1,null],[13,"Array","","",1,null],[4,"JsonError","","Error type of this crate.",null,null],[13,"UnexpectedCharacter","","",0,null],[12,"ch","json::JsonError","",0,null],[12,"line","","",0,null],[12,"column","","",0,null],[13,"UnexpectedEndOfJson","json","",0,null],[13,"ExceededDepthLimit","","",0,null],[13,"FailedUtf8Parsing","","",0,null],[13,"WrongType","","",0,null],[5,"parse","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"from","","Convenience for `JsonValue::from(value)`",null,{"inputs":[{"name":"t"}],"output":{"name":"jsonvalue"}}],[5,"stringify","","Pretty prints out the value as JSON string.",null,{"inputs":[{"name":"t"}],"output":{"name":"string"}}],[5,"stringify_pretty","","Pretty prints out the value as JSON string. Second argument is a\nnumber of spaces to indent new blocks with.",null,{"inputs":[{"name":"t"},{"name":"u16"}],"output":{"name":"string"}}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"hashmap"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"btreemap"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"isize"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"usize"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"i8"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"i16"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"i32"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"i64"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"u8"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"u16"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"u32"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"u64"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"f32"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"f64"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"number"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"object"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"bool"}],"output":{"name":"jsonvalue"}}],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"jsonvalue"}}],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"new_object","","Create an empty `JsonValue::Object` instance.\nWhen creating an object with data, consider using the `object!` macro.",1,{"inputs":[],"output":{"name":"jsonvalue"}}],[11,"new_array","","Create an empty `JsonValue::Array` instance.\nWhen creating array with data, consider using the `array!` macro.",1,{"inputs":[],"output":{"name":"jsonvalue"}}],[11,"dump","","Prints out the value as JSON string.",1,null],[11,"pretty","","Pretty prints out the value as JSON string. Takes an argument that&#39;s\nnumber of spaces to indent new blocks with.",1,null],[11,"to_writer","","Writes the JSON as byte stream into an implementor of `std::io::Write`.",1,null],[11,"write","","Writes the JSON as byte stream into an implementor of `std::io::Write`.",1,null],[11,"write_pretty","","Writes the JSON as byte stream into an implementor of `std::io::Write`.",1,null],[11,"is_string","","",1,null],[11,"is_number","","",1,null],[11,"is_boolean","","",1,null],[11,"is_null","","",1,null],[11,"is_object","","",1,null],[11,"is_array","","",1,null],[11,"is_empty","","Checks whether the value is empty. Returns true for:",1,null],[11,"as_str","","",1,null],[11,"as_number","","",1,null],[11,"as_f64","","",1,null],[11,"as_f32","","",1,null],[11,"as_u64","","",1,null],[11,"as_u32","","",1,null],[11,"as_u16","","",1,null],[11,"as_u8","","",1,null],[11,"as_usize","","",1,null],[11,"as_i64","","",1,null],[11,"as_i32","","",1,null],[11,"as_i16","","",1,null],[11,"as_i8","","",1,null],[11,"as_isize","","",1,null],[11,"as_bool","","",1,null],[11,"as_fixed_point_u64","","Obtain an integer at a fixed decimal point. This is useful for\nconverting monetary values and doing arithmetic on them without\nrounding errors introduced by floating point operations.",1,null],[11,"as_fixed_point_i64","","Analog to `as_fixed_point_u64`, except returning a signed\n`i64`, properly handling negative numbers.",1,null],[11,"take","","Take over the ownership of the value, leaving `Null` in it&#39;s place.",1,null],[11,"take_string","","Checks that self is a string, returns an owned Rust `String`, leaving\n`Null` in it&#39;s place.",1,null],[11,"push","","Works on `JsonValue::Array` - pushes a new value to the array.",1,null],[11,"pop","","Works on `JsonValue::Array` - remove and return last element from\nan array. On failure returns a null.",1,null],[11,"contains","","Works on `JsonValue::Array` - checks if the array contains a value",1,null],[11,"has_key","","Works on `JsonValue::Object` - checks if the object has a key",1,null],[11,"len","","Returns length of array or object (number of keys), defaults to `0` for\nother types.",1,null],[11,"members","","Works on `JsonValue::Array` - returns an iterator over members.\nWill return an empty iterator if called on non-array types.",1,null],[11,"members_mut","","Works on `JsonValue::Array` - returns a mutable iterator over members.\nWill return an empty iterator if called on non-array types.",1,null],[11,"entries","","Works on `JsonValue::Object` - returns an iterator over key value pairs.\nWill return an empty iterator if called on non-object types.",1,null],[11,"entries_mut","","Works on `JsonValue::Object` - returns a mutable iterator over\nkey value pairs.\nWill return an empty iterator if called on non-object types.",1,null],[11,"remove","","Works on `JsonValue::Object` - remove a key and return the value it held.\nIf the key was not present, the method is called on anything but an\nobject, it will return a null.",1,null],[11,"clear","","When called on an array or an object, will wipe them clean. When called\non a string will clear the string. Numbers and booleans become null.",1,null],[11,"index","","",1,null],[11,"index_mut","","",1,null],[11,"index","","",1,null],[11,"index","","",1,null],[11,"index","","",1,null],[11,"index_mut","","",1,null],[11,"index_mut","","",1,null],[11,"index_mut","","",1,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"wrong_type","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"fmt","","",0,null],[11,"description","","",0,null],[0,"short","","",null,null],[3,"Short","json::short","",null,null],[17,"MAX_LEN","","",null,null],[11,"clone","","",2,null],[11,"from_slice","","Creates a `Short` from a `&amp;str` slice. This method can cause buffer\noverflow if the length of the slice is larger than `MAX_LEN`, which is why\nit is marked as `unsafe`.",2,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"as_str","","Cheaply obtain a `&amp;str` slice out of the `Short`.",2,null],[11,"eq","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"deref","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[0,"object","json","",null,null],[3,"Object","json::object","A binary tree implementation of a string -&gt; `JsonValue` map. You normally don&#39;t\nhave to interact with instances of `Object`, much more likely you will be\nusing the `JsonValue::Object` variant, which wraps around this struct.",null,null],[3,"Iter","","",null,null],[3,"IterMut","","",null,null],[11,"fmt","","",3,null],[11,"new","","Create a new, empty instance of `Object`. Empty `Object` performs no\nallocation until a value is inserted into it.",3,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Create a new `Object` with memory preallocated for `capacity` number\nof entries.",3,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"insert","","Insert a new entry, or override an existing one. Note that `key` has\nto be a `&amp;str` slice and not an owned `String`. The internals of\n`Object` will handle the heap allocation of the key if needed for\nbetter performance.",3,null],[11,"override_last","","",3,null],[11,"get","","",3,null],[11,"get_mut","","",3,null],[11,"remove","","Attempts to remove the value behind `key`, if successful\nwill return the `JsonValue` stored behind the `key`.",3,null],[11,"len","","",3,null],[11,"is_empty","","",3,null],[11,"clear","","Wipe the `Object` clear. The capacity will remain untouched.",3,null],[11,"iter","","",3,null],[11,"iter_mut","","",3,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"empty","","Create an empty iterator that always returns `None`",4,{"inputs":[],"output":{"name":"self"}}],[11,"next","","",4,null],[11,"next_back","","",4,null],[11,"empty","","Create an empty iterator that always returns `None`",5,{"inputs":[],"output":{"name":"self"}}],[11,"next","","",5,null],[11,"next_back","","",5,null],[0,"number","json","",null,null],[3,"Number","json::number","Number representation used inside `JsonValue`. You can easily convert\nthe `Number` type into native Rust number types and back, or use the\nequality operator with another number type.",null,null],[17,"NAN","","NaN value represented in `Number` type. NaN is equal to itself.",null,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"from_parts","","Construct a new `Number` from parts. This can&#39;t create a NaN value.",6,{"inputs":[{"name":"bool"},{"name":"u64"},{"name":"i16"}],"output":{"name":"self"}}],[11,"as_parts","","Reverse to `from_parts` - obtain parts from an existing `Number`.",6,null],[11,"is_sign_positive","","",6,null],[11,"is_zero","","",6,null],[11,"is_nan","","",6,null],[11,"is_empty","","Test if the number is NaN or has a zero value.",6,null],[11,"as_fixed_point_u64","","Obtain an integer at a fixed decimal point. This is useful for\nconverting monetary values and doing arithmetic on them without\nrounding errors introduced by floating point operations.",6,null],[11,"as_fixed_point_i64","","Analog to `as_fixed_point_u64`, except returning a signed\n`i64`, properly handling negative numbers.",6,null],[11,"eq","","",6,null],[11,"fmt","","",6,null],[11,"from","","",6,{"inputs":[{"name":"f64"}],"output":{"name":"number"}}],[11,"from","","",6,{"inputs":[{"name":"f32"}],"output":{"name":"number"}}],[11,"eq","","",6,null],[11,"eq","","",6,null],[11,"from","","",6,{"inputs":[{"name":"isize"}],"output":{"name":"number"}}],[11,"eq","","",6,null],[11,"from","","",6,{"inputs":[{"name":"i8"}],"output":{"name":"number"}}],[11,"eq","","",6,null],[11,"from","","",6,{"inputs":[{"name":"i16"}],"output":{"name":"number"}}],[11,"eq","","",6,null],[11,"from","","",6,{"inputs":[{"name":"i32"}],"output":{"name":"number"}}],[11,"eq","","",6,null],[11,"from","","",6,{"inputs":[{"name":"i64"}],"output":{"name":"number"}}],[11,"eq","","",6,null],[11,"from","","",6,{"inputs":[{"name":"usize"}],"output":{"name":"number"}}],[11,"eq","","",6,null],[11,"from","","",6,{"inputs":[{"name":"u8"}],"output":{"name":"number"}}],[11,"eq","","",6,null],[11,"from","","",6,{"inputs":[{"name":"u16"}],"output":{"name":"number"}}],[11,"eq","","",6,null],[11,"from","","",6,{"inputs":[{"name":"u32"}],"output":{"name":"number"}}],[11,"eq","","",6,null],[11,"from","","",6,{"inputs":[{"name":"u64"}],"output":{"name":"number"}}],[11,"eq","","",6,null],[11,"neg","","",6,null],[0,"iterators","json","",null,null],[6,"Members","json::iterators","Iterator over members of `JsonValue::Array`.",null,null],[6,"MembersMut","","Mutable iterator over members of `JsonValue::Array`.",null,null],[6,"Entries","","Iterator over key value pairs of `JsonValue::Object`.",null,null],[6,"EntriesMut","","Mutable iterator over key value pairs of `JsonValue::Object`.",null,null],[6,"Result","json","Result type used by this crate.",null,null],[6,"Array","","",null,null],[14,"array","","Helper macro for creating instances of `JsonValue::Array`.",null,null],[14,"object","","Helper macro for creating instances of `JsonValue::Object`.",null,null],[11,"eq","json::number","",6,null],[11,"eq","json::object","",3,null]],"paths":[[4,"Error"],[4,"JsonValue"],[3,"Short"],[3,"Object"],[3,"Iter"],[3,"IterMut"],[3,"Number"]]};
searchIndex["unicode_bidi"] = {"doc":"This crate implements the [Unicode Bidirectional Algorithm][tr9] for display of mixed\nright-to-left and left-to-right text.  It is written in safe Rust, compatible with the\ncurrent stable release.","items":[[3,"BidiInfo","unicode_bidi","Output of `process_text`",null,null],[12,"classes","","The BidiClass of the character at each byte in the text.",0,null],[12,"levels","","The directional embedding level of each byte in the text.",0,null],[12,"paragraphs","","The boundaries and paragraph embedding level of each paragraph within the text.",0,null],[3,"ParagraphInfo","","Info about a single paragraph",null,null],[12,"range","","The paragraphs boundaries within the text, as byte indices.",1,null],[12,"level","","The paragraph embedding level. http://www.unicode.org/reports/tr9/#BD4",1,null],[3,"InitialProperties","","Output of `initial_scan`",null,null],[12,"initial_classes","","The BidiClass of the character at each byte in the text.\nIf a character is multiple bytes, its class will appear multiple times in the vector.",2,null],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",2,null],[5,"process_text","","Determine the bidirectional embedding levels for a single paragraph.",null,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"bidiinfo"}}],[5,"is_ltr","","Even embedding levels are left-to-right.",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_rtl","","Odd levels are right-to-left.",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"reorder_line","","Re-order a line based on resolved levels.",null,null],[5,"visual_runs","","Find the level runs within a line and return them in visual order.",null,null],[5,"initial_scan","","Find the paragraphs and BidiClasses in a string of text.",null,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"initialproperties"}}],[0,"tables","","",null,null],[4,"BidiClass","unicode_bidi::tables","Represents the Unicode character property **Bidi_Class**, also known as\nthe *bidirectional character type*.",null,null],[13,"AL","","",3,null],[13,"AN","","",3,null],[13,"B","","",3,null],[13,"BN","","",3,null],[13,"CS","","",3,null],[13,"EN","","",3,null],[13,"ES","","",3,null],[13,"ET","","",3,null],[13,"FSI","","",3,null],[13,"L","","",3,null],[13,"LRE","","",3,null],[13,"LRI","","",3,null],[13,"LRO","","",3,null],[13,"NSM","","",3,null],[13,"ON","","",3,null],[13,"PDF","","",3,null],[13,"PDI","","",3,null],[13,"R","","",3,null],[13,"RLE","","",3,null],[13,"RLI","","",3,null],[13,"RLO","","",3,null],[13,"S","","",3,null],[13,"WS","","",3,null],[5,"bidi_class","","Find the BidiClass of a single char.",null,{"inputs":[{"name":"char"}],"output":{"name":"bidiclass"}}],[17,"UNICODE_VERSION","","The version of [Unicode](http://www.unicode.org/)\nthat the `bidi_class` function is based on.",null,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[6,"LevelRun","unicode_bidi","A maximal substring of characters with the same embedding level.",null,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null]],"paths":[[3,"BidiInfo"],[3,"ParagraphInfo"],[3,"InitialProperties"],[4,"BidiClass"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[8,"__Deref","lazy_static","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",0,null],[10,"deref","","The method called to dereference a value",0,null],[0,"lazy","","",null,null],[3,"Lazy","lazy_static::lazy","",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[11,"get","","",1,null],[14,"__lazy_static_create","lazy_static","",null,null],[14,"lazy_static","","",null,null]],"paths":[[8,"__Deref"],[3,"Lazy"]]};
searchIndex["mime"] = {"doc":"# Mime","items":[[3,"Mime","mime","Mime, or Media Type. Encapsulates common registers types.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[12,"2","","",0,null],[4,"TopLevel","","",null,null],[13,"Star","","",1,null],[13,"Text","","",1,null],[13,"Image","","",1,null],[13,"Audio","","",1,null],[13,"Video","","",1,null],[13,"Application","","",1,null],[13,"Multipart","","",1,null],[13,"Message","","",1,null],[13,"Model","","",1,null],[13,"Ext","","",1,null],[4,"SubLevel","","",null,null],[13,"Star","","",2,null],[13,"Plain","","",2,null],[13,"Html","","",2,null],[13,"Xml","","",2,null],[13,"Javascript","","",2,null],[13,"Css","","",2,null],[13,"EventStream","","",2,null],[13,"Json","","",2,null],[13,"WwwFormUrlEncoded","","",2,null],[13,"Msgpack","","",2,null],[13,"OctetStream","","",2,null],[13,"FormData","","",2,null],[13,"Png","","",2,null],[13,"Gif","","",2,null],[13,"Bmp","","",2,null],[13,"Jpeg","","",2,null],[13,"Ext","","",2,null],[4,"Attr","","",null,null],[13,"Charset","","",3,null],[13,"Boundary","","",3,null],[13,"Q","","",3,null],[13,"Ext","","",3,null],[4,"Value","","",null,null],[13,"Utf8","","",4,null],[13,"Ext","","",4,null],[6,"Param","","",null,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"as_str","","",1,null],[11,"deref","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"hash","","",2,null],[11,"as_str","","",2,null],[11,"deref","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[11,"fmt","","",2,null],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"hash","","",3,null],[11,"as_str","","",3,null],[11,"deref","","",3,null],[11,"eq","","",3,null],[11,"eq","","",3,null],[11,"eq","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"from_str","","",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"hash","","",4,null],[11,"as_str","","",4,null],[11,"deref","","",4,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"fmt","","",4,null],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"get_param","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[14,"mime","","Easily create a Mime without having to import so many enums.",null,null]],"paths":[[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"]]};
searchIndex["ansi_term"] = {"doc":"This is a library for controlling colours and formatting, such as\nred bold text or blue underlined text, on ANSI terminals.","items":[[3,"ANSIGenericString","ansi_term","An ANSIGenericString includes a generic string type and a Style to\ndisplay that string.  ANSIString and ANSIByteString are aliases for\nthis type on str and [u8], respectively.",null,null],[3,"Prefix","","Like `ANSIString`, but only displays the style prefix.",null,null],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",null,null],[3,"Infix","","Like `ANSIString`, but only displays the difference between two\nstyles.",null,null],[3,"Style","","A style is a collection of properties that can format a string\nusing ANSI escape codes.",null,null],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order to be\nwritten with a minimum of control characters.",null,null],[12,"0","","",0,null],[4,"Colour","","A colour is one specific type of ANSI escape code, and can refer\nto either the foreground or background colour.",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",1,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",1,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",1,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",1,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",1,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",1,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",1,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",1,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour terminal\nenvironments.",1,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",1,null],[5,"ANSIStrings","","A function to construct an ANSIStrings instance.",null,null],[5,"ANSIByteStrings","","A function to construct an ANSIByteStrings instance.",null,null],[6,"ANSIString","","An ANSI String is a string coupled with the Style to display it\nin a terminal.",null,null],[6,"ANSIByteString","","An ANSIByteString represents a formatted series of bytes.  Use\nANSIByteString when styling text with an unknown encoding.",null,null],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be written with a\nminimum of control characters.",null,null],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to be\nwritten with a minimum of control characters.",null,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",6,null],[11,"write_to","","Write an ANSIByteString to an io::Write.  This writes the escape\nsequences for the associated Style around the bytes.",7,null],[11,"from","","",2,{"inputs":[{"name":"i"}],"output":{"name":"ansigenericstring"}}],[11,"deref","","",2,null],[11,"fmt","","",3,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"normal","","Return a Style with the foreground colour set to this colour.",1,null],[11,"paint","","Paints the given text with this colour, returning an ANSI string.\nThis is a short-cut so you don&#39;t have to use Blue.normal() just\nto get blue text.",1,null],[11,"prefix","","The prefix for this colour.",1,null],[11,"suffix","","The suffix for this colour.",1,null],[11,"infix","","The infix between this colour and another.",1,null],[11,"bold","","Returns a Style with the bold property set.",1,null],[11,"dimmed","","Returns a Style with the dimmed property set.",1,null],[11,"italic","","Returns a Style with the italic property set.",1,null],[11,"underline","","Returns a Style with the underline property set.",1,null],[11,"blink","","Returns a Style with the blink property set.",1,null],[11,"reverse","","Returns a Style with the reverse property set.",1,null],[11,"hidden","","Returns a Style with the hidden property set.",1,null],[11,"strikethrough","","Returns a Style with the strikethrough property set.",1,null],[11,"on","","Returns a Style with the background colour property set.",1,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"new","","Creates a new Style with no differences.",8,{"inputs":[],"output":{"name":"style"}}],[11,"paint","","Paints the given text with this colour, returning an ANSI string.",8,null],[11,"prefix","","The prefix for this style.",8,null],[11,"suffix","","The suffix for this style.",8,null],[11,"infix","","The infix between this style and another.",8,null],[11,"bold","","Returns a Style with the bold property set.",8,null],[11,"dimmed","","Returns a Style with the dimmed property set.",8,null],[11,"italic","","Returns a Style with the italic property set.",8,null],[11,"underline","","Returns a Style with the underline property set.",8,null],[11,"blink","","Returns a Style with the blink property set.",8,null],[11,"reverse","","Returns a Style with the reverse property set.",8,null],[11,"hidden","","Returns a Style with the hidden property set.",8,null],[11,"strikethrough","","Returns a Style with the hidden property set.",8,null],[11,"fg","","Returns a Style with the foreground colour property set.",8,null],[11,"on","","Returns a Style with the background colour property set.",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"style"}}],[11,"fmt","","",9,null],[11,"write_to","","Write ANSIByteStrings to an io::Write.  This writes the minimal\nescape sequences for the associated Styles around each set of\nbytes.",10,null]],"paths":[[3,"ANSIGenericStrings"],[4,"Colour"],[3,"ANSIGenericString"],[3,"Prefix"],[3,"Suffix"],[3,"Infix"],[6,"ANSIString"],[6,"ANSIByteString"],[3,"Style"],[6,"ANSIStrings"],[6,"ANSIByteStrings"]]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
searchIndex["language_tags"] = {"doc":"Language tags can be used identify human languages, scripts e.g. Latin script, countries and\nother regions.","items":[[3,"LanguageTag","language_tags","A language tag as described in [BCP47](http://tools.ietf.org/html/bcp47).",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all\nother aspects such as script, region or spefic invariants.",0,null],[12,"extlangs","","Extended language subtags are used to identify certain specially\nselected languages that, for various historical and compatibility\nreasons, are closely identified with or tagged using an existing\nprimary language subtag.",0,null],[12,"script","","Script subtags are used to indicate the script or writing system\nvariations that distinguish the written forms of a language or its\ndialects.",0,null],[12,"region","","Region subtags are used to indicate linguistic variations associated\nwith or appropriate to a specific country, territory, or region.\nTypically, a region subtag is used to indicate variations such as\nregional dialects or usage, or region-specific spelling conventions.\nIt can also be used to indicate that content is expressed in a way\nthat is appropriate for use throughout a region, for instance,\nSpanish content tailored to be useful throughout Latin America.",0,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized\nvariations that define a language or its dialects that are not\ncovered by other available subtags.",0,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in\nvarious applications.  They are intended to identify information that\nis commonly used in association with languages or language tags but\nthat is not part of language identification.",0,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language\nthat are important in a given context by private agreement.",0,null],[4,"Error","","Defines an Error type for langtags.",null,null],[13,"DuplicateExtension","","The same extension subtag is only allowed once in a tag before the private use part.",1,null],[13,"EmptyExtension","","If an extension subtag is present, it must not be empty.",1,null],[13,"EmptyPrivateUse","","If the `x` subtag is present, it must not be empty.",1,null],[13,"ForbiddenChar","","The langtag contains a char that is not A-Z, a-z, 0-9 or the dash.",1,null],[13,"InvalidSubtag","","A subtag fails to parse, it does not match any other subtags.",1,null],[13,"InvalidLanguage","","The given language subtag is invalid.",1,null],[13,"SubtagTooLong","","A subtag may be eight characters in length at maximum.",1,null],[13,"TooManyExtlangs","","At maximum three extlangs are allowed, but zero to one extlangs are preferred.",1,null],[6,"Result","","Result type used for this library.",null,null],[17,"GRANDFATHERED","","Contains all grandfathered tags.",null,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"description","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"languagetag"}}],[11,"clone","","",0,null],[11,"matches","","Matches language tags. The first language acts as a language range, the second one is used\nas a normal language tag. None fields in the language range are ignored. If the language\ntag has more extlangs than the range these extlangs are ignored. Matches are\ncase-insensitive. `*` in language ranges are represented using `None` values. The language\nrange `*` that matches language tags is created by the default language tag:\n`let wildcard: LanguageTag = Default::default();.`",0,null],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",0,null],[11,"canonicalize","","Returns the canonical version of the language tag.",0,null],[11,"eq","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[14,"langtag","","Utility for creating simple language tags.",null,null]],"paths":[[3,"LanguageTag"],[4,"Error"]]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities\nas described in\n[Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/).","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition&#39;s characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition&#39;s characters.",null,null],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for character.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"compose","","Compose two characters into a single character, if possible.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"option"}}],[5,"canonical_combining_class","","",null,{"inputs":[{"name":"char"}],"output":{"name":"u8"}}],[5,"is_combining_mark","","Return whether the given character is a combining mark (`General_Category=Mark`)",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[17,"UNICODE_VERSION","unicode_normalization","The version of [Unicode](http://www.unicode.org/)\nthat this version of unicode-normalization is based on.",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode normalizations\nas described in\n[Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/).",null,null],[10,"nfd","","Returns an iterator over the string in Unicode Normalization Form D\n(canonical decomposition).",2,null],[10,"nfkd","","Returns an iterator over the string in Unicode Normalization Form KD\n(compatibility decomposition).",2,null],[10,"nfc","","An Iterator over the string in Unicode Normalization Form C\n(canonical decomposition followed by canonical composition).",2,null],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form KC\n(compatibility decomposition followed by canonical composition).",2,null]],"paths":[[3,"Decompositions"],[3,"Recompositions"],[8,"UnicodeNormalization"]]};
searchIndex["vec_map"] = {"doc":"A simple map based on a vector for small integer keys. Space requirements\nare O(highest integer key).","items":[[3,"VecMap","vec_map","A map optimized for small integer keys.",null,null],[3,"VacantEntry","","A vacant Entry.",null,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[3,"Iter","","An iterator over the key-value pairs of a map.",null,null],[3,"IterMut","","An iterator over the key-value pairs of a map, with the\nvalues being mutable.",null,null],[3,"Keys","","An iterator over the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",null,null],[3,"Drain","","A draining iterator over the key-value pairs of a map.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be vacant or occupied.",null,null],[13,"Vacant","","A vacant Entry",0,null],[13,"Occupied","","An occupied Entry",0,null],[11,"clone","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"hash","","",1,null],[11,"new","","Creates an empty `VecMap`.",1,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity`\nelements before resizing.",1,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"capacity","","Returns the number of elements the `VecMap` can hold without\nreallocating.",1,null],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long\nas all inserted keys are less than `len`.",1,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long as all inserted\nkeys are less than `len`.",1,null],[11,"keys","","Returns an iterator visiting all keys in ascending order of the keys.\nThe iterator&#39;s element type is `usize`.",1,null],[11,"values","","Returns an iterator visiting all values in ascending order of the keys.\nThe iterator&#39;s element type is `&amp;&#39;r V`.",1,null],[11,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys.\nThe iterator&#39;s element type is `(usize, &amp;&#39;r V)`.",1,null],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys,\nwith mutable references to the values.\nThe iterator&#39;s element type is `(usize, &amp;&#39;r mut V)`.",1,null],[11,"append","","Moves all elements from `other` into the map while overwriting existing keys.",1,null],[11,"split_off","","Splits the collection into two at the given key.",1,null],[11,"drain","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, emptying (but not consuming) the original `VecMap`.\nThe iterator&#39;s element type is `(usize, &amp;&#39;r V)`. Keeps the allocated memory for reuse.",1,null],[11,"len","","Returns the number of elements in the map.",1,null],[11,"is_empty","","Returns true if the map contains no elements.",1,null],[11,"clear","","Clears the map, removing all key-value pairs.",1,null],[11,"get","","Returns a reference to the value corresponding to the key.",1,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",1,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",1,null],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",1,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",1,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",1,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and\nreturns a mutable reference to the value in the entry.",0,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default\nfunction if empty, and returns a mutable reference to the value in the\nentry.",0,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it.",2,null],[11,"get","","Gets a reference to the value in the entry.",3,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,null],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,null],[11,"insert","","Sets the value of the entry with the OccupiedEntry&#39;s key,\nand returns the entry&#39;s old value.",3,null],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"fmt","","",1,null],[11,"from_iter","","",1,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"into_iter","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, consuming the original `VecMap`.\nThe iterator&#39;s element type is `(usize, &amp;&#39;r V)`.",1,null],[11,"extend","","",1,null],[11,"extend","","",1,null],[11,"index","","",1,null],[11,"index","","",1,null],[11,"index_mut","","",1,null],[11,"index_mut","","",1,null],[11,"clone","","",4,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"next_back","","",4,null],[11,"next","","",5,null],[11,"size_hint","","",5,null],[11,"next_back","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"next_back","","",8,null],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"next_back","","",6,null],[11,"next","","",7,null],[11,"size_hint","","",7,null],[11,"next_back","","",7,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next_back","","",9,null]],"paths":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"IntoIter"]]};
searchIndex["matches"] = {"doc":"","items":[[14,"matches","matches","",null,null],[14,"_matches_tt_as_expr_hack","","Work around &quot;error: unexpected token: `an interpolated tt`&quot;, whatever that means.",null,null],[14,"assert_matches","","",null,null],[14,"debug_assert_matches","","",null,null]],"paths":[]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers\nin either big-endian or little-endian order.","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,null],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,null],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,null],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,null],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,null],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,null],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",0,null],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,null],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,null],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,null],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,null],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,null],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,null],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,null],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,null],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,null],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",1,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",1,null],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,null],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,null],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,null],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,null],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,null],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,null],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,null],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,null],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,null],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,null],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,null],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,null],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,null],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,null],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,null],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",1,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",1,null]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["base64"] = {"doc":"","items":[[5,"encode","base64","",null,null],[5,"decode","","",null,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}]],"paths":[]};
searchIndex["dtoa"] = {"doc":"","items":[[5,"write","dtoa","",null,{"inputs":[{"name":"w"},{"name":"v"}],"output":{"name":"result"}}],[8,"Floating","","",null,null],[10,"write","","",0,null],[14,"diyfp","","",null,null],[14,"dtoa","","",null,null]],"paths":[[8,"Floating"]]};
searchIndex["utf8_ranges"] = {"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar values to equivalent\nranges of UTF-8 bytes. This is useful for constructing byte based automatons\nthat need to embed UTF-8 decoding.","items":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",0,null],[12,"end","","End of byte range (inclusive).",0,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",1,null],[13,"Two","","Two successive byte ranges.",1,null],[13,"Three","","Three successive byte ranges.",1,null],[13,"Four","","Four successive byte ranges.",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,null],[11,"len","","Returns the number of byte ranges in this sequence.",1,null],[11,"matches","","Returns true if and only if a prefix of `bytes` matches this sequence\nof byte ranges.",1,null],[11,"fmt","","",1,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"matches","","Returns true if and only if the given byte is in this range.",0,null],[11,"fmt","","",0,null],[11,"new","","Create a new iterator over UTF-8 byte ranges for the scalar value range\ngiven.",2,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"self"}}],[11,"next","","",2,null]],"paths":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]};
searchIndex["httparse"] = {"doc":"# httparse","items":[[3,"InvalidChunkSize","httparse","An error in parsing a chunk size.",null,null],[3,"Request","","A parsed Request.",null,null],[12,"method","","The request method, such as `GET`.",0,null],[12,"path","","The request path, such as `/about-us`.",0,null],[12,"version","","The request version, such as `HTTP/1.1`.",0,null],[12,"headers","","The request headers.",0,null],[3,"Response","","A parsed Response.",null,null],[12,"version","","The response version, such as `HTTP/1.1`.",1,null],[12,"code","","The response code, such as `200`.",1,null],[12,"reason","","The response reason-phrase, such as `OK`.",1,null],[12,"headers","","The response headers.",1,null],[3,"Header","","Represents a parsed header.",null,null],[12,"name","","The name portion of a header.",2,null],[12,"value","","The value portion of a header.",2,null],[4,"Error","","An error in parsing.",null,null],[13,"HeaderName","","Invalid byte in header name.",3,null],[13,"HeaderValue","","Invalid byte in header value.",3,null],[13,"NewLine","","Invalid byte in new line.",3,null],[13,"Status","","Invalid byte in Response status.",3,null],[13,"Token","","Invalid byte where token is required.",3,null],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",3,null],[13,"Version","","Invalid byte in HTTP version.",3,null],[4,"Status","","The result of a successful parse pass.",null,null],[13,"Complete","","The completed result.",4,null],[13,"Partial","","A partial result.",4,null],[5,"parse_headers","","Parse a buffer of bytes as headers.",null,null],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",null,null],[6,"Result","","A Result of any parsing action.",null,null],[17,"EMPTY_HEADER","","An empty header, useful for constructing a `Header` array to pass in for\nparsing.",null,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",5,null],[11,"eq","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"is_complete","","Convenience method to check if status is complete.",4,null],[11,"is_partial","","Convenience method to check if status is partial.",4,null],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if the status is\n`Partial`.",4,null],[11,"new","","Creates a new Request, using a slice of headers you allocate.",0,null],[11,"parse","","Try to parse a buffer of bytes into the Request.",0,null],[11,"new","","Creates a new `Response` using a slice of `Header`s you have allocated.",1,null],[11,"parse","","Try to parse a buffer of bytes into this `Response`.",1,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"],[3,"InvalidChunkSize"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining #[cfg] if-else statements.","items":[[14,"cfg_if","cfg_if","",null,null]],"paths":[]};
searchIndex["unicode_segmentation"] = {"doc":"Iterators which split strings on Grapheme Cluster or Word boundaries, according\nto the [Unicode Standard Annex #29](http://www.unicode.org/reports/tr29/) rules.","items":[[3,"Graphemes","unicode_segmentation","External iterator for a string&#39;s\n[grapheme clusters](http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries).",null,null],[3,"GraphemeIndices","","External iterator for grapheme clusters and byte offsets.",null,null],[3,"UWordBounds","","External iterator for a string&#39;s\n[word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries).",null,null],[3,"UWordBoundIndices","","External iterator for word boundaries and byte offsets.",null,null],[3,"UnicodeWords","","An iterator over the substrings of a string which, after splitting the string on\n[word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries),\ncontain any characters with the\n[Alphabetic](http://unicode.org/reports/tr44/#Alphabetic)\nproperty, or with\n[General_Category=Number](http://unicode.org/reports/tr44/#General_Category_Values).",null,null],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"next_back","","",0,null],[11,"clone","","",1,null],[11,"size_hint","","",1,null],[11,"next","","",1,null],[11,"next_back","","",1,null],[11,"next","","",2,null],[11,"next_back","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"next_back","","",4,null],[11,"size_hint","","",3,null],[11,"next","","",3,null],[11,"next_back","","",3,null],[17,"UNICODE_VERSION","","The version of [Unicode](http://www.unicode.org/)\nthat this version of unicode-segmentation is based on.",null,null],[8,"UnicodeSegmentation","","Methods for segmenting strings according to\n[Unicode Standard Annex #29](http://www.unicode.org/reports/tr29/).",null,null],[10,"graphemes","","Returns an iterator over the [grapheme clusters][graphemes] of `self`.",5,null],[10,"grapheme_indices","","Returns an iterator over the grapheme clusters of `self` and their\nbyte offsets. See `graphemes()` for more information.",5,null],[10,"unicode_words","","Returns an iterator over the words of `self`, separated on\n[UAX#29 word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries).",5,null],[10,"split_word_bounds","","Returns an iterator over substrings of `self` separated on\n[UAX#29 word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries).",5,null],[10,"split_word_bound_indices","","Returns an iterator over substrings of `self`, split on UAX#29 word boundaries,\nand their offsets. See `split_word_bounds()` for more information.",5,null]],"paths":[[3,"GraphemeIndices"],[3,"Graphemes"],[3,"UnicodeWords"],[3,"UWordBounds"],[3,"UWordBoundIndices"],[8,"UnicodeSegmentation"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,null],[10,"log","","Logs the `LogRecord`.",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,null],[11,"args","","The message body.",3,null],[11,"metadata","","Metadata about the log directive.",3,null],[11,"location","","The location of the log directive.",3,null],[11,"level","","The verbosity level of the message.",3,null],[11,"target","","The name of the target of the directive.",3,null],[11,"level","","The verbosity level of the message.",4,null],[11,"target","","The name of the target of the directive.",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"module_path","","The module path of the message.",5,null],[11,"file","","The source file containing the message.",5,null],[11,"line","","The line containing the message.",5,null],[11,"fmt","","",6,null],[11,"get","","Gets the current maximum log level filter.",6,null],[11,"set","","Sets the maximum log level.",6,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"description","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"description","","",8,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["strsim"] = {"doc":"This library implements string similarity metrics. Includes Hamming,\nLevenshtein, Jaro, and Jaro-Winkler.","items":[[4,"StrSimError","strsim","",null,null],[13,"DifferentLengthArgs","","",0,null],[5,"hamming","","Calculates the number of positions in the two strings where the characters\ndiffer. Returns an error if the strings have different lengths.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"hammingresult"}}],[5,"jaro","","Calculates the Jaro similarity between two strings. The returned value\nis between 0.0 and 1.0 (higher value means more similar).",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"f64"}}],[5,"jaro_against_vec","","Calculates the Jaro distance between a string and each string in a vector.\nReturns a vector of corresponding values between 0.0 and 1.0 (higher value\nmeans more similar).",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":{"name":"vec"}}],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common prefix.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"f64"}}],[5,"jaro_winkler_against_vec","","Calculates the Jaro-Winkler distances between a string and each string\nin a vector. Returns a vector of corresponding values.",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":{"name":"vec"}}],[5,"levenshtein","","Calculates the minimum number of insertions, deletions, and substitutions\nrequired to change one string into the other.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"usize"}}],[5,"levenshtein_against_vec","","Calculates the Levenshtein distance between a string and each string in a\nvector. Returns a vector of corresponding values.",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":{"name":"vec"}}],[5,"damerau_levenshtein","","Same as Levenshtein but allows for adjacent transpositions.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"usize"}}],[5,"damerau_levenshtein_against_vec","","Calculates the Damerau-Levenshtein distance between a string and each string\nin a vector. Returns a vector of corresponding values.",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":{"name":"vec"}}],[6,"HammingResult","","",null,null],[11,"fmt","","",0,null],[11,"eq","","",0,null]],"paths":[[4,"StrSimError"]]};
searchIndex["typeable"] = {"doc":"Exposes `Typeable`, which exposes the `get_type` method, which gives\nthe `TypeId` of any &#39;static type.","items":[[8,"Typeable","typeable","Universal mixin trait for adding a `get_type` method.",null,null],[11,"get_type","","Get the `TypeId` of this object.",0,null]],"paths":[[8,"Typeable"]]};
searchIndex["traitobject"] = {"doc":"# traitobject","items":[[5,"data","traitobject","Get the data pointer from this trait object.",null,null],[5,"data_mut","","Get the data pointer from this trait object, mutably.",null,null]],"paths":[]};
searchIndex["itoa"] = {"doc":"","items":[[5,"write","itoa","",null,{"inputs":[{"name":"w"},{"name":"v"}],"output":{"name":"result"}}],[8,"Integer","","",null,null],[10,"write","","",0,null]],"paths":[[8,"Integer"]]};
searchIndex["unicode_width"] = {"doc":"Determine displayed width of `char` and `str` types according to\n[Unicode Standard Annex #11](http://www.unicode.org/reports/tr11/)\nrules.","items":[[17,"UNICODE_VERSION","unicode_width","The version of [Unicode](http://www.unicode.org/)\nthat this version of unicode-width is based on.",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode characters.",null,null],[10,"width","","Returns the character&#39;s displayed width in columns, or `None` if the\ncharacter is a control character other than `&#39;\\x00&#39;`.",0,null],[10,"width_cjk","","Returns the character&#39;s displayed width in columns, or `None` if the\ncharacter is a control character other than `&#39;\\x00&#39;`.",0,null],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",null,null],[10,"width","","Returns the string&#39;s displayed width in columns.",1,null],[10,"width_cjk","","Returns the string&#39;s displayed width in columns.",1,null]],"paths":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
initSearch(searchIndex);
